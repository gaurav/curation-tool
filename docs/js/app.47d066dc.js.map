{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/icons/ModifiedIcon.vue?c8a0","webpack:///./src/components/icons/ModifiedIcon.vue?1399","webpack:///./src/App.vue?4241","webpack:///src/components/phylogeny/Phylotree.vue","webpack:///./src/store/modules/phyloref.js","webpack:///./src/store/modules/owlterms.js","webpack:///src/App.vue","webpack:///./src/components/TopNavigationBar.vue?e4d7","webpack:///./src/components/TopNavigationBar.vue?8313","webpack:///./src/components/cards/ModifiedCard.vue","webpack:///./src/components/modals/AboutCurationToolModal.vue","webpack:///./src/App.vue?1160","webpack:///src/components/phyloref/PhylorefView.vue","webpack:///./src/components/modals/AdvancedOptionsModal.vue","webpack:///./src/components/modals/AboutCurationToolModal.vue?840f","webpack:///src/components/TopNavigationBar.vue","webpack:///./src/components/phyx/PhyxView.vue?194c","webpack:///./src/components/phyx/PhyxView.vue?d029","webpack:///./src/components/modals/AdvancedOptionsModal.vue?9a46","webpack:///./src/App.vue?bff9","webpack:///./src/store/index.js","webpack:///./src/components/modals/AboutCurationToolModal.vue?bba1","webpack:///./src/components/modals/AboutCurationToolModal.vue?4833","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/components/phyloref/SpecifierView.vue?a6b0","webpack:///./src/components/phyloref/SpecifierView.vue?ff02","webpack:///./src/components/icons/ModifiedIcon.vue","webpack:///src/components/icons/ModifiedIcon.vue","webpack:///./src/main.js","webpack:///./src/components/sidebar/Sidebar.vue?32e6","webpack:///./src/components/sidebar/Sidebar.vue?cc83","webpack:///./src/components/TopNavigationBar.vue?d79a","webpack:///./src/components/phyloref/SpecifierView.vue?9c80","webpack:///./src/components/phyloref/PhylorefView.vue","webpack:///./src/components/modals/AdvancedOptionsModal.vue?65f1","webpack:///./src/components/modals/AdvancedOptionsModal.vue?9eb6","webpack:///./src/components/phyx/PhyxView.vue","webpack:///src/components/phyx/PhyxView.vue","webpack:///./src/components/cards/ModifiedCard.vue?b13e","webpack:///./src/components/cards/ModifiedCard.vue?758b","webpack:///./src/components/phylogeny/Phylotree.vue?ec67","webpack:///./src/components/phylogeny/Phylotree.vue?5403","webpack:///./src/components/phyx/PhyxView.vue?46cb","webpack:///./src/components/phyloref/SpecifierView.vue","webpack:///src/components/sidebar/Sidebar.vue","webpack:///src/components/phylogeny/PhylogenyView.vue","webpack:///./src/components/phylogeny/Phylotree.vue?1b7f","webpack:///./src/components/phylogeny/Phylotree.vue?bf5d","webpack:///./src/store/modules/phylogeny.js","webpack:///src/components/modals/AboutCurationToolModal.vue","webpack:///./src/App.vue?271e","webpack:///./src/App.vue?8c21","webpack:///./src/components/phyloref/PhylorefView.vue?e450","webpack:///./src/components/phyloref/PhylorefView.vue?93cb","webpack:///./src/components/cards/ModifiedCard.vue?6f2d","webpack:///./src/components/phyloref/PhylorefView.vue?c50d","webpack:///./src/components/phylogeny/Phylotree.vue?ad27","webpack:///./src/components/icons/ModifiedIcon.vue?bcb7","webpack:///src/components/cards/ModifiedCard.vue","webpack:///./src/components/phylogeny/PhylogenyView.vue?56a5","webpack:///src/components/modals/AdvancedOptionsModal.vue","webpack:///./src/components/sidebar/Sidebar.vue","webpack:///./src/components/phylogeny/PhylogenyView.vue","webpack:///./src/store/modules/ui.js","webpack:///./src/components/sidebar/Sidebar.vue?8b72","webpack:///./src/components/phylogeny/PhylogenyView.vue?76af","webpack:///./src/components/phylogeny/PhylogenyView.vue?ca25","webpack:///./src/components/TopNavigationBar.vue","webpack:///./src/store/modules/phyx.js","webpack:///src/components/phyloref/SpecifierView.vue"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","app","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","title","message","size","icon","_e","staticRenderFns","__webpack_exports__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","_lodash","_phyx","props","phylogeny","phyloref","spacingX","type","Number","default","phylogenyIndex","String","uniqueId","pinningNodes","pinningNodeChildrenIRIs","Set","computed","reasoningResults","$store","state","phyx","newickAsString","newick","parsedNewick","PhylogenyWrapper","getParsedNewickWithIRIs","getters","getBaseURIForPhylogeny","d3","layout","newick_parser","newickErrors","has","json","error","tree","_this","phylotree","svg","select","concat","options","internal-names","transitions","left-right-spacing","top-bottom-spacing","style_nodes","element","textLabel","selectAll","children","empty","append","classed","text","attr","getExpectedNodeLabelsOnPhylogeny","includes","undefined","getResolvedNodesForPhylogeny","recurseNodes","node","add","tunits","getTaxonomicUnitsForNodeLabel","internalSpecifiers","some","specifier","getNodeLabelsMatchedBySpecifier","externalSpecifiers","style_edges","source","watch","redrawTree","mounted","methods","func","_this2","nodeCount","arguments","parentCount","nextID","forEach","child","$","width","spacing_x","update","_vue","_interopRequireDefault","nodeLabels","phylorefLabel","label","getNodeLabelsFromNewick","nodeLabel","additionalNodeProperties","expectedPhylorefs","expectedPhyloreferenceNamed","Array","from","sort","rootState","flagReturnShortURIs","phylorefURI","getBaseURIForPhyloref","phylorefs","nodesResolved","phylogenyURI","nodeURIs","filter","uri","map","iri","replace","mutations","setPhylorefProps","payload","Error","Vue","set","cladeDefinition","curatorComments","addSpecifier","referencesTaxonomicUnits","deleteSpecifier","indexOf","setSpecifierProps","verbatimSpecifier","setSpecifierType","specifierType","setSpecifierPart","specifierPart","scientificName","occurrenceID","updateSpecifierExternalReference","externalReferences","fromExternalReference","toExternalReference","addToSpecifier","externalReference","includesSpecimens","specimen","scientificNames","deleteFromSpecifier","phyxBaseURI","currentPhyx","phylogenies","_vuex","_TopNavigationBar","_Sidebar","_PhylogenyView","_PhylorefView","_SpecifierView","_PhyxView","_AboutCurationToolModal","_AdvancedOptionsModal","components","TopNavigationBar","Sidebar","PhyxView","PhylogenyView","PhylorefView","SpecifierView","AboutCurationToolModal","AdvancedOptionsModal","mapState","CURATION_TOOL_VERSION","display","ui","loadedPhyx","created","on","confirmationMessage","isEqual","href","_v","_s","version","_m","onclick","_ModifiedCard_vue_vue_type_template_id_1e4060c8___WEBPACK_IMPORTED_MODULE_0__","_ModifiedCard_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__","__WEBPACK_IMPORT_KEY__","_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__","component","__file","_AboutCurationToolModal_vue_vue_type_template_id_0f847d11___WEBPACK_IMPORTED_MODULE_0__","_AboutCurationToolModal_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__","_node_modules_cache_loader_dist_cjs_js_ref_12_0_node_modules_thread_loader_dist_cjs_js_node_modules_babel_loader_lib_index_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__","_node_modules_cache_loader_dist_cjs_js_ref_12_0_node_modules_thread_loader_dist_cjs_js_node_modules_babel_loader_lib_index_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default","_ModifiedCard","_Phylotree","ModifiedCard","Phylotree","_objectSpread2","selectedPhylorefLabel","selectedPhyloref","commit","selectedCladeDefinition","selectedCuratorComments","selectedPhylogeny","getNodeLabels","nodeType","getExpectedNodeLabels","PhylorefWrapper","getSpecifierLabel","getResolvedNodes","_AdvancedOptionsModal_vue_vue_type_template_id_1dd25cd7___WEBPACK_IMPORTED_MODULE_0__","_AdvancedOptionsModal_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__","_node_modules_cache_loader_dist_cjs_js_ref_12_0_node_modules_thread_loader_dist_cjs_js_node_modules_babel_loader_lib_index_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_AboutCurationToolModal_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__","_node_modules_cache_loader_dist_cjs_js_ref_12_0_node_modules_thread_loader_dist_cjs_js_node_modules_babel_loader_lib_index_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_AboutCurationToolModal_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default","_l","colspan","phylorefIndex","click","$event","getPhylorefExpectedNodeLabels","hasReasoningResults","getNodeLabelsResolvedByPhyloref","_node_modules_cache_loader_dist_cjs_js_ref_12_0_node_modules_thread_loader_dist_cjs_js_node_modules_babel_loader_lib_index_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_AdvancedOptionsModal_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__","_node_modules_cache_loader_dist_cjs_js_ref_12_0_node_modules_thread_loader_dist_cjs_js_node_modules_babel_loader_lib_index_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_AdvancedOptionsModal_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default","_App_vue_vue_type_template_id_4429c0c6___WEBPACK_IMPORTED_MODULE_0__","_App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__","_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__","_phylogeny","_phyloref","_ui","_owlterms","use","Vuex","debug","process","Store","owlterms","strict","id","tabindex","role","data-dismiss","aria-label","aria-hidden","./af","./af.js","./ar","./ar-dz","./ar-dz.js","./ar-kw","./ar-kw.js","./ar-ly","./ar-ly.js","./ar-ma","./ar-ma.js","./ar-sa","./ar-sa.js","./ar-tn","./ar-tn.js","./ar.js","./az","./az.js","./be","./be.js","./bg","./bg.js","./bm","./bm.js","./bn","./bn.js","./bo","./bo.js","./br","./br.js","./bs","./bs.js","./ca","./ca.js","./cs","./cs.js","./cv","./cv.js","./cy","./cy.js","./da","./da.js","./de","./de-at","./de-at.js","./de-ch","./de-ch.js","./de.js","./dv","./dv.js","./el","./el.js","./en-SG","./en-SG.js","./en-au","./en-au.js","./en-ca","./en-ca.js","./en-gb","./en-gb.js","./en-ie","./en-ie.js","./en-il","./en-il.js","./en-nz","./en-nz.js","./eo","./eo.js","./es","./es-do","./es-do.js","./es-us","./es-us.js","./es.js","./et","./et.js","./eu","./eu.js","./fa","./fa.js","./fi","./fi.js","./fo","./fo.js","./fr","./fr-ca","./fr-ca.js","./fr-ch","./fr-ch.js","./fr.js","./fy","./fy.js","./ga","./ga.js","./gd","./gd.js","./gl","./gl.js","./gom-latn","./gom-latn.js","./gu","./gu.js","./he","./he.js","./hi","./hi.js","./hr","./hr.js","./hu","./hu.js","./hy-am","./hy-am.js","./id","./id.js","./is","./is.js","./it","./it-ch","./it-ch.js","./it.js","./ja","./ja.js","./jv","./jv.js","./ka","./ka.js","./kk","./kk.js","./km","./km.js","./kn","./kn.js","./ko","./ko.js","./ku","./ku.js","./ky","./ky.js","./lb","./lb.js","./lo","./lo.js","./lt","./lt.js","./lv","./lv.js","./me","./me.js","./mi","./mi.js","./mk","./mk.js","./ml","./ml.js","./mn","./mn.js","./mr","./mr.js","./ms","./ms-my","./ms-my.js","./ms.js","./mt","./mt.js","./my","./my.js","./nb","./nb.js","./ne","./ne.js","./nl","./nl-be","./nl-be.js","./nl.js","./nn","./nn.js","./pa-in","./pa-in.js","./pl","./pl.js","./pt","./pt-br","./pt-br.js","./pt.js","./ro","./ro.js","./ru","./ru.js","./sd","./sd.js","./se","./se.js","./si","./si.js","./sk","./sk.js","./sl","./sl.js","./sq","./sq.js","./sr","./sr-cyrl","./sr-cyrl.js","./sr.js","./ss","./ss.js","./sv","./sv.js","./sw","./sw.js","./ta","./ta.js","./te","./te.js","./tet","./tet.js","./tg","./tg.js","./th","./th.js","./tl-ph","./tl-ph.js","./tlh","./tlh.js","./tr","./tr.js","./tzl","./tzl.js","./tzm","./tzm-latn","./tzm-latn.js","./tzm.js","./ug-cn","./ug-cn.js","./uk","./uk.js","./ur","./ur.js","./uz","./uz-latn","./uz-latn.js","./uz.js","./vi","./vi.js","./x-pseudo","./x-pseudo.js","./yo","./yo.js","./zh-cn","./zh-cn.js","./zh-hk","./zh-hk.js","./zh-tw","./zh-tw.js","webpackContext","req","webpackContextResolve","e","code","keys","resolve","compare","selectedSpecifier","compare-to","loadedSpecifier","for","directives","rawName","expression","change","$$selectedVal","target","selected","val","_value","multiple","modifiers","trim","placeholder","domProps","input","composing","selectedVerbatimSpecifier","blur","$forceUpdate","selectedSpecifierFirstTUnit","sciname","index","wrappedScientificName","genus","specificEpithet","lazy","addNewScientificName","occurenceID","wrappedSpecimen","institutionCode","collectionCode","catalogNumber","addNewSpecimen","extref","addNewExternalReference","_ModifiedIcon_vue_vue_type_template_id_54102662___WEBPACK_IMPORTED_MODULE_0__","_ModifiedIcon_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__","_fontawesomeSvgCore","_freeSolidSvgIcons","_vueFontawesome","library","faExclamationCircle","FontAwesomeIcon","compareTo","dataChanged","_bootstrapVue","_vueResize","_App","_store","require","BootstrapVue","VueResize","config","productionTip","el","store","h","App","promptAndSetDict","reasonOverPhyloreferences","loadPhyxFromFileInputById","downloadAsJSON","example","loadPhyxFromURL","url","class","active","specifierIndex","active border-dark","_node_modules_cache_loader_dist_cjs_js_ref_12_0_node_modules_thread_loader_dist_cjs_js_node_modules_babel_loader_lib_index_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_TopNavigationBar_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__","_node_modules_cache_loader_dist_cjs_js_ref_12_0_node_modules_thread_loader_dist_cjs_js_node_modules_babel_loader_lib_index_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_TopNavigationBar_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_cache_loader_dist_cjs_js_ref_12_0_node_modules_thread_loader_dist_cjs_js_node_modules_babel_loader_lib_index_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_SpecifierView_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__","_node_modules_cache_loader_dist_cjs_js_ref_12_0_node_modules_thread_loader_dist_cjs_js_node_modules_babel_loader_lib_index_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_SpecifierView_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default","_PhylorefView_vue_vue_type_template_id_7d6b7495___WEBPACK_IMPORTED_MODULE_0__","_PhylorefView_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__","JSONParsingError","staticStyle","margin","rows","phyxAsJSON","downloadAsJSONLD","_PhyxView_vue_vue_type_template_id_7d30e578___WEBPACK_IMPORTED_MODULE_0__","_PhyxView_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__","getNodesById","nodeId","parsed","searchNode","results","resolvedNodes","reduce","a","b","_node_modules_cache_loader_dist_cjs_js_ref_12_0_node_modules_thread_loader_dist_cjs_js_node_modules_babel_loader_lib_index_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Phylotree_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__","_node_modules_cache_loader_dist_cjs_js_ref_12_0_node_modules_thread_loader_dist_cjs_js_node_modules_babel_loader_lib_index_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Phylotree_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Phylotree_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Phylotree_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_cache_loader_dist_cjs_js_ref_12_0_node_modules_thread_loader_dist_cjs_js_node_modules_babel_loader_lib_index_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_PhyxView_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__","_node_modules_cache_loader_dist_cjs_js_ref_12_0_node_modules_thread_loader_dist_cjs_js_node_modules_babel_loader_lib_index_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_PhyxView_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default","_SpecifierView_vue_vue_type_template_id_adedbbb0___WEBPACK_IMPORTED_MODULE_0__","_SpecifierView_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__","_filesaver","_ModifiedIcon","ModifiedIcon","reasoningInProgress","examplePHYXURLs","mapGetters","dict","response","prompt","getJSON","done","fail","status","alert","statusText","fileInputId","FileReader","$fileInput","prop","_$fileInput$prop","_$fileInput$prop2","_slicedToArray2","file","fr","onload","lines","JSON","parse","readAsText","content","getPhyxAsJSON","jsonFile","File","saveAs","_this3","post","jsonld","stringify","PHYXWrapper","asJSONLD","jqXHR","textStatus","errorThrown","responseJSON","always","_newickJs","phylogenyLabel","phylogenyDescription","description","phylogenyNewick","phylogenyNewickErrors","newickTrimmed","errors","parenLevels","x","ex","notify","_parseNewick","graph","_graph","vertices","arcs","vertex","arc","allLabels","internalLabels","representsTaxonomicUnits","getTaxonomicUnitsFromNodeLabel","exec","binomialName","specifierTUnits","nodeTUnits","tunit1","tunit2","TaxonomicUnitMatcher","matched","setPhylogenyProps","readonly","join","height","overflow","aria-labelledby","togglePhylorefExpectedNodeLabel","phylogeny-index","data-toggle","aria-haspopup","aria-expanded","_node_modules_cache_loader_dist_cjs_js_ref_12_0_node_modules_thread_loader_dist_cjs_js_node_modules_babel_loader_lib_index_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ModifiedCard_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__","_node_modules_cache_loader_dist_cjs_js_ref_12_0_node_modules_thread_loader_dist_cjs_js_node_modules_babel_loader_lib_index_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ModifiedCard_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_cache_loader_dist_cjs_js_ref_12_0_node_modules_thread_loader_dist_cjs_js_node_modules_babel_loader_lib_index_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_PhylorefView_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__","_node_modules_cache_loader_dist_cjs_js_ref_12_0_node_modules_thread_loader_dist_cjs_js_node_modules_babel_loader_lib_index_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_PhylorefView_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default","_Phylotree_vue_vue_type_template_id_10daa235___WEBPACK_IMPORTED_MODULE_0__","_Phylotree_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__","_node_modules_cache_loader_dist_cjs_js_ref_12_0_node_modules_thread_loader_dist_cjs_js_node_modules_babel_loader_lib_index_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ModifiedIcon_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__","_node_modules_cache_loader_dist_cjs_js_ref_12_0_node_modules_thread_loader_dist_cjs_js_node_modules_babel_loader_lib_index_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ModifiedIcon_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_cache_loader_dist_cjs_js_ref_12_0_node_modules_thread_loader_dist_cjs_js_node_modules_babel_loader_lib_index_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_PhylogenyView_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__","_node_modules_cache_loader_dist_cjs_js_ref_12_0_node_modules_thread_loader_dist_cjs_js_node_modules_babel_loader_lib_index_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_PhylogenyView_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default","wrapped","jsonldFile","_Sidebar_vue_vue_type_template_id_db2aacd2___WEBPACK_IMPORTED_MODULE_0__","_Sidebar_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__","_PhylogenyView_vue_vue_type_template_id_7bcfea4b___WEBPACK_IMPORTED_MODULE_0__","_PhylogenyView_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__","changeDisplay","newDisplay","_node_modules_cache_loader_dist_cjs_js_ref_12_0_node_modules_thread_loader_dist_cjs_js_node_modules_babel_loader_lib_index_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Sidebar_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__","_node_modules_cache_loader_dist_cjs_js_ref_12_0_node_modules_thread_loader_dist_cjs_js_node_modules_babel_loader_lib_index_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Sidebar_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default","errorIndex","_TopNavigationBar_vue_vue_type_template_id_70573c7a___WEBPACK_IMPORTED_MODULE_0__","_TopNavigationBar_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__","setCurrentPhyx","setLoadedPhyx","createEmptyPhyloref","createEmptyPhylogeny","setReasoningResults","loadedPhyloref","selectedTUnit","tunit","ScientificNameWrapper","SpecimenWrapper"],"mappings":"aACA,SAAAA,EAAAC,GAQA,IAPA,IAMAC,EAAAC,EANAC,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GACAK,EAAAL,EAAA,GAIAM,EAAA,EAAAC,EAAA,GACQD,EAAAH,EAAAK,OAAoBF,IAC5BJ,EAAAC,EAAAG,GACAG,EAAAP,IACAK,EAAAG,KAAAD,EAAAP,GAAA,IAEAO,EAAAP,GAAA,EAEA,IAAAD,KAAAG,EACAO,OAAAC,UAAAC,eAAAC,KAAAV,EAAAH,KACAc,EAAAd,GAAAG,EAAAH,IAGAe,KAAAhB,GAEA,MAAAO,EAAAC,OACAD,EAAAU,OAAAV,GAOA,OAHAW,EAAAR,KAAAS,MAAAD,EAAAb,GAAA,IAGAe,IAEA,SAAAA,IAEA,IADA,IAAAC,EACAf,EAAA,EAAiBA,EAAAY,EAAAV,OAA4BF,IAAA,CAG7C,IAFA,IAAAgB,EAAAJ,EAAAZ,GACAiB,GAAA,EACAC,EAAA,EAAkBA,EAAAF,EAAAd,OAA2BgB,IAAA,CAC7C,IAAAC,EAAAH,EAAAE,GACA,IAAAf,EAAAgB,KAAAF,GAAA,GAEAA,IACAL,EAAAQ,OAAApB,IAAA,GACAe,EAAAM,IAAAC,EAAAN,EAAA,KAGA,OAAAD,EAIA,IAAAQ,EAAA,GAKApB,EAAA,CACAqB,IAAA,GAGAZ,EAAA,GAGA,SAAAS,EAAA1B,GAGA,GAAA4B,EAAA5B,GACA,OAAA4B,EAAA5B,GAAA8B,QAGA,IAAAC,EAAAH,EAAA5B,GAAA,CACAK,EAAAL,EACAgC,GAAA,EACAF,QAAA,IAUA,OANAhB,EAAAd,GAAAa,KAAAkB,EAAAD,QAAAC,IAAAD,QAAAJ,GAGAK,EAAAC,GAAA,EAGAD,EAAAD,QAKAJ,EAAAO,EAAAnB,EAGAY,EAAAQ,EAAAN,EAGAF,EAAAS,EAAA,SAAAL,EAAAM,EAAAC,GACAX,EAAAY,EAAAR,EAAAM,IACA1B,OAAA6B,eAAAT,EAAAM,EAAA,CAA0CI,YAAA,EAAAC,IAAAJ,KAK1CX,EAAAgB,EAAA,SAAAZ,GACA,qBAAAa,eAAAC,aACAlC,OAAA6B,eAAAT,EAAAa,OAAAC,YAAA,CAAwDC,MAAA,WAExDnC,OAAA6B,eAAAT,EAAA,cAAiDe,OAAA,KAQjDnB,EAAAoB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAAnB,EAAAmB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,kBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAvC,OAAAwC,OAAA,MAGA,GAFAxB,EAAAgB,EAAAO,GACAvC,OAAA6B,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAAnB,EAAAS,EAAAc,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAvB,EAAA2B,EAAA,SAAAtB,GACA,IAAAM,EAAAN,KAAAiB,WACA,WAA2B,OAAAjB,EAAA,YAC3B,WAAiC,OAAAA,GAEjC,OADAL,EAAAS,EAAAE,EAAA,IAAAA,GACAA,GAIAX,EAAAY,EAAA,SAAAgB,EAAAC,GAAsD,OAAA7C,OAAAC,UAAAC,eAAAC,KAAAyC,EAAAC,IAGtD7B,EAAA8B,EAAA,kBAEA,IAAAC,EAAAC,OAAA,gBAAAA,OAAA,oBACAC,EAAAF,EAAAhD,KAAA2C,KAAAK,GACAA,EAAAhD,KAAAX,EACA2D,IAAAG,QACA,QAAAvD,EAAA,EAAgBA,EAAAoD,EAAAlD,OAAuBF,IAAAP,EAAA2D,EAAApD,IACvC,IAAAU,EAAA4C,EAIA1C,EAAAR,KAAA,qBAEAU,kFCtJA,IAAA0C,EAAA,WAA0B,IAAAC,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAF,EAAA,YAAAI,EAAA,OAAmCE,YAAA,cAAAC,MAAA,CAAiCC,MAAAR,EAAAS,UAAqB,CAAAL,EAAA,mBAAwBG,MAAA,CAAOG,KAAA,KAAAC,KAAA,yBAAyC,GAAAX,EAAAY,MAC1PC,EAAA,GCDAjD,EAAAS,EAAAyC,EAAA,sBAAAf,IAAAnC,EAAAS,EAAAyC,EAAA,sBAAAD,yCCAA,IAAAE,EAAAnD,EAAA,QAAAoD,EAAApD,EAAA2B,EAAAwB,GAAqbC,EAAG,+KCkCxb,IAAAC,EAAArD,EAAA,QACAsD,EAAAtD,EAAA,UAOA,CACAU,KAAA,YACA6C,MAAA,CACAC,UAAAxE,OACAyE,SAAAzE,OACA0E,SAAA,CACAC,KAAAC,OACAC,QAAA,IAEAC,eAAA,CACAH,KAAAI,OACAF,SAAA,EAAAR,EAAAW,cAGA3F,KAdA,WAeA,OAEA4F,aAAA,GAGAC,wBAAA,IAAAC,MAGAC,SAAA,CACAC,iBADA,WAGA,OAAAhC,KAAAiC,OAAAC,MAAAC,KAAAH,kBAEAI,eALA,WAOA,OAAApC,KAAAmB,UAAAkB,QAAA,MAEAC,aATA,WAUA,WAAArB,EAAAsB,iBAAAvC,KAAAmB,WAAAqB,wBACAxC,KAAAiC,OAAAQ,QAAAC,uBAAA1C,KAAAmB,WACAwB,GAAAC,OAAAC,gBAGAC,aAfA,WAiBA,OAAA9B,EAAA+B,KAAA/C,KAAAsC,aAAA,gBAAAtC,KAAAsC,aAAAU,KACA,SAAAhC,EAAA+B,KAAA/C,KAAAsC,aAAA,SAAAtC,KAAAsC,aAAAW,MAAA,iBAIAC,KAtBA,WAsBA,IAAAC,EAAAnD,KAEAkD,EAAAP,GAAAC,OAAAQ,YACAC,IAAAV,GAAAW,OAAA,aAAAC,OAAAvD,KAAAyB,kBACA+B,QAAA,CACAC,kBAAA,EACAC,aAAA,EACAC,qBAAA,cACAC,qBAAA,eAEAC,YAAA,SAAAC,EAAA9H,GAMA,IAAA+H,EAAAD,EAAAE,UAAA,QA8DA,IA5DA,EAAAhD,EAAA+B,KAAA/G,EAAA,cAAAA,EAAAqC,MAAArC,EAAAiI,WAGAF,EAAAG,UACAH,EAAAD,EAAAK,OAAA,QAGAJ,EAAAK,QAAA,qBACAC,KAAArI,EAAAqC,MACAiG,KAAA,aACAA,KAAA,cAOAnB,EAAAlB,OAAAQ,QAAA8B,iCAAApB,EAAAhC,UAAAgC,EAAA/B,UAAAoD,SAAAxI,EAAAqC,OAEA0F,EAAAO,KAAA,yCAAAf,OAAAJ,EAAA1B,iBACAsC,EAAAK,QAAA,gCAEAL,EAAAO,KAAA,SACAP,EAAAK,QAAA,qCAUAK,IAAAtB,EAAA/B,WAAA,EAAAJ,EAAA+B,KAAA/G,EAAA,QACAmH,EAAAlB,OAAAQ,QAAAiC,6BAAAvB,EAAAhC,UAAAgC,EAAA/B,UAAAoD,SAAAxI,EAAA,UAGAmH,EAAAvB,aAAAlF,KAAAV,GACAmH,EAAAwB,aAAA3I,EAAA,SAAA4I,GAAA,OAAAzB,EAAAtB,wBAAAgD,IAAAD,EAAA,UAGAd,EAAAM,QAAA,mBAGAN,EAAAR,OAAA,UAAAgB,KAAA,OAGAR,EAAAQ,KAAA,uCAAAf,OAAAJ,EAAA1B,mBAKA,EAAAT,EAAA+B,KAAA/G,EAAA,QACAmH,EAAAtB,wBAAAkB,IAAA/G,EAAA,SAIA8H,EAAAM,QAAA,2CAGAK,IAAAzI,EAAAqC,WAAAoG,IAAAzI,EAAAiI,SAAA,CAEA,IAAAa,EAAA3B,EAAAlB,OAAAQ,QACAsC,8BAAA5B,EAAAhC,UAAAnF,EAAAqC,MAEA,IAAAyG,EAAAtI,OACAsH,EAAAM,QAAA,wCACAK,IAAAtB,EAAA/B,YAKA,EAAAJ,EAAA+B,KAAAI,EAAA/B,SAAA,UACA+B,EAAAlB,OAAAQ,QACA8B,iCAAApB,EAAAhC,UAAAgC,EAAA/B,UACAoD,SAAAxI,EAAAqC,OAEA0F,EAAAO,KAAA,yCAAAf,OAAAJ,EAAA1B,kBAIA,EAAAT,EAAA+B,KAAAI,EAAA/B,SAAA,uBACA+B,EAAA/B,SAAA4D,mBACAC,KAAA,SAAAC,GAAA,OAAA/B,EAAAlB,OAAAQ,QACA0C,gCAAAhC,EAAAhC,UAAA+D,GACAV,SAAAxI,EAAAqC,SAEAyF,EAAAM,QAAA,+BAKA,EAAApD,EAAA+B,KAAAI,EAAA/B,SAAA,uBACA+B,EAAA/B,SAAAgE,mBACAH,KAAA,SAAAC,GAAA,OAAA/B,EAAAlB,OAAAQ,QACA0C,gCAAAhC,EAAAhC,UAAA+D,GACAV,SAAAxI,EAAAqC,SAEAyF,EAAAM,QAAA,kCAMAiB,YAAA,SAAAvB,EAAA9H,IAIA,EAAAgF,EAAA+B,KAAA/G,EAAA,YACA,EAAAgF,EAAA+B,KAAA/G,EAAAsJ,OAAA,QACAnC,EAAAtB,wBAAAkB,IAAA/G,EAAAsJ,OAAA,QAGAxB,EAAAM,QAAA,wCAEAN,EAAAM,QAAA,0CAIA,OADAlB,EAAAlD,KAAAsC,cACAY,IAGAqC,MAAA,CACAnE,SADA,WAGApB,KAAAwF,cAEAxD,iBALA,WAOAhC,KAAAwF,cAEArE,UATA,WAWAnB,KAAAwF,eAGAC,QAvMA,WAyMAzF,KAAAwF,cAEAE,QAAA,CACAf,aADA,SACAC,EAAAe,GAAA,IAAAC,EAAA5F,KAAA6F,EAAAC,UAAAtJ,OAAA,QAAAiI,IAAAqB,UAAA,GAAAA,UAAA,KAAAC,EAAAD,UAAAtJ,OAAA,QAAAiI,IAAAqB,UAAA,GAAAA,UAAA,QAAArB,EAeAkB,EAAAf,EAAAiB,EAAAE,GAEA,IAAAC,EAAAH,EAAA,EAcA,OAXA,EAAA7E,EAAA+B,KAAA6B,EAAA,aACAA,EAAAX,SAAAgC,QAAA,SAAAC,GACAF,EAAAJ,EAAAjB,aACAuB,EACAP,EACAK,EACAH,KAKAG,GAEAR,WAlCA,WAoCAxF,KAAA4B,aAAA,GACA5B,KAAA6B,wBAAA,IAAAC,IAGA9B,KAAAkD,KACAzC,KAAA,CAEA,EAEA0F,EAAA,aAAA5C,OAAAvD,KAAAyB,iBAAA2E,QAAA,KAGAC,UAAArG,KAAAqB,UACAiF,wPClSA,IAAAC,EAAAC,EAAA7I,EAAA,SACAqD,EAAArD,EAAA,UAEe,CACb8E,QAAS,CACP8B,iCAAkC,SAACrC,EAAOO,GAAR,OAAoB,SAACtB,EAAWC,GAQhE,IAAMqF,EAAa,IAAI3E,IACjBO,EAASlB,EAAUkB,QAAU,KAGnC,QAAiBoC,IAAbrD,KAA2B,EAAAJ,EAAA+B,KAAI3B,EAAU,SAAU,MAAO,GAC9D,IAAMsF,EAAgBtF,EAASuF,MAyB/B,OAvBAlE,EAAQmE,wBAAwBvE,GAAQ4D,QAAQ,SAACY,GAE/C,GAAIA,IAAcH,EAChBD,EAAW5B,IAAIgC,QACV,IACL,EAAA7F,EAAA+B,KAAI5B,EAAW,8BACZ,EAAAH,EAAA+B,KAAI5B,EAAU2F,yBAA0BD,KACxC,EAAA7F,EAAA+B,KAAI5B,EAAU2F,yBAAyBD,GAAY,+BACtD,CAIA,IAAME,EAAoB5F,EACvB2F,yBAAyBD,GACzBG,4BAECD,EAAkBvC,SAASkC,IAC7BD,EAAW5B,IAAIgC,MAMdI,MAAMC,KAAKT,GAAYU,SAGhCzC,6BAA8B,SAACxC,EAAOO,EAAS2E,GAAjB,OAA+B,SAC3DjG,EACAC,GAEG,IADHiG,EACGvB,UAAAtJ,OAAA,QAAAiI,IAAAqB,UAAA,IAAAA,UAAA,GAOGwB,EAAc7E,EAAQ8E,sBAAsBnG,GAClD,KACG,EAAAJ,EAAA+B,KAAIqE,EAAUjF,KAAKH,iBAAkB,gBAClC,EAAAhB,EAAA+B,KAAIqE,EAAUjF,KAAKH,iBAAiBwF,UAAWF,GACnD,MAAO,GAGT,IAAMG,EAAgBL,EAAUjF,KAAKH,iBAAiBwF,UAAUF,GAC1DI,EAAejF,EAAQC,uBAAuBvB,GAC9CwG,EAAWF,EAAcG,OAAO,SAAAC,GAAG,OAAIA,EAAIrD,SAASkD,KAG1D,OAAKL,EACEM,EAASG,IAAI,SAAAC,GAAG,OAAIA,EAAIC,QAAJ,GAAAzE,OAAemE,EAAf,KAAgC,MAD1BC,KAIrCM,UAAW,CACTC,iBADS,SACQhG,EAAOiG,GAGtB,KAAK,EAAAnH,EAAA+B,KAAIoF,EAAS,YAChB,MAAM,IAAIC,MAAM,8EAEd,EAAApH,EAAA+B,KAAIoF,EAAS,UACfE,UAAIC,IAAIH,EAAQ/G,SAAU,QAAS+G,EAAQxB,QAEzC,EAAA3F,EAAA+B,KAAIoF,EAAS,oBACfE,UAAIC,IAAIH,EAAQ/G,SAAU,kBAAmB+G,EAAQI,kBAEnD,EAAAvH,EAAA+B,KAAIoF,EAAS,oBACfE,UAAIC,IAAIH,EAAQ/G,SAAU,kBAAmB+G,EAAQK,kBAIzDC,aAlBS,SAkBIvG,EAAOiG,GAGlB,KAAK,EAAAnH,EAAA+B,KAAIoF,EAAS,YAChB,MAAM,IAAIC,MAAM,0EAGb,EAAApH,EAAA+B,KAAIoF,EAAQ/G,SAAU,uBACzBiH,UAAIC,IAAIH,EAAQ/G,SAAU,qBAAsB,IAIlD+G,EAAQ/G,SAASgE,mBAAmB1I,KAAK,CAAEgM,yBAA0B,CAAC,OAGxEC,gBAjCS,SAiCOzG,EAAOiG,GAGrB,KAAK,EAAAnH,EAAA+B,KAAIoF,EAAS,YAChB,MAAM,IAAIC,MAAM,4EAElB,KAAK,EAAApH,EAAA+B,KAAIoF,EAAS,aAChB,MAAM,IAAIC,MAAM,+EAGd,EAAApH,EAAA+B,KAAIoF,EAAQ/G,SAAU,uBAAyB+G,EAAQ/G,SAAS4D,mBAAmBR,SAAS2D,EAAQjD,YACtGiD,EAAQ/G,SAAS4D,mBAAmBtH,OAClCyK,EAAQ/G,SAAS4D,mBAAmB4D,QAAQT,EAAQjD,WACpD,IAIA,EAAAlE,EAAA+B,KAAIoF,EAAQ/G,SAAU,uBAAyB+G,EAAQ/G,SAASgE,mBAAmBZ,SAAS2D,EAAQjD,YACtGiD,EAAQ/G,SAASgE,mBAAmB1H,OAClCyK,EAAQ/G,SAASgE,mBAAmBwD,QAAQT,EAAQjD,WACpD,IAKN2D,kBA1DS,SA0DS3G,EAAOiG,GAGvB,KAAK,EAAAnH,EAAA+B,KAAIoF,EAAS,aAChB,MAAM,IAAIC,MAAM,iFAEd,EAAApH,EAAA+B,KAAIoF,EAAS,sBACfE,UAAIC,IAAIH,EAAQjD,UAAW,oBAAqBiD,EAAQW,oBAI5DC,iBArES,SAqEQ7G,EAAOiG,GAKtB,KAAK,EAAAnH,EAAA+B,KAAIoF,EAAS,YAChB,MAAM,IAAIC,MAAM,6EAElB,KAAK,EAAApH,EAAA+B,KAAIoF,EAAS,aAChB,MAAM,IAAIC,MAAM,+EAElB,KAAK,EAAApH,EAAA+B,KAAIoF,EAAS,iBAChB,MAAM,IAAIC,MAAM,uFAkBlB,IAdI,EAAApH,EAAA+B,KAAIoF,EAAQ/G,SAAU,uBAAyB+G,EAAQ/G,SAAS4D,mBAAmBR,SAAS2D,EAAQjD,YACtGiD,EAAQ/G,SAAS4D,mBAAmBtH,OAClCyK,EAAQ/G,SAAS4D,mBAAmB4D,QAAQT,EAAQjD,WACpD,IAGA,EAAAlE,EAAA+B,KAAIoF,EAAQ/G,SAAU,uBAAyB+G,EAAQ/G,SAASgE,mBAAmBZ,SAAS2D,EAAQjD,YACtGiD,EAAQ/G,SAASgE,mBAAmB1H,OAClCyK,EAAQ/G,SAASgE,mBAAmBwD,QAAQT,EAAQjD,WACpD,GAK0B,aAA1BiD,EAAQa,eACN,EAAAhI,EAAA+B,KAAIoF,EAAQ/G,SAAU,sBACxB+G,EAAQ/G,SAAS4D,mBAAmBtI,KAAKyL,EAAQjD,WAEjDmD,UAAIC,IAAIH,EAAQ/G,SAAU,qBAAsB,CAAC+G,EAAQjD,gBAEtD,IAA8B,aAA1BiD,EAAQa,cAOjB,MAAM,IAAIZ,MAAJ,2BAAA7E,OAAqC4E,EAAQa,iBAN/C,EAAAhI,EAAA+B,KAAIoF,EAAQ/G,SAAU,sBACxB+G,EAAQ/G,SAASgE,mBAAmB1I,KAAKyL,EAAQjD,WAEjDmD,UAAIC,IAAIH,EAAQ/G,SAAU,qBAAsB,CAAC+G,EAAQjD,cAO/D+D,iBApHS,SAoHQ/G,EAAOiG,GAItB,KAAK,EAAAnH,EAAA+B,KAAIoF,EAAS,iBAChB,MAAM,IAAIC,MAAM,yFAGd,EAAApH,EAAA+B,KAAIoF,EAAS,mBACfE,UAAIC,IAAIH,EAAQe,cAAe,iBAAkBf,EAAQgB,iBAEvD,EAAAnI,EAAA+B,KAAIoF,EAAS,iBACfE,UAAIC,IAAIH,EAAQe,cAAe,eAAgBf,EAAQiB,eAI3DC,iCApIS,SAoIwBnH,EAAOiG,GAEtC,KAAK,EAAAnH,EAAA+B,KAAIoF,EAAS,aAChB,MAAM,IAAIC,MAAM,gGAGb,EAAApH,EAAA+B,KAAIoF,EAAQjD,UAAW,uBAC1BmD,UAAIC,IAAIH,EAAQjD,UAAW,qBAAsB,KAG/C,EAAAlE,EAAA+B,KAAIoF,EAAS,0BACXA,EAAQjD,UAAUoE,mBAAmB9E,SAAS2D,EAAQoB,wBACxDpB,EAAQjD,UAAUoE,mBAAmB5L,OACnCyK,EAAQjD,UAAUoE,mBAAmBV,QAAQT,EAAQoB,uBACrD,IAKF,EAAAvI,EAAA+B,KAAIoF,EAAS,wBACfA,EAAQjD,UAAUoE,mBAAmB5M,KAAKyL,EAAQqB,sBAItDC,eA5JS,SA4JMvH,EAAOiG,GAGpB,KAAK,EAAAnH,EAAA+B,KAAIoF,EAAS,aAChB,MAAM,IAAIC,MAAM,8EAId,EAAApH,EAAA+B,KAAIoF,EAAS,wBACV,EAAAnH,EAAA+B,KAAIoF,EAAQjD,UAAW,uBAC1BmD,UAAIC,IAAIH,EAAQjD,UAAW,qBAAsB,IAGnDiD,EAAQjD,UAAUoE,mBAAmB5M,KAAKyL,EAAQuB,qBAIhD,EAAA1I,EAAA+B,KAAIoF,EAAS,eACV,EAAAnH,EAAA+B,KAAIoF,EAAQjD,UAAW,sBAC1BmD,UAAIC,IAAIH,EAAQjD,UAAW,oBAAqB,IAGlDiD,EAAQjD,UAAUyE,kBAAkBjN,KAAKyL,EAAQyB,YAI/C,EAAA5I,EAAA+B,KAAIoF,EAAS,qBACV,EAAAnH,EAAA+B,KAAIoF,EAAQjD,UAAW,oBAC1BmD,UAAIC,IAAIH,EAAQjD,UAAW,kBAAmB,IAGhDiD,EAAQjD,UAAU2E,gBAAgBnN,KAAKyL,EAAQgB,kBAInDW,oBA/LS,SA+LW5H,EAAOiG,GAGzB,KAAK,EAAAnH,EAAA+B,KAAIoF,EAAS,aAChB,MAAM,IAAIC,MAAM,mFAEd,EAAApH,EAAA+B,KAAIoF,EAAS,qBACV,EAAAnH,EAAA+B,KAAIoF,EAAQjD,UAAW,oBAAoBmD,UAAIC,IAAIH,EAAQjD,UAAW,kBAAmB,IAC1FiD,EAAQjD,UAAU2E,gBAAgBrF,SAAS2D,EAAQgB,iBACrDhB,EAAQjD,UAAU2E,gBAAgBnM,OAChCyK,EAAQjD,UAAU2E,gBAAgBjB,QAAQT,EAAQgB,gBAClD,KAIF,EAAAnI,EAAA+B,KAAIoF,EAAS,eACV,EAAAnH,EAAA+B,KAAIoF,EAAQjD,UAAW,sBAAsBmD,UAAIC,IAAIH,EAAQjD,UAAW,oBAAqB,IAC9FiD,EAAQjD,UAAUyE,kBAAkBnF,SAAS2D,EAAQyB,WACvDzB,EAAQjD,UAAUyE,kBAAkBjM,OAClCyK,EAAQjD,UAAUyE,kBAAkBf,QAAQT,EAAQyB,UACpD,KAIF,EAAA5I,EAAA+B,KAAIoF,EAAS,wBACV,EAAAnH,EAAA+B,KAAIoF,EAAQjD,UAAW,uBAAuBmD,UAAIC,IAAIH,EAAQjD,UAAW,qBAAsB,IAChGiD,EAAQjD,UAAUoE,mBAAmB9E,SAAS2D,EAAQuB,oBACxDvB,EAAQjD,UAAUoE,mBAAmB5L,OACnCyK,EAAQjD,UAAUoE,mBAAmBV,QAAQT,EAAQuB,mBACrD,8JCpSG,CACbxH,MAAO,CACL6H,YAAa,IAEftH,QAAS,CACPC,uBAAwB,SAACR,EAAOO,EAAS2E,GAAjB,OAA+B,SAAAjG,GAAS,mBAAAoC,OAAiB6D,EAAUjF,KAAK6H,YAAYC,YAAYrB,QAAQzH,MAChIoG,sBAAuB,SAACrF,EAAOO,EAAS2E,GAAjB,OAA+B,SAAAhG,GAAQ,kBAAAmC,OAAgB6D,EAAUjF,KAAK6H,YAAYxC,UAAUoB,QAAQxH,2IC6B/H,IAAAJ,EAAArD,EAAA,QACAuM,EAAAvM,EAAA,QAGAwM,EAAA3D,EAAA7I,EAAA,SACAyM,EAAA5D,EAAA7I,EAAA,SAGA0M,EAAA7D,EAAA7I,EAAA,SACA2M,EAAA9D,EAAA7I,EAAA,SACA4M,EAAA/D,EAAA7I,EAAA,SACA6M,EAAAhE,EAAA7I,EAAA,SAGA8M,EAAAjE,EAAA7I,EAAA,SACA+M,EAAAlE,EAAA7I,EAAA,WAEA,CACAU,KAAA,MACAsM,WAAA,CACAC,iBAAAT,EAAA3I,QACAqJ,QAAAT,EAAA5I,QACAsJ,SAAAN,EAAAhJ,QACAuJ,cAAAV,EAAA7I,QACAwJ,aAAAV,EAAA9I,QACAyJ,cAAAV,EAAA/I,QACA0J,uBAAAT,EAAAjJ,QACA2J,qBAAAT,EAAAlJ,SAEAO,UAAA,EAAAmI,EAAAkB,UAAA,CACAC,sBAAA,SAAAnJ,GAAA,OAAAA,EAAAmJ,uBACAC,QAAA,SAAApJ,GAAA,OAAAA,EAAAqJ,GAAAD,SACAtB,YAAA,SAAA9H,GAAA,OAAAA,EAAAC,KAAA6H,aACAwB,WAAA,SAAAtJ,GAAA,OAAAA,EAAAC,KAAAqJ,cAEAC,QAlBA,WAkBA,IAAAtI,EAAAnD,KAMAmG,EAAAxG,QAAA+L,GAAA,0BACA,IAAAC,EAAA,qKAEA,UAAA3K,EAAA4K,SAAAzI,EAAAqI,WAAArI,EAAA6G,cAAA2B,uDCpFA,IAAA7L,EAAA,WAA0B,IAAAC,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAAA,EAAA,OAA2BE,YAAA,2DAAsE,CAAAF,EAAA,KAAUE,YAAA,eAAAC,MAAA,CAAkCuL,KAAA,eAAqB,CAAA9L,EAAA+L,GAAA,0BAAA/L,EAAAgM,GAAAhM,EAAAiM,SAAA,YAAAjM,EAAAkM,GAAA,QAC3PrL,EAAA,YAAoC,IAAAb,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,YAAA,4BAAuC,CAAAF,EAAA,MAAWE,YAAA,cAAyB,CAAAF,EAAA,MAAWE,YAAA,YAAuB,CAAAF,EAAA,KAAUE,YAAA,WAAAC,MAAA,CAA8BuL,KAAA,IAAAK,QAAA,sCAA0D,CAAAnM,EAAA+L,GAAA,iDAAA3L,EAAA,MAAmEE,YAAA,YAAuB,CAAAF,EAAA,KAAUE,YAAA,WAAAC,MAAA,CAA8BuL,KAAA,8BAAoC,CAAA9L,EAAA+L,GAAA,0DAAA3L,EAAA,MAA4EE,YAAA,YAAuB,CAAAF,EAAA,KAAUE,YAAA,WAAAC,MAAA,CAA8BuL,KAAA,8CAAoD,CAAA9L,EAAA+L,GAAA,mDAAA3L,EAAA,MAAqEE,YAAA,YAAuB,CAAAF,EAAA,KAAUE,YAAA,WAAAC,MAAA,CAA8BuL,KAAA,qDAA2D,CAAA9L,EAAA+L,GAAA,kDCDv2BnO,EAAAS,EAAAyC,EAAA,sBAAAf,IAAAnC,EAAAS,EAAAyC,EAAA,sBAAAD,uCCAAjD,EAAAgB,EAAAkC,GAAA,IAAAsL,EAAAxO,EAAA,QAAAyO,EAAAzO,EAAA,gBAAA0O,KAAAD,EAAA,YAAAC,GAAA,SAAAjN,GAAAzB,EAAAS,EAAAyC,EAAAzB,EAAA,kBAAAgN,EAAAhN,KAAA,CAAAiN,GAAA,IAAAC,EAAA3O,EAAA,QAOA4O,EAAgB5P,OAAA2P,EAAA,KAAA3P,CACdyP,EAAA,WACAD,EAAA,KACAA,EAAA,MACF,EACA,KACA,KACA,MAIAI,EAAA/I,QAAAgJ,OAAA,mBACe3L,EAAA,WAAA0L,+CCnBf5O,EAAAgB,EAAAkC,GAAA,IAAA4L,EAAA9O,EAAA,QAAA+O,EAAA/O,EAAA,gBAAA0O,KAAAK,EAAA,YAAAL,GAAA,SAAAjN,GAAAzB,EAAAS,EAAAyC,EAAAzB,EAAA,kBAAAsN,EAAAtN,KAAA,CAAAiN,GAAA,IAAAC,EAAA3O,EAAA,QAOA4O,EAAgB5P,OAAA2P,EAAA,KAAA3P,CACd+P,EAAA,WACAD,EAAA,KACAA,EAAA,MACF,EACA,KACA,KACA,MAIAF,EAAA/I,QAAAgJ,OAAA,6BACe3L,EAAA,WAAA0L,+CCnBf5O,EAAAgB,EAAAkC,GAAA,IAAA8L,EAAAhP,EAAA,QAAAiP,EAAAjP,EAAA2B,EAAAqN,GAAA,QAAAN,KAAAM,EAAA,YAAAN,GAAA,SAAAjN,GAAAzB,EAAAS,EAAAyC,EAAAzB,EAAA,kBAAAuN,EAAAvN,KAAA,CAAAiN,GAA8TxL,EAAA,WAAA+L,EAAG,oJCmVjU1C,EAAAvM,EAAA,QACAqD,EAAArD,EAAA,QACAsD,EAAAtD,EAAA,QAEAkP,EAAArG,EAAA7I,EAAA,SACAmP,EAAAtG,EAAA7I,EAAA,WAEA,CACAU,KAAA,eACAsM,WAAA,CACAoC,aAAAF,EAAArL,QACAwL,UAAAF,EAAAtL,SAEAO,UAAA,EAAAkL,EAAAzL,SAAA,CAIA0L,sBAAA,CACAxO,IADA,WACA,OAAAsB,KAAAmN,iBAAAxG,OACA2B,IAFA,SAEA3B,GAAA3G,KAAAiC,OAAAmL,OAAA,oBAAAhM,SAAApB,KAAAmN,iBAAAxG,YAEA0G,wBAAA,CACA3O,IADA,WACA,OAAAsB,KAAAmN,iBAAA5E,iBACAD,IAFA,SAEAC,GAAAvI,KAAAiC,OAAAmL,OAAA,oBAAAhM,SAAApB,KAAAmN,iBAAA5E,sBAEA+E,wBAAA,CACA5O,IADA,WACA,OAAAsB,KAAAmN,iBAAA3E,iBACAF,IAFA,SAEAE,GAAAxI,KAAAiC,OAAAmL,OAAA,oBAAAhM,SAAApB,KAAAmN,iBAAA3E,sBAEAlB,YAhBA,WAkBA,OAAAtH,KAAAiC,OAAAQ,QAAA8E,sBAAAvH,KAAAmN,mBAEA1F,cApBA,WAsBA,MAAAzG,EAAA+B,KAAA/C,KAAAiC,OAAAC,MAAAC,KAAAH,iBAAA,aACA,SAAAhB,EAAA+B,KAAA/C,KAAAiC,OAAAC,MAAAC,KAAAH,iBAAAwF,UAAAxH,KAAAsH,aACAtH,KAAAiC,OAAAC,MAAAC,KAAAH,iBAAAwF,UAAAxH,KAAAsH,kBADA,KAKA,EAAA4C,EAAAkB,UAAA,CACApB,YAAA,SAAA9H,GAAA,OAAAA,EAAAC,KAAA6H,aACAwB,WAAA,SAAAtJ,GAAA,OAAAA,EAAAC,KAAAqJ,YACAvB,YAAA,SAAA/H,GAAA,OAAAA,EAAAC,KAAA6H,YAAAC,aACAqB,QAAA,SAAApJ,GAAA,OAAAA,EAAAqJ,GAAAD,SACAiC,kBAAA,SAAArL,GAAA,OAAAA,EAAAqJ,GAAAD,QAAAnK,WACAgM,iBAAA,SAAAjL,GAAA,OAAAA,EAAAqJ,GAAAD,QAAAlK,aAGAsE,QAAA,CACA8H,cADA,SACArM,EAAAsM,GAEA,WAAAxM,EAAAsB,iBAAApB,GAAAqM,cAAAC,GAAAtG,QAEAuG,sBALA,SAKAvM,GAEA,WAAAF,EAAA0M,gBAAA3N,KAAAmN,kBAAAO,sBAAAvM,IAEAyM,kBATA,SASA1I,GAEA,OAAAjE,EAAA0M,gBAAAC,kBAAA1I,IAEA2I,iBAbA,SAaA1M,GAAA,IAAAkG,IAAAvB,UAAAtJ,OAAA,QAAAiI,IAAAqB,UAAA,KAAAA,UAAA,GAGA,OAAA9F,KAAAiC,OAAAQ,QAAAiC,6BAAAvD,EAAAnB,KAAAmN,iBAAA9F,uDCrZA1J,EAAAgB,EAAAkC,GAAA,IAAAiN,EAAAnQ,EAAA,QAAAoQ,EAAApQ,EAAA,gBAAA0O,KAAA0B,EAAA,YAAA1B,GAAA,SAAAjN,GAAAzB,EAAAS,EAAAyC,EAAAzB,EAAA,kBAAA2O,EAAA3O,KAAA,CAAAiN,GAAA,IAAAC,EAAA3O,EAAA,QAOA4O,EAAgB5P,OAAA2P,EAAA,KAAA3P,CACdoR,EAAA,WACAD,EAAA,KACAA,EAAA,MACF,EACA,KACA,KACA,MAIAvB,EAAA/I,QAAAgJ,OAAA,2BACe3L,EAAA,WAAA0L,+CCnBf5O,EAAAgB,EAAAkC,GAAA,IAAAmN,EAAArQ,EAAA,QAAAsQ,EAAAtQ,EAAA2B,EAAA0O,GAAA,QAAA3B,KAAA2B,EAAA,YAAA3B,GAAA,SAAAjN,GAAAzB,EAAAS,EAAAyC,EAAAzB,EAAA,kBAAA4O,EAAA5O,KAAA,CAAAiN,GAA+WxL,EAAA,WAAAoN,EAAG,6IC0DlX,CACA5P,KAAA,mBACA6C,MAAA,CACA8K,QAAA,CACA1K,KAAAI,OACAF,QAAA,4DC/DA,IAAA1B,EAAA,WAA0B,IAAAC,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,YAAA,oBAA+B,CAAAF,EAAA,MAAWE,YAAA,2BAAsC,CAAAN,EAAA+L,GAAA,4CAAA3L,EAAA,OAA+DE,YAAA,iBAA4B,CAAAF,EAAA,SAAcE,YAAA,iCAA4C,CAAAF,EAAA,SAAAA,EAAA,MAAAJ,EAAA+L,GAAA,OAAA3L,EAAA,MAAAJ,EAAA+L,GAAA,oBAAA3L,EAAA,MAAAJ,EAAA+L,GAAA,yBAAA3L,EAAA,MAAAJ,EAAA+L,GAAA,yBAAA/L,EAAAmO,GAAAnO,EAAA,qBAAAoB,EAAAM,GAAuN,OAAAtB,EAAA,MAAAJ,EAAA+L,GAAA,eAAA/L,EAAAgM,GAAA5K,EAAAwF,OAAA,cAAAlF,EAAA,uBAAuH,GAAAtB,EAAA,aAAAJ,EAAAyH,UAAAhL,OAAA2D,EAAA,MAAwDE,YAAA,YAAuB,CAAAF,EAAA,MAAWG,MAAA,CAAO6N,QAAA,EAAApO,EAAAkK,YAAAzN,SAAsC,CAAA2D,EAAA,UAAAA,EAAA,MAAAJ,EAAA+L,GAAA,uCAAA/L,EAAAY,KAAAZ,EAAAmO,GAAAnO,EAAA,mBAAAqB,EAAAgN,GAAuI,OAAAjO,EAAA,MAAAA,EAAA,MAAAJ,EAAA+L,GAAA,OAAA3L,EAAA,MAAAA,EAAA,KAAwDG,MAAA,CAAOuL,KAAA,uBAA6BH,GAAA,CAAK2C,MAAA,SAAAC,GAAyBvO,EAAAkC,OAAAmL,OAAA,iBAAoChM,gBAAyB,CAAArB,EAAA+L,GAAA,mBAAA/L,EAAAgM,GAAA3K,EAAAuF,OAAA,aAAAyH,EAAA,0BAAAjO,EAAA,MAAAJ,EAAA+L,GAAA/L,EAAAgM,IAAA3K,EAAA4D,oBAAA,IAAAxI,WAAA2D,EAAA,MAAAJ,EAAA+L,GAAA/L,EAAAgM,IAAA3K,EAAAgE,oBAAA,IAAA5I,WAAAuD,EAAAmO,GAAAnO,EAAA,qBAAAoB,EAAAM,GAAwT,OAAAtB,EAAA,UAAAJ,EAAAwO,8BAAAnN,EAAAD,GAAA3E,OAAA,CAAA2D,EAAA,UAAAJ,EAAA+L,GAAA,iBAAA/L,EAAAyO,oBAAApN,GAAA,CAAArB,EAAA+L,GAAA,2CAAA/L,EAAA0O,gCAAArN,EAAAD,GAAA,GAAAhB,EAAA,UAAAJ,EAAA+L,GAAA,+BAAA/L,EAAAgM,GAAAhM,EAAA0O,gCAAArN,EAAAD,QAAA,CAAApB,EAAA+L,GAAA,mCAAA/L,EAAAgM,GAAAhM,EAAA0O,gCAAArN,EAAAD,GAAA,sCAAApB,EAAAY,MAAA,CAAAZ,EAAA+L,GAAA,2CAAA/L,EAAAyO,oBAAApN,GAAA,CAAArB,EAAA+L,GAAA,2CAAA/L,EAAA0O,gCAAArN,EAAAD,GAAA,GAAAhB,EAAA,UAAAJ,EAAA+L,GAAA,+BAAA/L,EAAAgM,GAAAhM,EAAA0O,gCAAArN,EAAAD,QAAA,CAAApB,EAAA+L,GAAA,oDAAA/L,EAAA0O,gCAAArN,EAAAD,GAAA,KAAApB,EAAAwO,8BAAAnN,EAAAD,GAAA,IAAApB,EAAA+L,GAAA,yDAAA3L,EAAA,UAAAJ,EAAA+L,GAAA,kBAAA/L,EAAA+L,GAAA,0BAAA/L,EAAAgM,GAAAhM,EAAA0O,gCAAArN,EAAAD,GAAA,sCAAApB,EAAAY,OAAA,MAA4xC,MAAM,UAC5rFC,EAAA,GCDAjD,EAAAS,EAAAyC,EAAA,sBAAAf,IAAAnC,EAAAS,EAAAyC,EAAA,sBAAAD,yCCAAjD,EAAAgB,EAAAkC,GAAA,IAAA6N,EAAA/Q,EAAA,QAAAgR,EAAAhR,EAAA2B,EAAAoP,GAAA,QAAArC,KAAAqC,EAAA,YAAArC,GAAA,SAAAjN,GAAAzB,EAAAS,EAAAyC,EAAAzB,EAAA,kBAAAsP,EAAAtP,KAAA,CAAAiN,GAA6WxL,EAAA,WAAA8N,EAAG,uCCAhXhR,EAAAgB,EAAAkC,GAAA,IAAA+N,EAAAjR,EAAA,QAAAkR,EAAAlR,EAAA,gBAAA0O,KAAAwC,EAAA,YAAAxC,GAAA,SAAAjN,GAAAzB,EAAAS,EAAAyC,EAAAzB,EAAA,kBAAAyP,EAAAzP,KAAA,CAAAiN,GAAA1O,EAAA,YAAAmR,EAAAnR,EAAA,QAQA4O,EAAgB5P,OAAAmS,EAAA,KAAAnS,CACdkS,EAAA,WACAD,EAAA,KACAA,EAAA,MACF,EACA,KACA,KACA,MAIArC,EAAA/I,QAAAgJ,OAAA,UACe3L,EAAA,WAAA0L,+HCnBf,IAAAhG,EAAAC,EAAA7I,EAAA,SACAuM,EAAA1D,EAAA7I,EAAA,SAGAoR,EAAAvI,EAAA7I,EAAA,SACAqR,EAAAxI,EAAA7I,EAAA,SACAsD,EAAAuF,EAAA7I,EAAA,SACAsR,EAAAzI,EAAA7I,EAAA,SACAuR,EAAA1I,EAAA7I,EAAA,SAEA0K,UAAI8G,IAAIC,WAER,IAAMC,GAAQC,IAEC,IAAIF,UAAKG,MAAM,CAC5BrN,MAAO,CACLmJ,sBAAuB,OAEzBtO,QAAS,CACPoE,oBAAWC,mBAAUe,eAAMoJ,aAAIiE,oBAEjCC,OAAQJ,qDCtBV,IAAAvP,EAAA,WAA0B,IAAAC,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BH,EAAAK,MAAAD,GAAwB,OAAAJ,EAAAkM,GAAA,IACzFrL,EAAA,YAAoC,IAAAb,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,YAAA,QAAAC,MAAA,CAA2BoP,GAAA,sBAAAC,SAAA,KAAAC,KAAA,WAA4D,CAAAzP,EAAA,OAAYE,YAAA,eAAAC,MAAA,CAAkCsP,KAAA,aAAmB,CAAAzP,EAAA,OAAYE,YAAA,iBAA4B,CAAAF,EAAA,OAAYE,YAAA,gBAA2B,CAAAF,EAAA,MAAWE,YAAA,eAA0B,CAAAN,EAAA+L,GAAA,2CAAA3L,EAAA,UAAiEE,YAAA,QAAAC,MAAA,CAA2BgB,KAAA,SAAAuO,eAAA,QAAAC,aAAA,UAA6D,CAAA3P,EAAA,QAAaG,MAAA,CAAOyP,cAAA,SAAsB,CAAAhQ,EAAA+L,GAAA,qCAAA3L,EAAA,OAAwDE,YAAA,wBAAmC,CAAAF,EAAA,KAAAJ,EAAA+L,GAAA,uFAAA3L,EAAA,KAAgHG,MAAA,CAAOuL,KAAA,6BAAmC,CAAA9L,EAAA+L,GAAA,wDAAA/L,EAAA+L,GAAA,sGAAA3L,EAAA,KAAsLG,MAAA,CAAOuL,KAAA,4DAAkE,CAAA9L,EAAA+L,GAAA,2CAAA/L,EAAA+L,GAAA,oBAAA3L,EAAA,KAAuFG,MAAA,CAAOuL,KAAA,4DAAkE,CAAA9L,EAAA+L,GAAA,2CAAA/L,EAAA+L,GAAA,qBAAA3L,EAAA,KAAwFG,MAAA,CAAOuL,KAAA,2CAAiD,CAAA9L,EAAA+L,GAAA,uCAAA/L,EAAA+L,GAAA,6BAAA3L,EAAA,KAAAJ,EAAA+L,GAAA,0EAAA3L,EAAA,MAAAA,EAAA,MAAAA,EAAA,KAAuMG,MAAA,CAAOuL,KAAA,2BAAiC,CAAA9L,EAAA+L,GAAA,+CAAA3L,EAAA,MAAAA,EAAA,KAAyEG,MAAA,CAAOuL,KAAA,8BAAoC,CAAA9L,EAAA+L,GAAA,+CAAA3L,EAAA,MAAAA,EAAA,KAAyEG,MAAA,CAAOuL,KAAA,wBAA8B,CAAA9L,EAAA+L,GAAA,4CAAA3L,EAAA,MAAAA,EAAA,KAAsEG,MAAA,CAAOuL,KAAA,wCAA8C,CAAA9L,EAAA+L,GAAA,gDAAA/L,EAAA+L,GAAA,gCAAA3L,EAAA,KAAwGG,MAAA,CAAOuL,KAAA,8CAAoD,CAAA9L,EAAA+L,GAAA,0BAAA3L,EAAA,MAAAJ,EAAA+L,GAAA,WAAA/L,EAAA+L,GAAA,4BAAA3L,EAAA,MAAAA,EAAA,KAAkHG,MAAA,CAAOuL,KAAA,sBAA4B,CAAA9L,EAAA+L,GAAA,2CAAA3L,EAAA,MAAAA,EAAA,KAAqEG,MAAA,CAAOuL,KAAA,0BAAgC,CAAA9L,EAAA+L,GAAA,+CAAA3L,EAAA,MAAAA,EAAA,KAAyEG,MAAA,CAAOuL,KAAA,4CAAkD,CAAA9L,EAAA+L,GAAA,kDAAA3L,EAAA,MAAAA,EAAA,KAA4EG,MAAA,CAAOuL,KAAA,6BAAmC,CAAA9L,EAAA+L,GAAA,sDAAA3L,EAAA,OAAyEE,YAAA,gBAA2B,CAAAF,EAAA,UAAeE,YAAA,oBAAAC,MAAA,CAAuCgB,KAAA,SAAAuO,eAAA,UAAwC,CAAA9P,EAAA+L,GAAA,2CCDjxFnO,EAAAS,EAAAyC,EAAA,sBAAAf,IAAAnC,EAAAS,EAAAyC,EAAA,sBAAAD,0BCAA,IAAAkH,EAAA,CACAkI,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,aAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,aAAA,OACAC,gBAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,UAAA,OACAC,aAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACA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","file":"js/app.47d066dc.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/curation-tool/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.dataChanged)?_c('div',{staticClass:\"float-right\",attrs:{\"title\":_vm.message}},[_c('FontAwesomeIcon',{attrs:{\"size\":\"lg\",\"icon\":\"exclamation-circle\"}})],1):_vm._e()}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export * from \"-!cache-loader?{\\\"cacheDirectory\\\":\\\"node_modules/.cache/vue-loader\\\",\\\"cacheIdentifier\\\":\\\"ca0e2238-vue-loader-template\\\"}!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ModifiedIcon.vue?vue&type=template&id=54102662&\"","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","<template>\n  <div>\n    <template v-if=\"newickErrors\">\n      <p>\n        <strong>Error parsing phylogeny.</strong>\n        Please\n        <a\n          href=\"javascript: void\"\n          @click=\"$store.commit('changeDisplay', {phylogeny})\"\n        >\n          edit the phylogeny\n        </a>\n        to fix this error.\n      </p>\n    </template>\n    <div\n      v-else\n      class=\"phylotreeContainer\"\n    >\n      <svg\n        :id=\"'phylogeny' + phylogenyIndex\"\n        class=\"col-md-12 phylogeny\"\n      />\n      <ResizeObserver @notify=\"redrawTree()\" />\n    </div>\n  </div>\n</template>\n\n<script>\n/*\n * This component can be used to insert a phylogeny. It includes code for highlighing\n * the expecting and reasoned clade for a particular phyloreference.\n */\n\nimport { uniqueId, has } from 'lodash';\nimport { PhylogenyWrapper } from '@phyloref/phyx';\n\n/*\n * Note that this requires the Phylotree Javascript to be loaded in the HTML\n * header: I haven't figured out how to include phylotree.js from within Vue CLI yet.\n */\n\nexport default {\n  name: 'Phylotree',\n  props: {\n    phylogeny: Object, // The phylogeny to render.\n    phyloref: Object, // The phyloreference to highlight.\n    spacingX: { // Spacing in the X axis in pixels.\n      type: Number,\n      default: 20,\n    },\n    phylogenyIndex: { // An index number of the phylogeny. Will be used to set up HTML DOM IDs.\n      type: String,\n      default: uniqueId(),\n    },\n  },\n  data() {\n    return {\n      // List of pinning nodes to highlight for a particular phylogeny.\n      pinningNodes: [],\n      // List of pinning nodes and all their children, so the entire clade can be\n      // highlighted as needed.\n      pinningNodeChildrenIRIs: new Set(),\n    };\n  },\n  computed: {\n    reasoningResults() {\n      // Included so we can watch this for changes, see `watch` below.\n      return this.$store.state.phyx.reasoningResults;\n    },\n    newickAsString() {\n      // Returns the Newick string of this phylogeny.\n      return this.phylogeny.newick || '()';\n    },\n    parsedNewick() {\n      return new PhylogenyWrapper(this.phylogeny).getParsedNewickWithIRIs(\n        this.$store.getters.getBaseURIForPhylogeny(this.phylogeny),\n        d3.layout.newick_parser,\n      );\n    },\n    newickErrors() {\n      // Check to see if the newick could actually be parsed.\n      if (!has(this.parsedNewick, 'json') || this.parsedNewick.json === null) {\n        return (has(this.parsedNewick, 'error') ? this.parsedNewick.error : 'unknown error');\n      }\n      return undefined;\n    },\n    tree() {\n      // Set up Phylotree.\n      const tree = d3.layout.phylotree()\n        .svg(d3.select(`#phylogeny${this.phylogenyIndex}`))\n        .options({\n          'internal-names': true,\n          transitions: false,\n          'left-right-spacing': 'fit-to-size',\n          'top-bottom-spacing': 'fixed-step',\n        })\n        .style_nodes((element, data) => {\n          // Instructions used to style nodes in Phylotree\n          // - element: The D3 element of the node being styled\n          // - data: The data associated with the node being styled\n\n          // Make sure we don't already have an internal label node on this SVG node!\n          let textLabel = element.selectAll('text');\n\n          if (has(data, 'name') && data.name !== '' && data.children) {\n            // If the node has a label and has children (i.e. is an internal node),\n            // we display it next to the node by creating a new 'text' element.\n            if (textLabel.empty()) {\n              textLabel = element.append('text');\n\n              // Place internal label to the left of the root node.\n              textLabel.classed('internal-label', true)\n                .text(data.name)\n                .attr('dx', '.3em')\n                .attr('dy', '.3em');\n            }\n\n            // If the internal label has the same label as the currently\n            // selected phyloreference, add an 'id' so we can jump to it\n            // and a CSS class to render it differently from other labels.\n            if (\n              this.$store.getters.getExpectedNodeLabelsOnPhylogeny(this.phylogeny, this.phyloref).includes(data.name)\n            ) {\n              textLabel.attr('id', `current_expected_label_phylogeny_${this.phylogenyIndex}`);\n              textLabel.classed('selected-internal-label', true);\n            } else {\n              textLabel.attr('id', '');\n              textLabel.classed('selected-internal-label', false);\n            }\n          }\n\n          // If the internal label has the same IRI as the currently selected\n          // phyloreference's reasoned node, further mark it as the resolved node.\n          //\n          // Note that this node might NOT be labeled, in which case we need to\n          // label it now!\n          if (\n            this.phyloref !== undefined && has(data, '@id')\n            && this.$store.getters.getResolvedNodesForPhylogeny(this.phylogeny, this.phyloref).includes(data['@id'])\n          ) {\n            // We found another pinning node!\n            this.pinningNodes.push(data);\n            this.recurseNodes(data, node => this.pinningNodeChildrenIRIs.add(node['@id']));\n\n            // Mark this node as the pinning node.\n            element.classed('pinning-node', true);\n\n            // Make the pinning node circle larger (twice its usual size of 3).\n            element.select('circle').attr('r', 6);\n\n            // Set its id to 'current_pinning_node_phylogeny{{phylogenyIndex}}'\n            element.attr('id', `current_pinning_node_phylogeny_${this.phylogenyIndex}`);\n          }\n\n          // Maybe this isn't a pinning node, but it is a child of a pinning node.\n          if (\n            has(data, '@id')\n            && this.pinningNodeChildrenIRIs.has(data['@id'])\n          ) {\n            // Apply a class.\n            // Note that this applies to the resolved-node too.\n            element.classed('descendant-of-pinning-node-node', true);\n          }\n\n          if (data.name !== undefined && data.children === undefined) {\n            // Labeled leaf node! Look for taxonomic units.\n            const tunits = this.$store.getters\n              .getTaxonomicUnitsForNodeLabel(this.phylogeny, data.name);\n\n            if (tunits.length === 0) {\n              element.classed('terminal-node-without-tunits', true);\n            } else if (this.phyloref !== undefined) {\n              // If this is a terminal node, we should set its ID to\n              // `current_expected_label_phylogeny${phylogenyIndex}` if it is\n              // the currently expected node label.\n              if (\n                has(this.phyloref, 'label')\n                && this.$store.getters\n                  .getExpectedNodeLabelsOnPhylogeny(this.phylogeny, this.phyloref)\n                  .includes(data.name)\n              ) {\n                textLabel.attr('id', `current_expected_label_phylogeny_${this.phylogenyIndex}`);\n              }\n\n              // We should highlight internal specifiers.\n              if (has(this.phyloref, 'internalSpecifiers')) {\n                if (this.phyloref.internalSpecifiers\n                  .some(specifier => this.$store.getters\n                    .getNodeLabelsMatchedBySpecifier(this.phylogeny, specifier)\n                    .includes(data.name))\n                ) {\n                  element.classed('internal-specifier-node', true);\n                }\n              }\n\n              // We should highlight external specifiers.\n              if (has(this.phyloref, 'externalSpecifiers')) {\n                if (this.phyloref.externalSpecifiers\n                  .some(specifier => this.$store.getters\n                    .getNodeLabelsMatchedBySpecifier(this.phylogeny, specifier)\n                    .includes(data.name))\n                ) {\n                  element.classed('external-specifier-node', true);\n                }\n              }\n            }\n          }\n        })\n        .style_edges((element, data) => {\n          // Is the parent a descendant of a pinning node? If so, we need to\n          // select this branch!\n          if (\n            has(data, 'source')\n            && has(data.source, '@id')\n            && this.pinningNodeChildrenIRIs.has(data.source['@id'])\n          ) {\n            // Apply a class to this branch.\n            element.classed('descendant-of-pinning-node-branch', true);\n          } else {\n            element.classed('descendant-of-pinning-node-branch', false);\n          }\n        });\n      tree(this.parsedNewick);\n      return tree;\n    },\n  },\n  watch: {\n    phyloref() {\n      // We need to redraw the tree when phyloref changes.\n      this.redrawTree();\n    },\n    reasoningResults() {\n      // If reasoning occurs, we'll need to redraw this tree.\n      this.redrawTree();\n    },\n    phylogeny() {\n      // If the phylogeny changed, redraw the tree.\n      this.redrawTree();\n    },\n  },\n  mounted() {\n    // Redraw the tree when this component is loaded for the first time.\n    this.redrawTree();\n  },\n  methods: {\n    recurseNodes(node, func, nodeCount = 0, parentCount = undefined) {\n      // Recurse through PhyloTree nodes, executing function on each node.\n      //  - node: The node to recurse from. The function will be called on node\n      //          *before* being called on its children.\n      //  - func: The function to call on `node` and all of its children.\n      //  - nodeCount: `node` will be called with this nodeCount. All of its\n      //          children will be called with consecutively increasing nodeCounts.\n      //  - parentCount: The nodeCount associated with the parent of this node\n      //          within this run of recurseNodes. For instance, immediate children\n      //          of `node` will have a parentCount of 0. By default, `node` itself\n      //          will have a parentCount of `undefined`.\n      // When the function `func` is called, it is given three arguments:\n      //  - The current node object (initially: `node`)\n      //  - The count of the current node object (initially: `nodeCount`)\n      //  - The parent count of the current node object (initially: `parentCount`)\n      func(node, nodeCount, parentCount);\n\n      let nextID = nodeCount + 1;\n\n      // Recurse through all children of this node.\n      if (has(node, 'children')) {\n        node.children.forEach((child) => {\n          nextID = this.recurseNodes(\n            child,\n            func,\n            nextID,\n            nodeCount,\n          );\n        });\n      }\n\n      return nextID;\n    },\n    redrawTree() {\n      // Reset the pinning node information before redrawing.\n      this.pinningNodes = [];\n      this.pinningNodeChildrenIRIs = new Set();\n\n      // Draw the tree.\n      this.tree\n        .size([\n          // height\n          0,\n          // width\n          $(`#phylogeny${this.phylogenyIndex}`).width() - 40,\n          // We need more space because our fonts are bigger than the default.\n        ])\n        .spacing_x(this.spacingX)\n        .update();\n    },\n  },\n};\n</script>\n\n<style>\n.phylogeny {\n  width: 100%;\n}\n.phylotreeContainer {\n  /* Required for Vue-Resize to track its size */\n  position: relative;\n}\n\n/*\n * Classes for phylogeny SVG elements\n */\n\n/*\n * Phylotree .node refers to the SVG groups that contain both the\n * node itself as well as the text label next to it. This is confusing,\n * but we will try to use that consistently below: *-node refers to the group\n * that includes both the node as well as the label with it, while *-label\n * refers only to the labels next to the nodes.\n */\n.node {\n  /* Phylotree's CSS sets this to 10px; we prefer larger node labels */\n  font-size: 11pt;\n}\n\n/* Labels for internal nodes, whether phylorefs or not */\n.internal-label {\n  font-family: serif;\n  font-size: 16pt;\n  font-style: italic;\n\n  text-anchor: start; /* Align text so it starts at the coordinates provided */\n}\n\n/* Node label for an internal specifier */\n.internal-specifier-node text {\n    font-weight: bolder;\n    fill: rgb(0, 24, 168) !important;\n}\n\n/* Node label for an external specifier */\n.external-specifier-node text {\n    font-weight: bolder;\n    fill: rgb(0, 24, 168) !important;\n}\n\n/* Node label for a terminal node without taxonomic units */\n.terminal-node-without-tunits {\n}\n\n/* The selected internal label on a phylogeny, whether determined to be the pinning node or not. */\n.selected-internal-label {\n    font-size: 16pt;\n    fill: rgb(0, 24, 168);\n}\n\n/*\n * An additional class for nodes that are the pinning node. When the phyloreference\n * resolves to a single terminal node, it will be laid out in this way, rather\n * than as an .internal-specifier-node.\n */\n.pinning-node text {\n    font-weight: bolder;\n}\n\n/*\n * The descendant-of-pinning-node class instructions below apply to the entire resolved node,\n * which includes the circle as well as the text label. We want to coordinate\n * colours between:\n *  - The circle that appears next to the node label,\n *  - The node label, whether internal or terminal, and\n *  - The branches descending from the pinning node.\n *\n * Note that .internal-specifier-node is set up to override this formatting, so\n * internal node labels will be formatted differently from other terminals\n * descending from the pinning node.\n */\n.descendant-of-pinning-node-node circle {\n  fill: rgb(0, 24, 168);\n}\n\n.descendant-of-pinning-node-node text {\n}\n\n.descendant-of-pinning-node-branch {\n  stroke: rgb(0, 24, 168);\n}\n\n/*\n * Create a table class for a fixed size body.\n * Based on https://stackoverflow.com/a/23518856/27310\n */\n.table-fixed-height {\n}\n\n.table-fixed-height thead {\n    display: block;\n    width: 100%;\n}\n\n.table-fixed-height tbody {\n    display: block;\n    width: 100%;\n    height: 15em;\n    overflow-y: scroll;\n    z-index: -1;\n}\n\n.table-fixed-height tr {\n    width: 100%;\n    display: inline-table;\n    table-layout: fixed;\n}\n\n/*\n * The following code is stolen from Bootstrap 3.3, which is a Phylotree.js\n * dependency. Since we otherwise use Bootstrap 4+, we need to override this\n * here so the menu works.\n *\n * We apply it only to subclasses of #d3_layout_phylotree_context_menu to limit\n * their fallout on other elements.\n */\n#d3_layout_phylotree_context_menu.dropdown-menu {\n position: absolute;\n top: 100%;\n left: 0;\n z-index: 1000;\n display: none;\n float: left;\n min-width: 160px;\n padding: 5px 0;\n margin: 2px 0 0;\n font-size: 14px;\n text-align: left;\n list-style: none;\n background-color: #fff;\n -webkit-background-clip: padding-box;\n         background-clip: padding-box;\n border: 1px solid #ccc;\n border: 1px solid rgba(0, 0, 0, .15);\n border-radius: 4px;\n -webkit-box-shadow: 0 6px 12px rgba(0, 0, 0, .175);\n         box-shadow: 0 6px 12px rgba(0, 0, 0, .175);\n}\n#d3_layout_phylotree_context_menu.dropdown-menu.pull-right {\n right: 0;\n left: auto;\n}\n#d3_layout_phylotree_context_menu.dropdown-menu .divider {\n height: 1px;\n margin: 9px 0;\n overflow: hidden;\n background-color: #e5e5e5;\n}\n#d3_layout_phylotree_context_menu.dropdown-menu > li > a {\n display: block;\n padding: 3px 20px;\n clear: both;\n font-weight: normal;\n line-height: 1.42857143;\n color: #333;\n white-space: nowrap;\n}\n#d3_layout_phylotree_context_menu.dropdown-menu > li > a:hover,\n#d3_layout_phylotree_context_menu.dropdown-menu > li > a:focus {\n color: #262626;\n text-decoration: none;\n background-color: #f5f5f5;\n}\n#d3_layout_phylotree_context_menu.dropdown-menu > .active > a,\n#d3_layout_phylotree_context_menu.dropdown-menu > .active > a:hover,\n#d3_layout_phylotree_context_menu.dropdown-menu > .active > a:focus {\n color: #fff;\n text-decoration: none;\n background-color: #337ab7;\n outline: 0;\n}\n#d3_layout_phylotree_context_menu.dropdown-menu > .disabled > a,\n#d3_layout_phylotree_context_menu.dropdown-menu > .disabled > a:hover,\n#d3_layout_phylotree_context_menu.dropdown-menu > .disabled > a:focus {\n color: #777;\n}\n#d3_layout_phylotree_context_menu.dropdown-menu > .disabled > a:hover,\n#d3_layout_phylotree_context_menu.dropdown-menu > .disabled > a:focus {\n text-decoration: none;\n cursor: not-allowed;\n background-color: transparent;\n background-image: none;\n filter: progid:DXImageTransform.Microsoft.gradient(enabled = false);\n}\n.open > #d3_layout_phylotree_context_menu.dropdown-menu {\n display: block;\n}\n#d3_layout_phylotree_context_menu.dropdown-menu-right {\n right: 0;\n left: auto;\n}\n#d3_layout_phylotree_context_menu.dropdown-menu-left {\n right: auto;\n left: 0;\n}\n#d3_layout_phylotree_context_menu.dropdown-header {\n display: block;\n padding: 3px 20px;\n font-size: 12px;\n line-height: 1.42857143;\n color: #777;\n white-space: nowrap;\n}\n#d3_layout_phylotree_context_menu.dropdown-backdrop {\n position: fixed;\n top: 0;\n right: 0;\n bottom: 0;\n left: 0;\n z-index: 990;\n}\n\n</style>\n","/*\n * Store module for modifying phyloreferences.\n */\n\nimport Vue from 'vue';\nimport { has } from 'lodash';\n\nexport default {\n  getters: {\n    getExpectedNodeLabelsOnPhylogeny: (state, getters) => (phylogeny, phyloref) => {\n      // Given a phylogeny, determine which node labels we expect this phyloref to\n      // resolve to. To do this, we:\n      //  1. Find all node labels that are case-sensitively identical\n      //     to the phyloreference.\n      //  2. Find all node labels that have additionalNodeProperties with\n      //     expectedPhyloreferenceNamed case-sensitively identical to\n      //     the phyloreference.\n      const nodeLabels = new Set();\n      const newick = phylogeny.newick || '()';\n\n      // Can't do anything if no phyloref is provided or if it doesn't have a label.\n      if (phyloref === undefined || !has(phyloref, 'label')) return [];\n      const phylorefLabel = phyloref.label;\n\n      getters.getNodeLabelsFromNewick(newick).forEach((nodeLabel) => {\n        // Is this node label identical to the phyloreference name?\n        if (nodeLabel === phylorefLabel) {\n          nodeLabels.add(nodeLabel);\n        } else if (\n          has(phylogeny, 'additionalNodeProperties')\n          && has(phylogeny.additionalNodeProperties, nodeLabel)\n          && has(phylogeny.additionalNodeProperties[nodeLabel], 'expectedPhyloreferenceNamed')\n        ) {\n          // Does this node label have an expectedPhyloreferenceNamed that\n          // includes this phyloreference name?\n\n          const expectedPhylorefs = phylogeny\n            .additionalNodeProperties[nodeLabel]\n            .expectedPhyloreferenceNamed;\n\n          if (expectedPhylorefs.includes(phylorefLabel)) {\n            nodeLabels.add(nodeLabel);\n          }\n        }\n      });\n\n      // Return node labels sorted alphabetically.\n      return Array.from(nodeLabels).sort();\n    },\n\n    getResolvedNodesForPhylogeny: (state, getters, rootState) => (\n      phylogeny,\n      phyloref,\n      flagReturnShortURIs = false,\n    ) => {\n      // Return a list of nodes that were resolved for phyloref `phyloref` on\n      // phylogeny `phylogeny`.\n      // - flagReturnNodeURI: if true, the entire URI will be returned, otherwise\n      // just the node number will be returned.\n\n      // Do we have reasoning results for this phyloreference?\n      const phylorefURI = getters.getBaseURIForPhyloref(phyloref);\n      if (\n        !has(rootState.phyx.reasoningResults, 'phylorefs')\n        || !has(rootState.phyx.reasoningResults.phylorefs, phylorefURI)\n      ) return [];\n\n      // Identify the resolved nodes.\n      const nodesResolved = rootState.phyx.reasoningResults.phylorefs[phylorefURI];\n      const phylogenyURI = getters.getBaseURIForPhylogeny(phylogeny);\n      const nodeURIs = nodesResolved.filter(uri => uri.includes(phylogenyURI));\n\n      // Either return the URIs as-is or remove the phylogeny URI (so we return e.g. \"node21\").\n      if (!flagReturnShortURIs) return nodeURIs;\n      return nodeURIs.map(iri => iri.replace(`${phylogenyURI}_`, ''));\n    },\n  },\n  mutations: {\n    setPhylorefProps(state, payload) {\n      // Set one or more properties on a phyloreference.\n\n      if (!has(payload, 'phyloref')) {\n        throw new Error('setPhylorefProps needs a phyloref to modify using the \"phyloref\" argument');\n      }\n      if (has(payload, 'label')) {\n        Vue.set(payload.phyloref, 'label', payload.label);\n      }\n      if (has(payload, 'cladeDefinition')) {\n        Vue.set(payload.phyloref, 'cladeDefinition', payload.cladeDefinition);\n      }\n      if (has(payload, 'curatorComments')) {\n        Vue.set(payload.phyloref, 'curatorComments', payload.curatorComments);\n      }\n    },\n\n    addSpecifier(state, payload) {\n      // Add an empty specifier to a particular phyloreference.\n\n      if (!has(payload, 'phyloref')) {\n        throw new Error('addSpecifier needs a phyloref to modify using the \"phyloref\" argument');\n      }\n\n      if (!has(payload.phyloref, 'externalSpecifiers')) {\n        Vue.set(payload.phyloref, 'externalSpecifiers', []);\n      }\n\n      // TODO: remove when the model changes.\n      payload.phyloref.externalSpecifiers.push({ referencesTaxonomicUnits: [{}] });\n    },\n\n    deleteSpecifier(state, payload) {\n      // Delete a specifier from a phyloreference.\n\n      if (!has(payload, 'phyloref')) {\n        throw new Error('deleteSpecifier needs a phyloref to modify using the \"phyloref\" argument');\n      }\n      if (!has(payload, 'specifier')) {\n        throw new Error('deleteSpecifier needs a specifier to delete using the \"specifier\" argument');\n      }\n\n      if (has(payload.phyloref, 'internalSpecifiers') && payload.phyloref.internalSpecifiers.includes(payload.specifier)) {\n        payload.phyloref.internalSpecifiers.splice(\n          payload.phyloref.internalSpecifiers.indexOf(payload.specifier),\n          1,\n        );\n      }\n\n      if (has(payload.phyloref, 'externalSpecifiers') && payload.phyloref.externalSpecifiers.includes(payload.specifier)) {\n        payload.phyloref.externalSpecifiers.splice(\n          payload.phyloref.externalSpecifiers.indexOf(payload.specifier),\n          1,\n        );\n      }\n    },\n\n    setSpecifierProps(state, payload) {\n      // Set one or more properties on a specifier.\n\n      if (!has(payload, 'specifier')) {\n        throw new Error('setSpecifierProps needs a specifier to modify using the \"specifier\" argument');\n      }\n      if (has(payload, 'verbatimSpecifier')) {\n        Vue.set(payload.specifier, 'verbatimSpecifier', payload.verbatimSpecifier);\n      }\n    },\n\n    setSpecifierType(state, payload) {\n      // Change the type of a specifier. Since we maintain separate internalSpecifiers\n      // and externalSpecifiers arrays, we may need to delete the specifier from one\n      // array and add it to the other.\n\n      if (!has(payload, 'phyloref')) {\n        throw new Error('setSpecifierType needs a phyloref to modify using the \"phyloref\" argument');\n      }\n      if (!has(payload, 'specifier')) {\n        throw new Error('setSpecifierType needs a specifier to modify using the \"specifier\" argument');\n      }\n      if (!has(payload, 'specifierType')) {\n        throw new Error('setSpecifierType needs a specifierType to set to using the \"specifierType\" argument');\n      }\n\n      // Remove this specifier from this phyloreference.\n      if (has(payload.phyloref, 'internalSpecifiers') && payload.phyloref.internalSpecifiers.includes(payload.specifier)) {\n        payload.phyloref.internalSpecifiers.splice(\n          payload.phyloref.internalSpecifiers.indexOf(payload.specifier),\n          1,\n        );\n      }\n      if (has(payload.phyloref, 'externalSpecifiers') && payload.phyloref.externalSpecifiers.includes(payload.specifier)) {\n        payload.phyloref.externalSpecifiers.splice(\n          payload.phyloref.externalSpecifiers.indexOf(payload.specifier),\n          1,\n        );\n      }\n\n      // Reinsert it into the correct place.\n      if (payload.specifierType === 'internal') {\n        if (has(payload.phyloref, 'internalSpecifiers')) {\n          payload.phyloref.internalSpecifiers.push(payload.specifier);\n        } else {\n          Vue.set(payload.phyloref, 'internalSpecifiers', [payload.specifier]);\n        }\n      } else if (payload.specifierType === 'external') {\n        if (has(payload.phyloref, 'externalSpecifiers')) {\n          payload.phyloref.externalSpecifiers.push(payload.specifier);\n        } else {\n          Vue.set(payload.phyloref, 'externalSpecifiers', [payload.specifier]);\n        }\n      } else {\n        throw new Error(`Unknown specifier type: ${payload.specifierType}`);\n      }\n    },\n\n    setSpecifierPart(state, payload) {\n      // Replaces one or more specifier part with a new value. Note that values\n      // can only be scientific names or occurrence IDs; external references use\n      // updateSpecifierExternalReference().\n      if (!has(payload, 'specifierPart')) {\n        throw new Error('setSpecifierPart needs a specifier part to modify using the \"specifierPart\" argument');\n      }\n\n      if (has(payload, 'scientificName')) {\n        Vue.set(payload.specifierPart, 'scientificName', payload.scientificName);\n      }\n      if (has(payload, 'occurrenceID')) {\n        Vue.set(payload.specifierPart, 'occurrenceID', payload.occurrenceID);\n      }\n    },\n\n    updateSpecifierExternalReference(state, payload) {\n      // Given a specifier, replace one external reference with another.\n      if (!has(payload, 'specifier')) {\n        throw new Error('updateSpecifierExternalReference needs a specifier to modify using the \"specifier\" argument');\n      }\n\n      if (!has(payload.specifier, 'externalReferences')) {\n        Vue.set(payload.specifier, 'externalReferences', []);\n      }\n\n      if (has(payload, 'fromExternalReference')) {\n        if (payload.specifier.externalReferences.includes(payload.fromExternalReference)) {\n          payload.specifier.externalReferences.splice(\n            payload.specifier.externalReferences.indexOf(payload.fromExternalReference),\n            1,\n          );\n        }\n      }\n\n      if (has(payload, 'toExternalReference')) {\n        payload.specifier.externalReferences.push(payload.toExternalReference);\n      }\n    },\n\n    addToSpecifier(state, payload) {\n      // Add a new external reference, specimen or scientific name to a phyloreference.\n\n      if (!has(payload, 'specifier')) {\n        throw new Error('addToSpecifier needs a specifier to modify using the \"specifier\" argument');\n      }\n\n      // Add external reference (if one is provided).\n      if (has(payload, 'externalReference')) {\n        if (!has(payload.specifier, 'externalReferences')) {\n          Vue.set(payload.specifier, 'externalReferences', []);\n        }\n\n        payload.specifier.externalReferences.push(payload.externalReference);\n      }\n\n      // Add specimen (if one is provided).\n      if (has(payload, 'specimen')) {\n        if (!has(payload.specifier, 'includesSpecimens')) {\n          Vue.set(payload.specifier, 'includesSpecimens', []);\n        }\n\n        payload.specifier.includesSpecimens.push(payload.specimen);\n      }\n\n      // Add scientific name (if one is provided).\n      if (has(payload, 'scientificName')) {\n        if (!has(payload.specifier, 'scientificNames')) {\n          Vue.set(payload.specifier, 'scientificNames', []);\n        }\n\n        payload.specifier.scientificNames.push(payload.scientificName);\n      }\n    },\n\n    deleteFromSpecifier(state, payload) {\n      // Delete a scientific name, specimen or external reference from a given specifier.\n\n      if (!has(payload, 'specifier')) {\n        throw new Error('deleteFromSpecifier needs a specifier to modify using the \"specifier\" argument');\n      }\n      if (has(payload, 'scientificName')) {\n        if (!has(payload.specifier, 'scientificNames')) Vue.set(payload.specifier, 'scientificNames', []);\n        if (payload.specifier.scientificNames.includes(payload.scientificName)) {\n          payload.specifier.scientificNames.splice(\n            payload.specifier.scientificNames.indexOf(payload.scientificName),\n            1,\n          );\n        }\n      }\n      if (has(payload, 'specimen')) {\n        if (!has(payload.specifier, 'includesSpecimens')) Vue.set(payload.specifier, 'includesSpecimens', []);\n        if (payload.specifier.includesSpecimens.includes(payload.specimen)) {\n          payload.specifier.includesSpecimens.splice(\n            payload.specifier.includesSpecimens.indexOf(payload.specimen),\n            1,\n          );\n        }\n      }\n      if (has(payload, 'externalReference')) {\n        if (!has(payload.specifier, 'externalReferences')) Vue.set(payload.specifier, 'externalReferences', []);\n        if (payload.specifier.externalReferences.includes(payload.externalReference)) {\n          payload.specifier.externalReferences.splice(\n            payload.specifier.externalReferences.indexOf(payload.externalReference),\n            1,\n          );\n        }\n      }\n    },\n  },\n};\n","/*\n * Provides access to terms in the generated JSON-LD file, in particular URIs\n * for the file, phylogenies and phyloreferences.\n */\n\nexport default {\n  state: {\n    phyxBaseURI: '',\n  },\n  getters: {\n    getBaseURIForPhylogeny: (state, getters, rootState) => phylogeny => `#phylogeny${rootState.phyx.currentPhyx.phylogenies.indexOf(phylogeny)}`,\n    getBaseURIForPhyloref: (state, getters, rootState) => phyloref => `#phyloref${rootState.phyx.currentPhyx.phylorefs.indexOf(phyloref)}`,\n  },\n};\n","<template>\n  <div id=\"app\">\n    <TopNavigationBar :version=\"CURATION_TOOL_VERSION\" />\n    <div id=\"wrapper\">\n      <Sidebar />\n      <div id=\"page-content-wrapper\">\n        <template v-if=\"display.phyloref\">\n          <template v-if=\"display.specifier\">\n            <SpecifierView\n              :phyloref=\"display.phyloref\"\n              :specifier=\"display.specifier\"\n            />\n          </template>\n          <template v-else>\n            <PhylorefView\n              :phyloref=\"display.phyloref\"\n              :specifier=\"display.specifier\"\n            />\n          </template>\n        </template>\n        <template v-else-if=\"display.phylogeny\">\n          <PhylogenyView :phylogeny=\"display.phylogeny\" />\n        </template>\n        <template v-else>\n          <PhyxView />\n        </template>\n      </div>\n    </div>\n\n    <!-- All modals are included here -->\n    <AboutCurationToolModal />\n    <AdvancedOptionsModal />\n  </div>\n</template>\n\n<script>\n/*\n * Lays out the entire page, including inserting the (hidden) modals so they can be displayed.\n */\n\nimport { isEqual } from 'lodash';\nimport { mapState } from 'vuex';\n\n// Navigation controls.\nimport TopNavigationBar from './components/TopNavigationBar.vue';\nimport Sidebar from './components/sidebar/Sidebar.vue';\n\n// At any point, one of these views will be displayed.\nimport PhylogenyView from './components/phylogeny/PhylogenyView.vue';\nimport PhylorefView from './components/phyloref/PhylorefView.vue';\nimport SpecifierView from './components/phyloref/SpecifierView.vue';\nimport PhyxView from './components/phyx/PhyxView.vue';\n\n// Modal dialogs to be displayed above the UI.\nimport AboutCurationToolModal from './components/modals/AboutCurationToolModal.vue';\nimport AdvancedOptionsModal from './components/modals/AdvancedOptionsModal.vue';\n\nexport default {\n  name: 'App',\n  components: {\n    TopNavigationBar,\n    Sidebar,\n    PhyxView,\n    PhylogenyView,\n    PhylorefView,\n    SpecifierView,\n    AboutCurationToolModal,\n    AdvancedOptionsModal,\n  },\n  computed: mapState({\n    CURATION_TOOL_VERSION: state => state.CURATION_TOOL_VERSION,\n    display: state => state.ui.display,\n    currentPhyx: state => state.phyx.currentPhyx,\n    loadedPhyx: state => state.phyx.loadedPhyx,\n  }),\n  created() {\n    // If someone tries to navigate away from the window while the\n    // PHYX has been modified, ask users to confirm before leaving.\n    // Confirmation message to display to the user. Note that modern\n    // browsers do not display this message, but provide a generic\n    // \"content has changed\" dialog instead.\n    $(window).on('beforeunload', () => {\n      const confirmationMessage = 'Your modifications have not been saved and will be lost if you close the Curation Tool. Confirm to discard your changes, or cancel to return to the Curation Tool.';\n\n      if (!isEqual(this.loadedPhyx, this.currentPhyx)) return confirmationMessage;\n      return false;\n    });\n  },\n};\n</script>\n\n<style>\n/*\n * Classes for overall design.\n */\n\n#wrapper {\n  padding-top: 64px;\n  padding-left: 250px;\n  margin-bottom: 10px;\n  transition: all 0.4s ease 0s;\n}\n\n#sidebar-wrapper {\n  font-size: 80%;\n  margin-left: -250px;\n  padding: 0px 5px;\n  position: fixed;\n  padding-top: 64px;\n  bottom: 0px;\n  left: 250px;\n  width: 250px;\n  height: 100%;\n  overflow-y: auto;\n  z-index: 1000;\n  transition: all 0.4s ease 0s;\n}\n\n#page-content-wrapper {\n  width: 100%;\n  padding: 0px 10px;\n}\n</style>\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('nav',{staticClass:\"navbar navbar-expand navbar-dark bg-dark mb-2 fixed-top\"},[_c('a',{staticClass:\"navbar-brand\",attrs:{\"href\":\"index.html\"}},[_vm._v(\"\\n      Curation Tool v\"+_vm._s(_vm.version)+\"\\n    \")]),_vm._m(0)])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"collapse navbar-collapse\"},[_c('ul',{staticClass:\"navbar-nav\"},[_c('li',{staticClass:\"nav-item\"},[_c('a',{staticClass:\"nav-link\",attrs:{\"href\":\"#\",\"onclick\":\"$('#about-curation-tool').modal()\"}},[_vm._v(\"\\n            About this tool\\n          \")])]),_c('li',{staticClass:\"nav-item\"},[_c('a',{staticClass:\"nav-link\",attrs:{\"href\":\"https://www.phyloref.org/\"}},[_vm._v(\"\\n            Phyloreferencing website\\n          \")])]),_c('li',{staticClass:\"nav-item\"},[_c('a',{staticClass:\"nav-link\",attrs:{\"href\":\"https://github.com/phyloref/curation-tool\"}},[_vm._v(\"\\n            Github repository\\n          \")])]),_c('li',{staticClass:\"nav-item\"},[_c('a',{staticClass:\"nav-link\",attrs:{\"href\":\"https://github.com/phyloref/curation-tool/issues\"}},[_vm._v(\"\\n            Report bug\\n          \")])])])])}]\n\nexport { render, staticRenderFns }","export * from \"-!cache-loader?{\\\"cacheDirectory\\\":\\\"node_modules/.cache/vue-loader\\\",\\\"cacheIdentifier\\\":\\\"ca0e2238-vue-loader-template\\\"}!../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TopNavigationBar.vue?vue&type=template&id=70573c7a&\"","import { render, staticRenderFns } from \"./ModifiedCard.vue?vue&type=template&id=1e4060c8&\"\nimport script from \"./ModifiedCard.vue?vue&type=script&lang=js&\"\nexport * from \"./ModifiedCard.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"ModifiedCard.vue\"\nexport default component.exports","import { render, staticRenderFns } from \"./AboutCurationToolModal.vue?vue&type=template&id=0f847d11&\"\nimport script from \"./AboutCurationToolModal.vue?vue&type=script&lang=js&\"\nexport * from \"./AboutCurationToolModal.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"AboutCurationToolModal.vue\"\nexport default component.exports","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","<template>\n  <div>\n    <!-- Add a warning if this phyloreference has changed -->\n    <ModifiedCard\n      message=\"This phyloreference has been modified since being loaded! Use 'Save as JSON' to save your changes.\"\n      :compare=\"selectedPhyloref\"\n      :compare-to=\"currentPhyx.phylorefs[currentPhyx.phylorefs.indexOf(selectedPhyloref)]\"\n    />\n\n    <!-- Phyloreference information -->\n    <div\n      v-if=\"!display.phylogeny\"\n      class=\"card\"\n    >\n      <h5 class=\"card-header\">\n        Phyloreference information\n      </h5>\n\n      <div class=\"card-body\">\n        <form>\n          <!-- Phyloreference label -->\n          <div class=\"form-group row\">\n            <label\n              for=\"label\"\n              class=\"col-form-label col-md-2\"\n            >\n              Label\n            </label>\n            <div class=\"col-md-10\">\n              <input\n                id=\"label\"\n                v-model=\"selectedPhylorefLabel\"\n                type=\"text\"\n                class=\"form-control\"\n                placeholder=\"Phyloreference label\"\n              >\n            </div>\n          </div>\n\n          <!-- Phyloreference clade definition -->\n          <div class=\"form-group row\">\n            <label\n              for=\"definition\"\n              class=\"col-form-label col-md-2\"\n            >\n              Clade definition\n            </label>\n            <div class=\"col-md-10\">\n              <textarea\n                id=\"definition\"\n                v-model.lazy=\"selectedCladeDefinition\"\n                class=\"form-control\"\n                rows=\"6\"\n                placeholder=\"Phylogenetic clade definition\"\n              />\n            </div>\n          </div>\n\n          <!-- Phyloreference curator comments -->\n          <div class=\"form-group row\">\n            <label\n              for=\"curator-comments\"\n              class=\"col-form-label col-md-2\"\n            >\n              Curator comments\n            </label>\n            <div class=\"col-md-10\">\n              <textarea\n                id=\"curator-comments\"\n                v-model.lazy=\"selectedCuratorComments\"\n                class=\"form-control\"\n                rows=\"2\"\n                placeholder=\"Curator notes relating to this phyloreference\"\n              />\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n\n    <div class=\"card mt-2\">\n      <h5 class=\"card-header\">\n        Specifiers\n      </h5>\n      <div class=\"card-body\">\n        <div\n          v-for=\"(specifier, index) of selectedPhyloref.internalSpecifiers\"\n          class=\"form-row input-group\"\n        >\n          <div class=\"input-group-prepend\">\n            <a\n              class=\"btn btn-outline-secondary\"\n            >\n              Internal\n            </a>\n          </div>\n          <input\n            readonly\n            type=\"text\"\n            class=\"form-control\"\n            :value=\"getSpecifierLabel(specifier)\"\n          >\n          <div class=\"input-group-append\">\n            <button\n              class=\"btn btn-outline-secondary\"\n              @click=\"$store.commit('changeDisplay', {phyloref: selectedPhyloref, specifier: specifier})\"\n            >\n              Edit\n            </button>\n          </div>\n        </div>\n        <div\n          v-for=\"(specifier, index) of selectedPhyloref.externalSpecifiers\"\n          class=\"form-row input-group\"\n        >\n          <div class=\"input-group-prepend\">\n            <a\n              class=\"btn btn-outline-secondary\"\n            >\n              External\n            </a>\n          </div>\n          <input\n            readonly\n            type=\"text\"\n            class=\"form-control\"\n            :value=\"getSpecifierLabel(specifier)\"\n          >\n          <div class=\"input-group-append\">\n            <button\n              class=\"btn btn-outline-secondary\"\n              @click=\"$store.commit('changeDisplay', {phyloref: selectedPhyloref, specifier: specifier})\"\n            >\n              Edit\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!--\n      Panel with information on expected and actual resolution\n      We should:\n        - display all phylogenies when looking up a phyloreference or specifiers\n        - display only the selected phylogeny when it's selected\n    -->\n    <template v-for=\"(phylogeny, phylogenyIndex) of currentPhyx.phylogenies\">\n      <template v-if=\"selectedPhylogeny === undefined || selectedPhylogeny === phylogeny\">\n        <div class=\"card mt-2\">\n          <h5 class=\"card-header\">\n            Expected and actual resolution <span v-if=\"display.phylogeny\">\n              of {{ phyloref.label || 'unlabeled phyloreference' }}\n            </span> on {{ phylogeny.label || `Phylogeny ${phylogenyIndex + 1}` }}\n          </h5>\n          <div class=\"card-body\">\n            <div class=\"form-row\">\n              <!-- Node(s) this phyloreference is expected to resolve to -->\n              <label\n                for=\"expected-nodes\"\n                class=\"col-md-2 col-form-label\"\n              >\n                Expected nodes\n              </label>\n\n              <div class=\"input-group col-md-4\">\n                <!-- Display the phylogeny where this node is expected to match -->\n                <div class=\"input-group-prepend\">\n                  <a\n                    class=\"btn btn-outline-secondary\"\n                    :href=\"'#current_expected_label_phylogeny_' + phylogenyIndex\"\n                    title=\"Click here to jump to the expected label\"\n                    type=\"button\"\n                  >\n                    Go to node\n                  </a>\n                </div>\n\n                <!-- Display the matching node(s) -->\n                <template v-if=\"getExpectedNodeLabels(phylogeny).length === 0\">\n                  <!-- We matched no nodes -->\n                  <input\n                    readonly\n                    type=\"text\"\n                    class=\"form-control\"\n                    value=\"No nodes could be matched\"\n                  >\n                </template>\n\n                <template v-if=\"getExpectedNodeLabels(phylogeny).length === 1\">\n                  <!-- We matched exactly one node -->\n                  <input\n                    readonly\n                    type=\"text\"\n                    class=\"form-control\"\n                    :value=\"getExpectedNodeLabels(phylogeny)[0]\"\n                  >\n                </template>\n\n                <template v-if=\"getExpectedNodeLabels(phylogeny).length > 1\">\n                  <!-- We matched more than one node -->\n                  <input\n                    readonly\n                    type=\"text\"\n                    class=\"form-control\"\n                    :value=\"getExpectedNodeLabels(phylogeny).length + ' nodes matched: ' + getExpectedNodeLabels(phylogeny, selectedPhyloref).join(', ')\"\n                  >\n                </template>\n\n                <!-- Display a dropdown menu that allows the modified label to be changed. -->\n                <div class=\"input-group-append\">\n                  <button\n                    id=\"expected-nodes-dropdown\"\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary dropdown-toggle\"\n                    data-toggle=\"dropdown\"\n                    aria-haspopup=\"true\"\n                    aria-expanded=\"false\"\n                  >\n                    Change <span class=\"caret\" />\n                  </button>\n                  <div\n                    class=\"dropdown-menu dropright\"\n                    aria-labelledby=\"expected-nodes-dropdown\"\n                    style=\"height: 30em; overflow: visible scroll;\"\n                  >\n                    <a class=\"dropdown-header\">\n                      Labeled internal nodes in this phylogeny\n                    </a>\n                    <a\n                      v-for=\"nodeLabel of getNodeLabels(phylogeny, 'internal')\"\n                      class=\"dropdown-item\"\n                      :class=\"{active: getExpectedNodeLabels(phylogeny).includes(nodeLabel)}\"\n                      href=\"#selected-phyloref\"\n                      @click=\"togglePhylorefExpectedNodeLabel(phylogeny, selectedPhyloref, nodeLabel)\"\n                    >\n                      {{ nodeLabel }}\n                    </a>\n                    <div class=\"dropdown-divider\" />\n                    <a class=\"dropdown-header\">\n                      Labeled terminal nodes in this phylogeny\n                    </a>\n                    <a\n                      v-for=\"nodeLabel of getNodeLabels(phylogeny, 'terminal')\"\n                      class=\"dropdown-item\"\n                      :class=\"{active: getExpectedNodeLabels(phylogeny).includes(nodeLabel)}\"\n                      href=\"#selected-phyloref\"\n                      @click=\"togglePhylorefExpectedNodeLabel(phylogeny, selectedPhyloref, nodeLabel)\"\n                    >\n                      {{ nodeLabel }}\n                    </a>\n                  </div>\n                </div>\n              </div>\n\n              <!-- Node(s) this phyloreference actually resolved to -->\n              <label\n                for=\"actual-nodes\"\n                class=\"col-form-label col-md-2\"\n              >\n                Actual resolved nodes\n              </label>\n\n              <div class=\"input-group col-md-4\">\n                <!-- Display the phylogeny where this node is expected to match -->\n                <div class=\"input-group-prepend\">\n                  <a\n                    class=\"btn btn-outline-secondary\"\n                    :href=\"'#current_pinning_node_phylogeny_' + phylogenyIndex\"\n                    title=\"Click here to jump to this node\"\n                    type=\"button\"\n                  >\n                    Go to node\n                  </a>\n                </div>\n\n                <!-- Display the matching node(s) -->\n                <template v-if=\"!nodesResolved\">\n                  <input\n                    readonly\n                    type=\"text\"\n                    class=\"form-control\"\n                    value=\"Click 'Reason' to reason over all phyloreferences.\"\n                  >\n                </template>\n                <template v-else>\n                  <template v-if=\"getResolvedNodes(phylogeny).length === 0\">\n                    <!-- We matched no nodes -->\n                    <input\n                      readonly\n                      type=\"text\"\n                      class=\"form-control\"\n                      :value=\"'No nodes could be matched'\"\n                    >\n                  </template>\n                  <template v-if=\"getResolvedNodes(phylogeny).length === 1\">\n                    <!-- We matched exactly one node -->\n                    <input\n                      readonly\n                      type=\"text\"\n                      class=\"form-control\"\n                      :value=\"getResolvedNodes(phylogeny)[0]\"\n                    >\n                  </template>\n                  <template v-if=\"getResolvedNodes(phylogeny).length > 1\">\n                    <!-- We matched more than one node -->\n                    <input\n                      readonly\n                      type=\"text\"\n                      class=\"form-control\"\n                      :value=\"getResolvedNodes(phylogeny).length + ' nodes matched: ' + getResolvedNodes(phylogeny).join(', ')\"\n                    >\n                  </template>\n                </template>\n              </div>\n            </div>\n\n            <!-- Display the phylogeny -->\n            <div\n              class=\"card mt-4 p-2\"\n            >\n              <Phylotree\n                :phylogeny-index=\"String(phylogenyIndex)\"\n                :phylogeny=\"phylogeny\"\n                :phyloref=\"selectedPhyloref\"\n                :newick=\"phylogeny.newick\"\n              />\n            </div>\n          </div>\n        </div>\n      </template>\n    </template>\n  </div>\n</template>\n\n<script>\n/*\n * A view for displaying a phyloreference and how it resolves on all phylogenies.\n */\n\nimport { mapState } from 'vuex';\nimport { has } from 'lodash';\nimport { PhylogenyWrapper, PhylorefWrapper } from '@phyloref/phyx';\n\nimport ModifiedCard from '../cards/ModifiedCard.vue';\nimport Phylotree from '../phylogeny/Phylotree.vue';\n\nexport default {\n  name: 'PhylorefView',\n  components: {\n    ModifiedCard,\n    Phylotree,\n  },\n  computed: {\n    /*\n     * The following properties allow you to get or set phyloref label, clade definition or curator comments.\n     */\n    selectedPhylorefLabel: {\n      get() { return this.selectedPhyloref.label; },\n      set(label) { this.$store.commit('setPhylorefProps', { phyloref: this.selectedPhyloref, label }); },\n    },\n    selectedCladeDefinition: {\n      get() { return this.selectedPhyloref.cladeDefinition; },\n      set(cladeDefinition) { this.$store.commit('setPhylorefProps', { phyloref: this.selectedPhyloref, cladeDefinition }); },\n    },\n    selectedCuratorComments: {\n      get() { return this.selectedPhyloref.curatorComments; },\n      set(curatorComments) { this.$store.commit('setPhylorefProps', { phyloref: this.selectedPhyloref, curatorComments }); },\n    },\n    phylorefURI() {\n      // Get the base URI of this phyloreference.\n      return this.$store.getters.getBaseURIForPhyloref(this.selectedPhyloref);\n    },\n    nodesResolved() {\n      // Get a list of nodes resolved by this phyloreference.\n      if (!has(this.$store.state.phyx.reasoningResults, 'phylorefs')) return undefined;\n      if (has(this.$store.state.phyx.reasoningResults.phylorefs, this.phylorefURI)) {\n        return this.$store.state.phyx.reasoningResults.phylorefs[this.phylorefURI];\n      }\n      return undefined;\n    },\n    ...mapState({\n      currentPhyx: state => state.phyx.currentPhyx,\n      loadedPhyx: state => state.phyx.loadedPhyx,\n      phylogenies: state => state.phyx.currentPhyx.phylogenies,\n      display: state => state.ui.display,\n      selectedPhylogeny: state => state.ui.display.phylogeny,\n      selectedPhyloref: state => state.ui.display.phyloref,\n    }),\n  },\n  methods: {\n    getNodeLabels(phylogeny, nodeType) {\n      // Return a list of node labels in a particular phylogeny.\n      return new PhylogenyWrapper(phylogeny).getNodeLabels(nodeType).sort();\n    },\n    getExpectedNodeLabels(phylogeny) {\n      // Return a list of nodes that this phyloreference is expected to resolve to.\n      return new PhylorefWrapper(this.selectedPhyloref).getExpectedNodeLabels(phylogeny);\n    },\n    getSpecifierLabel(specifier) {\n      // Return the specifier label of a particular specifier.\n      return PhylorefWrapper.getSpecifierLabel(specifier);\n    },\n    getResolvedNodes(phylogeny, flagReturnShortURIs = true) {\n      // Return the list of nodes on a particular phylogeny that this phyloreference\n      // has been determined to resolve on by JPhyloRef.\n      return this.$store.getters.getResolvedNodesForPhylogeny(phylogeny, this.selectedPhyloref, flagReturnShortURIs);\n    },\n  },\n};\n</script>\n","import { render, staticRenderFns } from \"./AdvancedOptionsModal.vue?vue&type=template&id=1dd25cd7&\"\nimport script from \"./AdvancedOptionsModal.vue?vue&type=script&lang=js&\"\nexport * from \"./AdvancedOptionsModal.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"AdvancedOptionsModal.vue\"\nexport default component.exports","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AboutCurationToolModal.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AboutCurationToolModal.vue?vue&type=script&lang=js&\"","<template>\n  <div>\n    <!-- Navigation bar at the top of the page -->\n    <nav class=\"navbar navbar-expand navbar-dark bg-dark mb-2 fixed-top\">\n      <a\n        class=\"navbar-brand\"\n        href=\"index.html\"\n      >\n        Curation Tool v{{ version }}\n      </a>\n      <div class=\"collapse navbar-collapse\">\n        <ul class=\"navbar-nav\">\n          <li class=\"nav-item\">\n            <a\n              class=\"nav-link\"\n              href=\"#\"\n              onclick=\"$('#about-curation-tool').modal()\"\n            >\n              About this tool\n            </a>\n          </li>\n          <li class=\"nav-item\">\n            <a\n              class=\"nav-link\"\n              href=\"https://www.phyloref.org/\"\n            >\n              Phyloreferencing website\n            </a>\n          </li>\n          <li class=\"nav-item\">\n            <a\n              class=\"nav-link\"\n              href=\"https://github.com/phyloref/curation-tool\"\n            >\n              Github repository\n            </a>\n          </li>\n          <li class=\"nav-item\">\n            <a\n              class=\"nav-link\"\n              href=\"https://github.com/phyloref/curation-tool/issues\"\n            >\n              Report bug\n            </a>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  </div>\n</template>\n\n<script>\n\n/*\n * The top navigation bar provides links to Phyloreferencing resources,\n * the about-us modal, and a link to report bugs.\n */\n\nexport default {\n  name: 'TopNavigationBar',\n  props: {\n    version: {\n      type: String,\n      default: 'UNKNOWN',\n    },\n  },\n};\n</script>\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"card border-dark\"},[_c('h5',{staticClass:\"card-header border-dark\"},[_vm._v(\"\\n    Phyloreferences in this file\\n  \")]),_c('div',{staticClass:\"card-body p-0\"},[_c('table',{staticClass:\"table table-hover table-flush\"},[_c('thead',[_c('th',[_vm._v(\" \")]),_c('th',[_vm._v(\"Phyloreference\")]),_c('th',[_vm._v(\"Internal specifiers\")]),_c('th',[_vm._v(\"External specifiers\")]),_vm._l((_vm.phylogenies),function(phylogeny,phylogenyIndex){return _c('th',[_vm._v(\"\\n          \"+_vm._s(phylogeny.label || (\"Phylogeny \" + (phylogenyIndex + 1)))+\"\\n        \")])})],2),_c('tbody',[(_vm.phylorefs.length === 0)?_c('tr',{staticClass:\"bg-white\"},[_c('td',{attrs:{\"colspan\":4 + _vm.phylogenies.length}},[_c('Center',[_c('em',[_vm._v(\"No phyloreferences loaded\")])])],1)]):_vm._e(),_vm._l((_vm.phylorefs),function(phyloref,phylorefIndex){return _c('tr',[_c('td',[_vm._v(\" \")]),_c('td',[_c('a',{attrs:{\"href\":\"javascript: void(0)\"},on:{\"click\":function($event){_vm.$store.commit('changeDisplay', { phyloref: phyloref })}}},[_vm._v(\"\\n              \"+_vm._s(phyloref.label || (\"Phyloref \" + (phylorefIndex + 1)))+\"\\n            \")])]),_c('td',[_vm._v(_vm._s((phyloref.internalSpecifiers || []).length))]),_c('td',[_vm._v(_vm._s((phyloref.externalSpecifiers || []).length))]),_vm._l((_vm.phylogenies),function(phylogeny,phylogenyIndex){return _c('td',[(_vm.getPhylorefExpectedNodeLabels(phyloref, phylogeny).length === 0)?[_c('strong',[_vm._v(\"Not matched\")]),(_vm.hasReasoningResults(phyloref))?[_vm._v(\"\\n                but\\n                \"),(_vm.getNodeLabelsResolvedByPhyloref(phyloref, phylogeny) > 1)?[_c('strong',[_vm._v(\"resolved to multiple nodes: \"+_vm._s(_vm.getNodeLabelsResolvedByPhyloref(phyloref, phylogeny)))])]:[_vm._v(\"\\n                  resolved to \"+_vm._s(_vm.getNodeLabelsResolvedByPhyloref(phyloref, phylogeny)[0]||\"(none)\")+\"\\n                \")]]:_vm._e()]:[_vm._v(\"\\n              Matched\\n              \"),(_vm.hasReasoningResults(phyloref))?[_vm._v(\"\\n                and\\n                \"),(_vm.getNodeLabelsResolvedByPhyloref(phyloref, phylogeny) > 1)?[_c('strong',[_vm._v(\"resolved to multiple nodes: \"+_vm._s(_vm.getNodeLabelsResolvedByPhyloref(phyloref, phylogeny)))])]:[_vm._v(\"\\n                  resolved\\n                  \"),(_vm.getNodeLabelsResolvedByPhyloref(phyloref, phylogeny)[0] === _vm.getPhylorefExpectedNodeLabels(phyloref, phylogeny)[0])?[_vm._v(\"\\n                    correctly\\n                  \")]:[_c('strong',[_vm._v(\"incorrectly\")])],_vm._v(\"\\n                  to \"+_vm._s(_vm.getNodeLabelsResolvedByPhyloref(phyloref, phylogeny)[0]||\"(none)\")+\"\\n                \")]]:_vm._e()]],2)})],2)})],2)])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export * from \"-!cache-loader?{\\\"cacheDirectory\\\":\\\"node_modules/.cache/vue-loader\\\",\\\"cacheIdentifier\\\":\\\"ca0e2238-vue-loader-template\\\"}!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PhyxView.vue?vue&type=template&id=7d30e578&\"","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AdvancedOptionsModal.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AdvancedOptionsModal.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=4429c0c6&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"App.vue\"\nexport default component.exports","// Include Vue and Vuex to set up them up correctly.\nimport Vue from 'vue';\nimport Vuex from 'vuex';\n\n// Import individual store modules.\nimport phylogeny from './modules/phylogeny';\nimport phyloref from './modules/phyloref';\nimport phyx from './modules/phyx';\nimport ui from './modules/ui';\nimport owlterms from './modules/owlterms';\n\nVue.use(Vuex);\n\nconst debug = process.env.NODE_ENV !== 'production';\n\nexport default new Vuex.Store({\n  state: {\n    CURATION_TOOL_VERSION: '0.1',\n  },\n  modules: {\n    phylogeny, phyloref, phyx, ui, owlterms,\n  },\n  strict: debug,\n});\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"modal\",attrs:{\"id\":\"about-curation-tool\",\"tabindex\":\"-1\",\"role\":\"dialog\"}},[_c('div',{staticClass:\"modal-dialog\",attrs:{\"role\":\"document\"}},[_c('div',{staticClass:\"modal-content\"},[_c('div',{staticClass:\"modal-header\"},[_c('h5',{staticClass:\"modal-title\"},[_vm._v(\"\\n          About this tool\\n        \")]),_c('button',{staticClass:\"close\",attrs:{\"type\":\"button\",\"data-dismiss\":\"modal\",\"aria-label\":\"Close\"}},[_c('span',{attrs:{\"aria-hidden\":\"true\"}},[_vm._v(\"\\n            ×\\n          \")])])]),_c('div',{staticClass:\"modal-body col-md-12\"},[_c('p',[_vm._v(\"\\n          The Phyloreferencing Curation Tool was built as part of the\\n          \"),_c('a',{attrs:{\"href\":\"https://www.phyloref.org\"}},[_vm._v(\"\\n            Phyloreferencing project\\n          \")]),_vm._v(\",\\n          funded by the US National Science Foundation through collaborative\\n          grants \"),_c('a',{attrs:{\"href\":\"http://www.nsf.gov/awardsearch/showAward?AWD_ID=1458484\"}},[_vm._v(\"\\n            DBI-1458484\\n          \")]),_vm._v(\"\\n          and \"),_c('a',{attrs:{\"href\":\"http://www.nsf.gov/awardsearch/showAward?AWD_ID=1458604\"}},[_vm._v(\"\\n            DBI-1458604\\n          \")]),_vm._v(\".\\n          See \"),_c('a',{attrs:{\"href\":\"http://www.phyloref.org/about/#funding\"}},[_vm._v(\"\\n            Funding\\n          \")]),_vm._v(\" for details.\\n        \")]),_c('p',[_vm._v(\"The Curation Tool uses a number of open-source libraries, including:\")]),_c('ul',[_c('li',[_c('a',{attrs:{\"href\":\"https://cli.vuejs.org/\"}},[_vm._v(\"\\n              Vue CLI 3\\n            \")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://getbootstrap.com/\"}},[_vm._v(\"\\n              Bootstrap\\n            \")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://jquery.com/\"}},[_vm._v(\"\\n              jQuery\\n            \")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://github.com/veg/phylotree.js\"}},[_vm._v(\"\\n              phylotree.js\\n            \")]),_vm._v(\",\\n            published as \"),_c('a',{attrs:{\"href\":\"https://doi.org/10.1186/s12859-018-2283-2\"}},[_vm._v(\"\\n              Shank \"),_c('em',[_vm._v(\"et al\")]),_vm._v(\", 2018\\n            \")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://d3js.org/\"}},[_vm._v(\"\\n              D3.js\\n            \")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://momentjs.com/\"}},[_vm._v(\"\\n              Moment.js\\n            \")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://github.com/eligrey/FileSaver.js\"}},[_vm._v(\"\\n              FileSaver.js\\n            \")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://fontawesome.com/\"}},[_vm._v(\"\\n              Font Awesome\\n            \")])])])]),_c('div',{staticClass:\"modal-footer\"},[_c('button',{staticClass:\"btn btn-secondary\",attrs:{\"type\":\"button\",\"data-dismiss\":\"modal\"}},[_vm._v(\"\\n          Close\\n        \")])])])])])}]\n\nexport { render, staticRenderFns }","export * from \"-!cache-loader?{\\\"cacheDirectory\\\":\\\"node_modules/.cache/vue-loader\\\",\\\"cacheIdentifier\\\":\\\"ca0e2238-vue-loader-template\\\"}!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AboutCurationToolModal.vue?vue&type=template&id=0f847d11&\"","var map = {\n\t\"./af\": \"2bfb\",\n\t\"./af.js\": \"2bfb\",\n\t\"./ar\": \"8e73\",\n\t\"./ar-dz\": \"a356\",\n\t\"./ar-dz.js\": \"a356\",\n\t\"./ar-kw\": \"423e\",\n\t\"./ar-kw.js\": \"423e\",\n\t\"./ar-ly\": \"1cfd\",\n\t\"./ar-ly.js\": \"1cfd\",\n\t\"./ar-ma\": \"0a84\",\n\t\"./ar-ma.js\": \"0a84\",\n\t\"./ar-sa\": \"8230\",\n\t\"./ar-sa.js\": \"8230\",\n\t\"./ar-tn\": \"6d83\",\n\t\"./ar-tn.js\": \"6d83\",\n\t\"./ar.js\": \"8e73\",\n\t\"./az\": \"485c\",\n\t\"./az.js\": \"485c\",\n\t\"./be\": \"1fc1\",\n\t\"./be.js\": \"1fc1\",\n\t\"./bg\": \"84aa\",\n\t\"./bg.js\": \"84aa\",\n\t\"./bm\": \"a7fa\",\n\t\"./bm.js\": \"a7fa\",\n\t\"./bn\": \"9043\",\n\t\"./bn.js\": \"9043\",\n\t\"./bo\": \"d26a\",\n\t\"./bo.js\": \"d26a\",\n\t\"./br\": \"6887\",\n\t\"./br.js\": \"6887\",\n\t\"./bs\": \"2554\",\n\t\"./bs.js\": \"2554\",\n\t\"./ca\": \"d716\",\n\t\"./ca.js\": \"d716\",\n\t\"./cs\": \"3c0d\",\n\t\"./cs.js\": \"3c0d\",\n\t\"./cv\": \"03ec\",\n\t\"./cv.js\": \"03ec\",\n\t\"./cy\": \"9797\",\n\t\"./cy.js\": \"9797\",\n\t\"./da\": \"0f14\",\n\t\"./da.js\": \"0f14\",\n\t\"./de\": \"b469\",\n\t\"./de-at\": \"b3eb\",\n\t\"./de-at.js\": \"b3eb\",\n\t\"./de-ch\": \"bb71\",\n\t\"./de-ch.js\": \"bb71\",\n\t\"./de.js\": \"b469\",\n\t\"./dv\": \"598a\",\n\t\"./dv.js\": \"598a\",\n\t\"./el\": \"8d47\",\n\t\"./el.js\": \"8d47\",\n\t\"./en-SG\": \"cdab\",\n\t\"./en-SG.js\": \"cdab\",\n\t\"./en-au\": \"0e6b\",\n\t\"./en-au.js\": \"0e6b\",\n\t\"./en-ca\": \"3886\",\n\t\"./en-ca.js\": \"3886\",\n\t\"./en-gb\": \"39a6\",\n\t\"./en-gb.js\": \"39a6\",\n\t\"./en-ie\": \"e1d3\",\n\t\"./en-ie.js\": \"e1d3\",\n\t\"./en-il\": \"7333\",\n\t\"./en-il.js\": \"7333\",\n\t\"./en-nz\": \"6f50\",\n\t\"./en-nz.js\": \"6f50\",\n\t\"./eo\": \"65db\",\n\t\"./eo.js\": \"65db\",\n\t\"./es\": \"898b\",\n\t\"./es-do\": \"0a3c\",\n\t\"./es-do.js\": \"0a3c\",\n\t\"./es-us\": \"55c9\",\n\t\"./es-us.js\": \"55c9\",\n\t\"./es.js\": \"898b\",\n\t\"./et\": \"ec18\",\n\t\"./et.js\": \"ec18\",\n\t\"./eu\": \"0ff2\",\n\t\"./eu.js\": \"0ff2\",\n\t\"./fa\": \"8df4\",\n\t\"./fa.js\": \"8df4\",\n\t\"./fi\": \"81e9\",\n\t\"./fi.js\": \"81e9\",\n\t\"./fo\": \"0721\",\n\t\"./fo.js\": \"0721\",\n\t\"./fr\": \"9f26\",\n\t\"./fr-ca\": \"d9f8\",\n\t\"./fr-ca.js\": \"d9f8\",\n\t\"./fr-ch\": \"0e49\",\n\t\"./fr-ch.js\": \"0e49\",\n\t\"./fr.js\": \"9f26\",\n\t\"./fy\": \"7118\",\n\t\"./fy.js\": \"7118\",\n\t\"./ga\": \"5120\",\n\t\"./ga.js\": \"5120\",\n\t\"./gd\": \"f6b4\",\n\t\"./gd.js\": \"f6b4\",\n\t\"./gl\": \"8840\",\n\t\"./gl.js\": \"8840\",\n\t\"./gom-latn\": \"0caa\",\n\t\"./gom-latn.js\": \"0caa\",\n\t\"./gu\": \"e0c5\",\n\t\"./gu.js\": \"e0c5\",\n\t\"./he\": \"c7aa\",\n\t\"./he.js\": \"c7aa\",\n\t\"./hi\": \"dc4d\",\n\t\"./hi.js\": \"dc4d\",\n\t\"./hr\": \"4ba9\",\n\t\"./hr.js\": \"4ba9\",\n\t\"./hu\": \"5b14\",\n\t\"./hu.js\": \"5b14\",\n\t\"./hy-am\": \"d6b6\",\n\t\"./hy-am.js\": \"d6b6\",\n\t\"./id\": \"5038\",\n\t\"./id.js\": \"5038\",\n\t\"./is\": \"0558\",\n\t\"./is.js\": \"0558\",\n\t\"./it\": \"6e98\",\n\t\"./it-ch\": \"6f12\",\n\t\"./it-ch.js\": \"6f12\",\n\t\"./it.js\": \"6e98\",\n\t\"./ja\": \"079e\",\n\t\"./ja.js\": \"079e\",\n\t\"./jv\": \"b540\",\n\t\"./jv.js\": \"b540\",\n\t\"./ka\": \"201b\",\n\t\"./ka.js\": \"201b\",\n\t\"./kk\": \"6d79\",\n\t\"./kk.js\": \"6d79\",\n\t\"./km\": \"e81d\",\n\t\"./km.js\": \"e81d\",\n\t\"./kn\": \"3e92\",\n\t\"./kn.js\": \"3e92\",\n\t\"./ko\": \"22f8\",\n\t\"./ko.js\": \"22f8\",\n\t\"./ku\": \"2421\",\n\t\"./ku.js\": \"2421\",\n\t\"./ky\": \"9609\",\n\t\"./ky.js\": \"9609\",\n\t\"./lb\": \"440c\",\n\t\"./lb.js\": \"440c\",\n\t\"./lo\": \"b29d\",\n\t\"./lo.js\": \"b29d\",\n\t\"./lt\": \"26f9\",\n\t\"./lt.js\": \"26f9\",\n\t\"./lv\": \"b97c\",\n\t\"./lv.js\": \"b97c\",\n\t\"./me\": \"293c\",\n\t\"./me.js\": \"293c\",\n\t\"./mi\": \"688b\",\n\t\"./mi.js\": \"688b\",\n\t\"./mk\": \"6909\",\n\t\"./mk.js\": \"6909\",\n\t\"./ml\": \"02fb\",\n\t\"./ml.js\": \"02fb\",\n\t\"./mn\": \"958b\",\n\t\"./mn.js\": \"958b\",\n\t\"./mr\": \"39bd\",\n\t\"./mr.js\": \"39bd\",\n\t\"./ms\": \"ebe4\",\n\t\"./ms-my\": \"6403\",\n\t\"./ms-my.js\": \"6403\",\n\t\"./ms.js\": \"ebe4\",\n\t\"./mt\": \"1b45\",\n\t\"./mt.js\": \"1b45\",\n\t\"./my\": \"8689\",\n\t\"./my.js\": \"8689\",\n\t\"./nb\": \"6ce3\",\n\t\"./nb.js\": \"6ce3\",\n\t\"./ne\": \"3a39\",\n\t\"./ne.js\": \"3a39\",\n\t\"./nl\": \"facd\",\n\t\"./nl-be\": \"db29\",\n\t\"./nl-be.js\": \"db29\",\n\t\"./nl.js\": \"facd\",\n\t\"./nn\": \"b84c\",\n\t\"./nn.js\": \"b84c\",\n\t\"./pa-in\": \"f3ff\",\n\t\"./pa-in.js\": \"f3ff\",\n\t\"./pl\": \"8d57\",\n\t\"./pl.js\": \"8d57\",\n\t\"./pt\": \"f260\",\n\t\"./pt-br\": \"d2d4\",\n\t\"./pt-br.js\": \"d2d4\",\n\t\"./pt.js\": \"f260\",\n\t\"./ro\": \"972c\",\n\t\"./ro.js\": \"972c\",\n\t\"./ru\": \"957c\",\n\t\"./ru.js\": \"957c\",\n\t\"./sd\": \"6784\",\n\t\"./sd.js\": \"6784\",\n\t\"./se\": \"ffff\",\n\t\"./se.js\": \"ffff\",\n\t\"./si\": \"eda5\",\n\t\"./si.js\": \"eda5\",\n\t\"./sk\": \"7be6\",\n\t\"./sk.js\": \"7be6\",\n\t\"./sl\": \"8155\",\n\t\"./sl.js\": \"8155\",\n\t\"./sq\": \"c8f3\",\n\t\"./sq.js\": \"c8f3\",\n\t\"./sr\": \"cf1e\",\n\t\"./sr-cyrl\": \"13e9\",\n\t\"./sr-cyrl.js\": \"13e9\",\n\t\"./sr.js\": \"cf1e\",\n\t\"./ss\": \"52bd\",\n\t\"./ss.js\": \"52bd\",\n\t\"./sv\": \"5fbd\",\n\t\"./sv.js\": \"5fbd\",\n\t\"./sw\": \"74dc\",\n\t\"./sw.js\": \"74dc\",\n\t\"./ta\": \"3de5\",\n\t\"./ta.js\": \"3de5\",\n\t\"./te\": \"5cbb\",\n\t\"./te.js\": \"5cbb\",\n\t\"./tet\": \"576c\",\n\t\"./tet.js\": \"576c\",\n\t\"./tg\": \"3b1b\",\n\t\"./tg.js\": \"3b1b\",\n\t\"./th\": \"10e8\",\n\t\"./th.js\": \"10e8\",\n\t\"./tl-ph\": \"0f38\",\n\t\"./tl-ph.js\": \"0f38\",\n\t\"./tlh\": \"cf75\",\n\t\"./tlh.js\": \"cf75\",\n\t\"./tr\": \"0e81\",\n\t\"./tr.js\": \"0e81\",\n\t\"./tzl\": \"cf51\",\n\t\"./tzl.js\": \"cf51\",\n\t\"./tzm\": \"c109\",\n\t\"./tzm-latn\": \"b53d\",\n\t\"./tzm-latn.js\": \"b53d\",\n\t\"./tzm.js\": \"c109\",\n\t\"./ug-cn\": \"6117\",\n\t\"./ug-cn.js\": \"6117\",\n\t\"./uk\": \"ada2\",\n\t\"./uk.js\": \"ada2\",\n\t\"./ur\": \"5294\",\n\t\"./ur.js\": \"5294\",\n\t\"./uz\": \"2e8c\",\n\t\"./uz-latn\": \"010e\",\n\t\"./uz-latn.js\": \"010e\",\n\t\"./uz.js\": \"2e8c\",\n\t\"./vi\": \"2921\",\n\t\"./vi.js\": \"2921\",\n\t\"./x-pseudo\": \"fd7e\",\n\t\"./x-pseudo.js\": \"fd7e\",\n\t\"./yo\": \"7f33\",\n\t\"./yo.js\": \"7f33\",\n\t\"./zh-cn\": \"5c3a\",\n\t\"./zh-cn.js\": \"5c3a\",\n\t\"./zh-hk\": \"49ab\",\n\t\"./zh-hk.js\": \"49ab\",\n\t\"./zh-tw\": \"90ea\",\n\t\"./zh-tw.js\": \"90ea\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"4678\";","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('ModifiedCard',{attrs:{\"message\":\"This specifier has been modified since being loaded! Use 'Save as JSON' to save your changes.\",\"compare\":_vm.selectedSpecifier,\"compare-to\":_vm.loadedSpecifier}}),_c('div',{staticClass:\"card\"},[_c('h5',{staticClass:\"card-header\"},[_vm._v(\"\\n      Specifier\\n    \")]),_c('div',{staticClass:\"card-body\"},[_c('div',{staticClass:\"form-group row\"},[_c('label',{staticClass:\"col-form-label col-md-2\",attrs:{\"for\":\"specifier-type\"}},[_vm._v(\"\\n          Specifier type\\n        \")]),_c('div',{staticClass:\"col-md-10\"},[_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.specifierType),expression:\"specifierType\"}],staticClass:\"form-control\",attrs:{\"id\":\"specifier-type\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.specifierType=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_c('option',[_vm._v(\"Internal specifier\")]),_c('option',[_vm._v(\"External specifier\")])])])]),_c('div',{staticClass:\"form-group row\"},[_c('label',{staticClass:\"col-form-label col-md-2\",attrs:{\"for\":\"verbatim-specifier\"}},[_vm._v(\"\\n          Verbatim specifier\\n        \")]),_c('div',{staticClass:\"col-md-10\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model.trim\",value:(_vm.selectedVerbatimSpecifier),expression:\"selectedVerbatimSpecifier\",modifiers:{\"trim\":true}}],staticClass:\"form-control\",attrs:{\"id\":\"verbatim-specifier\",\"type\":\"text\",\"placeholder\":\"Enter the verbatim description of this specifier\"},domProps:{\"value\":(_vm.selectedVerbatimSpecifier)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.selectedVerbatimSpecifier=$event.target.value.trim()},\"blur\":function($event){_vm.$forceUpdate()}}})])]),_c('div',{staticClass:\"card mb-2\"},[_c('h6',{staticClass:\"card-header\"},[_vm._v(\"\\n          Scientific names\\n        \")]),_c('div',{staticClass:\"card-body\"},[_vm._l((_vm.selectedSpecifierFirstTUnit.scientificNames),function(sciname,index){return _c('div',[_c('div',{attrs:{\"id\":\"sciname\"}},[_c('div',{staticClass:\"input-group\"},[_c('input',{staticClass:\"form-control\",attrs:{\"type\":\"text\"},domProps:{\"value\":sciname.scientificName},on:{\"change\":function($event){_vm.$store.commit('setSpecifierPart', { specifierPart: sciname, scientificName: $event.target.value })}}}),_c('div',{staticClass:\"input-group-append\"},[_c('button',{staticClass:\"btn btn-outline-secondary details\",attrs:{\"type\":\"button\",\"onclick\":\"$(this).parents().filter('#sciname').find('.details').toggleClass('d-none')\"}},[_vm._v(\"\\n                    Show details\\n                  \")]),_c('button',{staticClass:\"btn btn-outline-secondary details d-none\",attrs:{\"type\":\"button\",\"onclick\":\"$(this).parents().filter('#sciname').find('.details').toggleClass('d-none')\"}},[_vm._v(\"\\n                    Hide details\\n                  \")]),_c('button',{staticClass:\"btn btn-outline-danger\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){_vm.$store.commit('deleteFromSpecifier', {specifier: _vm.selectedSpecifierFirstTUnit, scientificName: sciname})}}},[_vm._v(\"\\n                    ✗\\n                  \")])])]),_c('ul',{staticClass:\"details d-none\"},[_c('li',[_vm._v(\"Scientific name: \"),_c('em',[_vm._v(_vm._s(_vm.wrappedScientificName(sciname).scientificName))])]),_c('li',[_vm._v(\"Genus: \"),_c('em',[_vm._v(_vm._s(_vm.wrappedScientificName(sciname).genus))])]),_c('li',[_vm._v(\"Specific epithet: \"),_c('em',[_vm._v(_vm._s(_vm.wrappedScientificName(sciname).specificEpithet))])])])])])}),_c('input',{directives:[{name:\"model\",rawName:\"v-model.lazy\",value:(_vm.addNewScientificName),expression:\"addNewScientificName\",modifiers:{\"lazy\":true}}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"placeholder\":\"Enter a new scientific name here.\"},domProps:{\"value\":(_vm.addNewScientificName)},on:{\"change\":function($event){_vm.addNewScientificName=$event.target.value}}})],2)]),_c('div',{staticClass:\"card mb-2\"},[_c('h6',{staticClass:\"card-header\"},[_vm._v(\"\\n          Specimens\\n        \")]),_c('div',{staticClass:\"card-body\"},[_vm._l((_vm.selectedSpecifierFirstTUnit.includesSpecimens),function(specimen,index){return _c('div',[_c('div',{attrs:{\"id\":\"specimen\"}},[_c('div',{staticClass:\"input-group\"},[_c('input',{staticClass:\"form-control\",attrs:{\"type\":\"text\"},domProps:{\"value\":specimen.occurrenceID},on:{\"change\":function($event){_vm.$store.commit('setSpecifierPart', { specifierPart: specimen, occurenceID: $event.target.value })}}}),_c('div',{staticClass:\"input-group-append\"},[_c('button',{staticClass:\"btn btn-outline-secondary details\",attrs:{\"type\":\"button\",\"onclick\":\"$(this).parents().filter('#specimen').find('.details').toggleClass('d-none')\"}},[_vm._v(\"\\n                    Show details\\n                  \")]),_c('button',{staticClass:\"btn btn-outline-secondary details d-none\",attrs:{\"type\":\"button\",\"onclick\":\"$(this).parents().filter('#specimen').find('.details').toggleClass('d-none')\"}},[_vm._v(\"\\n                    Hide details\\n                  \")]),_c('button',{staticClass:\"btn btn-outline-danger\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){_vm.$store.commit('deleteFromSpecifier', {specifier: _vm.selectedSpecifierFirstTUnit, specimen: specimen})}}},[_vm._v(\"\\n                    ✗\\n                  \")])])]),_c('ul',{staticClass:\"details d-none\"},[_c('li',[_vm._v(\"Occurrence ID: \"+_vm._s(_vm.wrappedSpecimen(specimen).occurrenceID))]),_c('li',[_vm._v(\"Institution code: \"+_vm._s(_vm.wrappedSpecimen(specimen).institutionCode || '(none)'))]),_c('li',[_vm._v(\"Collection code: \"+_vm._s(_vm.wrappedSpecimen(specimen).collectionCode || '(none)'))]),_c('li',[_vm._v(\"Catalog number: \"+_vm._s(_vm.wrappedSpecimen(specimen).catalogNumber || '(none)'))])])])])}),_c('input',{directives:[{name:\"model\",rawName:\"v-model.lazy\",value:(_vm.addNewSpecimen),expression:\"addNewSpecimen\",modifiers:{\"lazy\":true}}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"placeholder\":\"Enter a new specimen identifier here.\"},domProps:{\"value\":(_vm.addNewSpecimen)},on:{\"change\":function($event){_vm.addNewSpecimen=$event.target.value}}})],2)]),_c('div',{staticClass:\"card mb-2\"},[_c('h6',{staticClass:\"card-header\"},[_vm._v(\"\\n          External references\\n        \")]),_c('div',{staticClass:\"card-body\"},[_vm._l((_vm.externalReferences),function(extref){return _c('div',{staticClass:\"input-group\"},[_c('input',{staticClass:\"form-control\",attrs:{\"type\":\"text\"},domProps:{\"value\":extref},on:{\"change\":function($event){_vm.$store.commit('updateSpecifierExternalReference', { specifier: _vm.selectedSpecifierFirstTUnit, fromExternalReference: extref, toExternalReference: $event.target.value })}}}),_c('div',{staticClass:\"input-group-append\"},[_c('a',{staticClass:\"btn btn-outline-secondary\",attrs:{\"target\":\"_new\",\"href\":extref}},[_vm._v(\"\\n                Go to website\\n              \")]),_c('button',{staticClass:\"btn btn-outline-danger\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){_vm.$store.commit('deleteFromSpecifier', {specifier: _vm.selectedSpecifierFirstTUnit, externalReference: extref})}}},[_vm._v(\"\\n                ✗\\n              \")])])])}),_c('input',{directives:[{name:\"model\",rawName:\"v-model.lazy\",value:(_vm.addNewExternalReference),expression:\"addNewExternalReference\",modifiers:{\"lazy\":true}}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"placeholder\":\"Enter a new external reference URI here.\"},domProps:{\"value\":(_vm.addNewExternalReference)},on:{\"change\":function($event){_vm.addNewExternalReference=$event.target.value}}})],2)]),_c('a',{staticClass:\"btn btn-secondary mr-2 float-right\",attrs:{\"href\":\"javascript: void(0)\"},on:{\"click\":function($event){_vm.$store.commit('changeDisplay', { phyloref: _vm.selectedPhyloref })}}},[_vm._v(\"\\n        Close specifier view\\n      \")]),_c('a',{staticClass:\"btn btn-danger\",attrs:{\"href\":\"javascript: void(0)\"},on:{\"click\":function($event){_vm.$store.commit('deleteSpecifier', { phyloref: _vm.selectedPhyloref, specifier: _vm.selectedSpecifier })}}},[_vm._v(\"\\n        Delete specifier\\n      \")])])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export * from \"-!cache-loader?{\\\"cacheDirectory\\\":\\\"node_modules/.cache/vue-loader\\\",\\\"cacheIdentifier\\\":\\\"ca0e2238-vue-loader-template\\\"}!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SpecifierView.vue?vue&type=template&id=adedbbb0&\"","import { render, staticRenderFns } from \"./ModifiedIcon.vue?vue&type=template&id=54102662&\"\nimport script from \"./ModifiedIcon.vue?vue&type=script&lang=js&\"\nexport * from \"./ModifiedIcon.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"ModifiedIcon.vue\"\nexport default component.exports","<template>\n  <div\n    v-if=\"dataChanged\"\n    class=\"float-right\"\n    :title=\"message\"\n  >\n    <FontAwesomeIcon\n      size=\"lg\"\n      icon=\"exclamation-circle\"\n    />\n  </div>\n</template>\n\n<script>\n/*\n * Creates an icon with a warning if a variable has changed in value as compared\n * to a comparison object. The icon is floated to the right and will display the\n * specified message if you hover over it.\n *\n */\n\nimport { isEqual } from 'lodash';\n\n// Use icons from Font Awesome.\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport {\n  faExclamationCircle,\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome';\n\n// Set up exclamation circle for FontAwesome.\nlibrary.add(faExclamationCircle);\n\nexport default {\n  name: 'ModifiedIcon',\n  components: {\n    FontAwesomeIcon,\n  },\n  props: {\n    message: {\n      type: String,\n      default: 'This element has changed! Please remember to save it.',\n    },\n    compare: Object, /* Object to check for changes. */\n    compareTo: Object, /* Changes will be determined by comparing this to this.compare */\n  },\n  computed: {\n    dataChanged() { return !isEqual(this.compare, this.compareTo); },\n  },\n};\n</script>\n","// Import Vue.\nimport Vue from 'vue';\n\n// Import Bootstrap.\nimport 'bootstrap';\nimport BootstrapVue from 'bootstrap-vue';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap-vue/dist/bootstrap-vue.min.css';\n\n// Use vue-resize to track when phylogenies are resized.\nimport VueResize from 'vue-resize';\nimport 'vue-resize/dist/vue-resize.css';\n\n// Import the main Vue file.\nimport App from './App.vue';\n\n// Import our Vuex store.\nimport store from './store';\n\n// Set up JQuery as a global.\nwindow.$ = require('jquery');\n\n// Add additional features to Vue.\nVue.use(BootstrapVue);\nVue.use(VueResize);\n\n// Turn off the Vue production tip on the console on Vue startup.\nVue.config.productionTip = false;\n\n// Set up Vue object.\nexport default new Vue({\n  el: '#app',\n  store,\n  render: h => h(App),\n});\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"sidebar-wrapper\"}},[_c('div',{staticClass:\"card bg-dark\"},[_c('div',{staticClass:\"list-group list-group-flush\"},[_c('a',{staticClass:\"list-group-item list-group-item-action bg-dark text-light disabled\",attrs:{\"href\":\"javascript: void(0)\"}},[_vm._v(\"\\n        \"+_vm._s(_vm.currentPhyx.title || 'Untitled Phyx file')+\"\\n      \")]),_c('a',{staticClass:\"list-group-item list-group-item-action\",attrs:{\"href\":\"javascript: void(0)\"},on:{\"click\":function($event){_vm.promptAndSetDict('Please enter the new title for this Phyx file', _vm.currentPhyx, 'title')}}},[_vm._v(\"\\n        Edit title\\n      \")]),_c('a',{staticClass:\"list-group-item list-group-item-action start-reasoning\",attrs:{\"href\":\"javascript: void(0)\"},on:{\"click\":function($event){_vm.reasonOverPhyloreferences()}}},[(_vm.reasoningInProgress)?_c('span',[_vm._v(\"\\n          (Reasoning in progress)\\n        \")]):_c('span',[_vm._v(\"\\n          Reason\\n        \")])]),_c('a',{staticClass:\"list-group-item list-group-item-action\",attrs:{\"href\":\"javascript: void(0)\",\"onclick\":\"$('#file-input').trigger('click')\"}},[_vm._v(\"\\n        Read from local JSON file\\n      \")]),_c('input',{staticClass:\"d-none\",attrs:{\"id\":\"file-input\",\"type\":\"file\"},on:{\"change\":function($event){_vm.loadPhyxFromFileInputById('#file-input')}}}),_c('a',{staticClass:\"list-group-item list-group-item-action\",attrs:{\"href\":\"javascript: void(0)\"},on:{\"click\":function($event){_vm.downloadAsJSON()}}},[_vm._v(\"\\n        Save as JSON\\n      \")]),_c('a',{staticClass:\"list-group-item list-group-item-action\",attrs:{\"href\":\"javascript: void(0)\",\"onclick\":\"$('.phyx-examples').toggleClass('d-none')\"}},[_vm._v(\"\\n        Examples\\n      \")]),_vm._l((_vm.examplePHYXURLs),function(example){return _c('a',{staticClass:\"list-group-item list-group-item-action phyx-examples d-none\",attrs:{\"href\":\"javascript: void(0)\"},on:{\"click\":function($event){_vm.loadPhyxFromURL(example.url)}}},[_vm._v(\"\\n        ● \"+_vm._s(example.title)+\"\\n      \")])}),_c('a',{staticClass:\"list-group-item list-group-item-action\",attrs:{\"href\":\"javascript: void(0)\",\"onclick\":\"$('#advanced-options').modal()\"}},[_vm._v(\"\\n        Advanced\\n      \")])],2)]),_c('div',{staticClass:\"card mt-2 bg-dark\"},[_c('div',{staticClass:\"list-group list-group-flush\"},[_c('a',{staticClass:\"list-group-item list-group-item-action bg-dark text-light disabled\",attrs:{\"href\":\"javascript: void(0)\"}},[_vm._v(\"\\n        Phyloreferences\\n      \")]),_c('a',{staticClass:\"list-group-item list-group-item-action\",class:{active: !_vm.selectedPhyloref && !_vm.selectedPhylogeny},attrs:{\"href\":\"javascript: void(0)\"},on:{\"click\":function($event){_vm.$store.commit('changeDisplay', {})}}},[_c('em',[_vm._v(\"Summary\")])]),_vm._l((_vm.phylorefs),function(phyloref,phylorefIndex){return [_c('a',{staticClass:\"h6 list-group-item list-group-item-action border-dark\",class:{active: _vm.selectedPhyloref === phyloref},attrs:{\"href\":\"javascript: void(0)\"},on:{\"click\":function($event){_vm.$store.commit('changeDisplay', {phyloref: phyloref})}}},[(phyloref.label)?_c('span',[_vm._v(\"\\n            \"+_vm._s(phyloref.label)+\"\\n          \")]):_c('span',[_vm._v(\"\\n            \"+_vm._s('Phyloreference ' + (phylorefIndex + 1))+\"\\n          \")]),_c('ModifiedIcon',{attrs:{\"message\":\"This phyloreference has been modified since being loaded! Use 'Save as JSON' to save your changes.\",\"compare\":phyloref,\"compare-to\":_vm.loadedPhyx.phylorefs[phylorefIndex]}})],1),(_vm.selectedPhyloref === phyloref)?[_vm._l((phyloref.internalSpecifiers),function(specifier,specifierIndex){return _c('a',{staticClass:\"list-group-item list-group-item-action\",class:{'active border-dark': _vm.selectedSpecifier === specifier},attrs:{\"href\":\"javascript: void(0)\"},on:{\"click\":function($event){_vm.$store.commit('changeDisplay', { phyloref: phyloref, specifier: specifier })}}},[_vm._v(\"\\n            ● \"),_c('strong',[_vm._v(\"Internal:\")]),_vm._v(\" \"+_vm._s(_vm.getSpecifierLabel(specifier))+\"\\n          \")])}),_vm._l((phyloref.externalSpecifiers),function(specifier,specifierIndex){return _c('a',{staticClass:\"list-group-item list-group-item-action\",class:{'active border-dark': _vm.selectedSpecifier === specifier},attrs:{\"href\":\"javascript: void(0)\"},on:{\"click\":function($event){_vm.$store.commit('changeDisplay', { phyloref: phyloref, specifier: specifier })}}},[_vm._v(\"\\n            ● \"),_c('strong',[_vm._v(\"External:\")]),_vm._v(\" \"+_vm._s(_vm.getSpecifierLabel(specifier))+\"\\n          \")])}),_c('a',{staticClass:\"list-group-item list-group-item-action\",attrs:{\"href\":\"javascript: void(0)\"},on:{\"click\":function($event){_vm.$store.commit('addSpecifier', { phyloref: phyloref })}}},[_vm._v(\"\\n            ● \"),_c('em',[_vm._v(\"Add specifier\")])])]:_vm._e()]}),_c('a',{staticClass:\"list-group-item list-group-item-action border-dark\",attrs:{\"href\":\"javascript: void(0)\"},on:{\"click\":function($event){_vm.$store.commit('createEmptyPhyloref')}}},[_c('em',[_vm._v(\"Add phyloreference\")])])],2)]),_c('div',{staticClass:\"card mt-2 bg-dark\"},[_c('div',{staticClass:\"list-group list-group-flush\"},[_c('a',{staticClass:\"list-group-item list-group-item-action bg-dark text-light disabled\",attrs:{\"href\":\"javascript: void(0)\"}},[_vm._v(\"\\n        Phylogenies\\n      \")]),_vm._l((_vm.phylogenies),function(phylogeny,phylogenyIndex){return _c('a',{staticClass:\"list-group-item list-group-item-action border-dark\",class:{active: _vm.selectedPhylogeny === phylogeny},attrs:{\"href\":\"javascript: void(0)\"},on:{\"click\":function($event){_vm.$store.commit('changeDisplay', {phylogeny: phylogeny})}}},[_vm._v(\"\\n        \"+_vm._s(phylogeny.label || (\"Phylogeny \" + (phylogenyIndex + 1)))+\"\\n\\n        \"),_c('ModifiedIcon',{attrs:{\"message\":\"This phylogeny has been modified since being loaded! Use 'Save as JSON' to save your changes.\",\"compare\":phylogeny,\"compare-to\":_vm.loadedPhyx.phylogenies[phylogenyIndex]}})],1)}),_c('a',{staticClass:\"list-group-item list-group-item-action border-dark\",attrs:{\"href\":\"javascript: void(0)\"},on:{\"click\":function($event){_vm.$store.commit('createEmptyPhylogeny')}}},[_c('em',[_vm._v(\"Add phylogeny\")])])],2)])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export * from \"-!cache-loader?{\\\"cacheDirectory\\\":\\\"node_modules/.cache/vue-loader\\\",\\\"cacheIdentifier\\\":\\\"ca0e2238-vue-loader-template\\\"}!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Sidebar.vue?vue&type=template&id=db2aacd2&\"","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TopNavigationBar.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TopNavigationBar.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SpecifierView.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SpecifierView.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./PhylorefView.vue?vue&type=template&id=7d6b7495&\"\nimport script from \"./PhylorefView.vue?vue&type=script&lang=js&\"\nexport * from \"./PhylorefView.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"PhylorefView.vue\"\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"modal\",attrs:{\"id\":\"advanced-options\",\"tabindex\":\"-1\",\"role\":\"dialog\"}},[_c('div',{staticClass:\"modal-dialog\",attrs:{\"role\":\"document\"}},[_c('div',{staticClass:\"modal-content\"},[_vm._m(0),_c('div',{staticClass:\"modal-body\"},[_c('p',[_vm._v(\"\\n          The following is a representation of this PHYX in JSON. You\\n          can edit the JSON directly if you like.\\n        \")]),(_vm.JSONParsingError)?_c('div',{staticClass:\"card text-white bg-danger mb-2\"},[_c('div',{staticClass:\"card-body\"},[_c('p',{staticClass:\"card-text\"},[_vm._v(\"\\n              This JSON could not be parsed: \"+_vm._s(_vm.JSONParsingError)+\"\\n            \")])])]):_vm._e(),_c('textarea',{directives:[{name:\"model\",rawName:\"v-model.lazy\",value:(_vm.phyxAsJSON),expression:\"phyxAsJSON\",modifiers:{\"lazy\":true}}],staticStyle:{\"width\":\"100%\",\"margin\":\"auto\"},attrs:{\"id\":\"test-content\",\"rows\":\"10\"},domProps:{\"value\":(_vm.phyxAsJSON)},on:{\"change\":function($event){_vm.phyxAsJSON=$event.target.value}}})]),_c('div',{staticClass:\"modal-footer\"},[_c('button',{staticClass:\"btn btn-info\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){_vm.downloadAsJSONLD()}}},[_vm._v(\"\\n          Download as JSON-LD\\n        \")]),_c('button',{staticClass:\"btn btn-secondary\",attrs:{\"type\":\"button\",\"data-dismiss\":\"modal\"}},[_vm._v(\"\\n          Close\\n        \")])])])])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"modal-header\"},[_c('h5',{staticClass:\"modal-title\"},[_vm._v(\"\\n          Advanced options\\n        \")]),_c('button',{staticClass:\"close\",attrs:{\"type\":\"button\",\"data-dismiss\":\"modal\",\"aria-label\":\"Close\"}},[_c('span',{attrs:{\"aria-hidden\":\"true\"}},[_vm._v(\"\\n            ×\\n          \")])])])}]\n\nexport { render, staticRenderFns }","export * from \"-!cache-loader?{\\\"cacheDirectory\\\":\\\"node_modules/.cache/vue-loader\\\",\\\"cacheIdentifier\\\":\\\"ca0e2238-vue-loader-template\\\"}!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AdvancedOptionsModal.vue?vue&type=template&id=1dd25cd7&\"","import { render, staticRenderFns } from \"./PhyxView.vue?vue&type=template&id=7d30e578&\"\nimport script from \"./PhyxView.vue?vue&type=script&lang=js&\"\nexport * from \"./PhyxView.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"PhyxView.vue\"\nexport default component.exports","<template>\n  <div class=\"card border-dark\">\n    <h5 class=\"card-header border-dark\">\n      Phyloreferences in this file\n    </h5>\n    <div class=\"card-body p-0\">\n      <table class=\"table table-hover table-flush\">\n        <thead>\n          <th>&nbsp;</th>\n          <th>Phyloreference</th>\n          <th>Internal specifiers</th>\n          <th>External specifiers</th>\n          <th v-for=\"(phylogeny, phylogenyIndex) of phylogenies\">\n            {{ phylogeny.label || `Phylogeny ${phylogenyIndex + 1}` }}\n          </th>\n        </thead>\n        <tbody>\n          <tr\n            v-if=\"phylorefs.length === 0\"\n            class=\"bg-white\"\n          >\n            <td :colspan=\"4 + phylogenies.length\">\n              <Center><em>No phyloreferences loaded</em></Center>\n            </td>\n          </tr>\n          <tr v-for=\"(phyloref, phylorefIndex) of phylorefs\">\n            <td>&nbsp;</td>\n            <td>\n              <a\n                href=\"javascript: void(0)\"\n                @click=\"$store.commit('changeDisplay', { phyloref })\"\n              >\n                {{ phyloref.label || `Phyloref ${phylorefIndex + 1}` }}\n              </a>\n            </td>\n            <td>{{ (phyloref.internalSpecifiers || []).length }}</td>\n            <td>{{ (phyloref.externalSpecifiers || []).length }}</td>\n            <td v-for=\"(phylogeny, phylogenyIndex) of phylogenies\">\n              <template v-if=\"getPhylorefExpectedNodeLabels(phyloref, phylogeny).length === 0\">\n                <strong>Not matched</strong>\n                <template v-if=\"hasReasoningResults(phyloref)\">\n                  but\n                  <template v-if=\"getNodeLabelsResolvedByPhyloref(phyloref, phylogeny) > 1\">\n                    <strong>resolved to multiple nodes: {{ getNodeLabelsResolvedByPhyloref(phyloref, phylogeny) }}</strong>\n                  </template>\n                  <template v-else>\n                    resolved to {{ getNodeLabelsResolvedByPhyloref(phyloref, phylogeny)[0]||\"(none)\" }}\n                  </template>\n                </template>\n              </template>\n              <template v-else>\n                Matched\n                <template v-if=\"hasReasoningResults(phyloref)\">\n                  and\n                  <template v-if=\"getNodeLabelsResolvedByPhyloref(phyloref, phylogeny) > 1\">\n                    <strong>resolved to multiple nodes: {{ getNodeLabelsResolvedByPhyloref(phyloref, phylogeny) }}</strong>\n                  </template>\n                  <template v-else>\n                    resolved\n                    <template v-if=\"getNodeLabelsResolvedByPhyloref(phyloref, phylogeny)[0] === getPhylorefExpectedNodeLabels(phyloref, phylogeny)[0]\">\n                      correctly\n                    </template>\n                    <template v-else>\n                      <strong>incorrectly</strong>\n                    </template>\n                    to {{ getNodeLabelsResolvedByPhyloref(phyloref, phylogeny)[0]||\"(none)\" }}\n                  </template>\n                </template>\n              </template>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</template>\n\n<script>\n/*\n * Display a summary of the entire Phyx file.\n */\nimport { mapState } from 'vuex';\nimport { has } from 'lodash';\nimport { PhylorefWrapper, PhylogenyWrapper } from '@phyloref/phyx';\n\nexport default {\n  name: 'PhyxView',\n  computed: mapState({\n    phyx: state => state.phyx,\n    phylorefs: state => state.phyx.currentPhyx.phylorefs,\n    phylogenies: state => state.phyx.currentPhyx.phylogenies,\n  }),\n  methods: {\n    hasReasoningResults(phyloref) {\n      if (!has(this.$store.state.phyx.reasoningResults, 'phylorefs')) return false;\n\n      const phylorefURI = this.$store.getters.getBaseURIForPhyloref(phyloref);\n      return has(this.$store.state.phyx.reasoningResults.phylorefs, phylorefURI);\n    },\n    getPhylorefExpectedNodeLabels(phyloref, phylogeny) {\n      // Return a list of nodes that a phyloreference is expected to resolve to.\n      return new PhylorefWrapper(phyloref).getExpectedNodeLabels(phylogeny);\n    },\n    getNodesById(phylogeny, nodeId) {\n      // Return all node labels with this nodeId in this phylogeny.\n      const parsed = new PhylogenyWrapper(phylogeny).getParsedNewickWithIRIs(\n        this.$store.getters.getBaseURIForPhylogeny(phylogeny),\n        d3.layout.newick_parser,\n      );\n\n      function searchNode(node, results = []) {\n        if (has(node, '@id') && node['@id'] === nodeId) {\n          results.push(node);\n        }\n        if (has(node, 'children')) {\n          node.children.forEach(child => searchNode(child, results));\n        }\n        return results;\n      }\n\n      if (!has(parsed, 'json')) return [];\n      return searchNode(parsed.json);\n    },\n    getNodeLabelsResolvedByPhyloref(phyloref, phylogeny) {\n      // Converts node IDs to node labels, if present.\n      const resolvedNodes = this.$store.getters.getResolvedNodesForPhylogeny(\n        phylogeny, phyloref, false,\n      );\n\n      return resolvedNodes\n        .map(nodeId => this.getNodesById(phylogeny, nodeId))\n        .reduce((a, b) => a.concat(b), [])\n        .map(node => node.name || '(unlabelled)');\n    },\n  },\n};\n</script>\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.dataChanged)?_c('div',{staticClass:\"card mb-2 border-dark\"},[_c('div',{staticClass:\"card-header bg-warning\"},[_vm._v(\"\\n    Warning!\\n  \")]),_c('div',{staticClass:\"card-body\"},[_vm._v(\"\\n    \"+_vm._s(_vm.message)+\"\\n  \")])]):_vm._e()}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export * from \"-!cache-loader?{\\\"cacheDirectory\\\":\\\"node_modules/.cache/vue-loader\\\",\\\"cacheIdentifier\\\":\\\"ca0e2238-vue-loader-template\\\"}!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ModifiedCard.vue?vue&type=template&id=1e4060c8&\"","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Phylotree.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Phylotree.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Phylotree.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Phylotree.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PhyxView.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PhyxView.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SpecifierView.vue?vue&type=template&id=adedbbb0&\"\nimport script from \"./SpecifierView.vue?vue&type=script&lang=js&\"\nexport * from \"./SpecifierView.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"SpecifierView.vue\"\nexport default component.exports","<template>\n  <!-- Sidebar showing phyloreferences and phylogenies -->\n  <div id=\"sidebar-wrapper\">\n    <!-- Sidebar section: information about this particular PHYX file -->\n    <div class=\"card bg-dark\">\n      <div class=\"list-group list-group-flush\">\n        <a\n          class=\"list-group-item list-group-item-action bg-dark text-light disabled\"\n          href=\"javascript: void(0)\"\n        >\n          {{ currentPhyx.title || 'Untitled Phyx file' }}\n        </a>\n        <a\n          class=\"list-group-item list-group-item-action\"\n          href=\"javascript: void(0)\"\n          @click=\"promptAndSetDict('Please enter the new title for this Phyx file', currentPhyx, 'title')\"\n        >\n          Edit title\n        </a>\n\n        <a\n          class=\"list-group-item list-group-item-action start-reasoning\"\n          href=\"javascript: void(0)\"\n          @click=\"reasonOverPhyloreferences()\"\n        >\n          <span v-if=\"reasoningInProgress\">\n            (Reasoning in progress)\n          </span>\n          <span v-else>\n            Reason\n          </span>\n        </a>\n        <a\n          class=\"list-group-item list-group-item-action\"\n          href=\"javascript: void(0)\"\n          onclick=\"$('#file-input').trigger('click')\"\n        >\n          Read from local JSON file\n        </a>\n        <input\n          id=\"file-input\"\n          type=\"file\"\n          class=\"d-none\"\n          @change=\"loadPhyxFromFileInputById('#file-input')\"\n        >\n        <a\n          class=\"list-group-item list-group-item-action\"\n          href=\"javascript: void(0)\"\n          @click=\"downloadAsJSON()\"\n        >\n          Save as JSON\n        </a>\n        <a\n          class=\"list-group-item list-group-item-action\"\n          href=\"javascript: void(0)\"\n          onclick=\"$('.phyx-examples').toggleClass('d-none')\"\n        >\n          Examples\n        </a>\n        <a\n          v-for=\"example of examplePHYXURLs\"\n          href=\"javascript: void(0)\"\n          class=\"list-group-item list-group-item-action phyx-examples d-none\"\n          @click=\"loadPhyxFromURL(example.url)\"\n        >\n          &#9679; {{ example.title }}\n        </a>\n        <a\n          class=\"list-group-item list-group-item-action\"\n          href=\"javascript: void(0)\"\n          onclick=\"$('#advanced-options').modal()\"\n        >\n          Advanced\n        </a>\n      </div>\n    </div>\n\n    <!-- Sidebar section: list of phyloreferences in PHYX file -->\n    <div class=\"card mt-2 bg-dark\">\n      <!-- List of phyloreferences -->\n      <div class=\"list-group list-group-flush\">\n        <a\n          href=\"javascript: void(0)\"\n          class=\"list-group-item list-group-item-action bg-dark text-light disabled\"\n        >\n          Phyloreferences\n        </a>\n        <a\n          class=\"list-group-item list-group-item-action\"\n          href=\"javascript: void(0)\"\n          :class=\"{active: !selectedPhyloref && !selectedPhylogeny}\"\n          @click=\"$store.commit('changeDisplay', {})\"\n        >\n          <em>Summary</em>\n        </a>\n        <template v-for=\"(phyloref, phylorefIndex) of phylorefs\">\n          <a\n            href=\"javascript: void(0)\"\n            class=\"h6 list-group-item list-group-item-action border-dark\"\n            :class=\"{active: selectedPhyloref === phyloref}\"\n            @click=\"$store.commit('changeDisplay', {phyloref})\"\n          >\n            <span v-if=\"phyloref.label\">\n              {{ phyloref.label }}\n            </span>\n            <span v-else>\n              {{ 'Phyloreference ' + (phylorefIndex + 1) }}\n            </span>\n\n            <!-- Add a warning if this phyloreference has changed -->\n            <ModifiedIcon\n              message=\"This phyloreference has been modified since being loaded! Use 'Save as JSON' to save your changes.\"\n              :compare=\"phyloref\"\n              :compare-to=\"loadedPhyx.phylorefs[phylorefIndex]\"\n            />\n          </a>\n\n          <!-- Add the following information if this phyloreference is selected -->\n          <template v-if=\"selectedPhyloref === phyloref\">\n            <a\n              v-for=\"(specifier, specifierIndex) of phyloref.internalSpecifiers\"\n              href=\"javascript: void(0)\"\n              class=\"list-group-item list-group-item-action\"\n              :class=\"{'active border-dark': selectedSpecifier === specifier}\"\n              @click=\"$store.commit('changeDisplay', { phyloref, specifier })\"\n            >\n              &#9679; <strong>Internal:</strong> {{ getSpecifierLabel(specifier) }}\n            </a>\n\n            <a\n              v-for=\"(specifier, specifierIndex) of phyloref.externalSpecifiers\"\n              href=\"javascript: void(0)\"\n              class=\"list-group-item list-group-item-action\"\n              :class=\"{'active border-dark': selectedSpecifier === specifier}\"\n              @click=\"$store.commit('changeDisplay', { phyloref, specifier })\"\n            >\n              &#9679; <strong>External:</strong> {{ getSpecifierLabel(specifier) }}\n            </a>\n            <a\n              href=\"javascript: void(0)\"\n              class=\"list-group-item list-group-item-action\"\n              @click=\"$store.commit('addSpecifier', { phyloref })\"\n            >\n              &#9679; <em>Add specifier</em>\n            </a>\n          </template>\n        </template>\n\n        <!-- Let users add phyloreferences directly from the sidebar -->\n        <a\n          class=\"list-group-item list-group-item-action border-dark\"\n          href=\"javascript: void(0)\"\n          @click=\"$store.commit('createEmptyPhyloref')\"\n        >\n          <em>Add phyloreference</em>\n        </a>\n      </div>\n    </div>\n\n    <!-- Sidebar section: list of phylogenies in PHYX file -->\n    <div class=\"card mt-2 bg-dark\">\n      <div class=\"list-group list-group-flush\">\n        <a\n          href=\"javascript: void(0)\"\n          class=\"list-group-item list-group-item-action bg-dark text-light disabled\"\n        >\n          Phylogenies\n        </a>\n        <a\n          v-for=\"(phylogeny, phylogenyIndex) of phylogenies\"\n          href=\"javascript: void(0)\"\n          class=\"list-group-item list-group-item-action border-dark\"\n          :class=\"{active: selectedPhylogeny === phylogeny}\"\n          @click=\"$store.commit('changeDisplay', {phylogeny})\"\n        >\n          {{ phylogeny.label || `Phylogeny ${phylogenyIndex + 1}` }}\n\n          <!-- Add a warning if this phylogeny has changed -->\n          <ModifiedIcon\n            message=\"This phylogeny has been modified since being loaded! Use 'Save as JSON' to save your changes.\"\n            :compare=\"phylogeny\"\n            :compare-to=\"loadedPhyx.phylogenies[phylogenyIndex]\"\n          />\n        </a>\n        <a\n          class=\"list-group-item list-group-item-action border-dark\"\n          href=\"javascript: void(0)\"\n          @click=\"$store.commit('createEmptyPhylogeny')\"\n        >\n          <em>Add phylogeny</em>\n        </a>\n      </div>\n    </div>\n  </div><!-- End of sidebar -->\n</template>\n\n<script>\n/*\n * Creates the sidebar that displays:\n *  - Menu items (save, load, reason)\n *  - A list of all phyloreferences and a button to add more phylorefs.\n *  - A list of all phylogenies and a button to add more phylogenies.\n */\n\nimport Vue from 'vue';\nimport { has } from 'lodash';\nimport { mapState, mapGetters } from 'vuex';\nimport { saveAs } from 'filesaver.js-npm';\n\nimport { PHYXWrapper, PhylorefWrapper } from '@phyloref/phyx';\n\nimport ModifiedIcon from '../icons/ModifiedIcon.vue';\n\nexport default {\n  name: 'Sidebar',\n  components: {\n    ModifiedIcon,\n  },\n  data() {\n    return {\n      reasoningInProgress: false, // Set when reasoning is in progress.\n    };\n  },\n  computed: {\n    examplePHYXURLs() {\n      // Returns a list of example files to display in the \"Examples\" menu.\n      return [\n        {\n          url: 'examples/fisher_et_al_2007.json',\n          title: 'Fisher et al, 2007',\n        },\n        {\n          url: 'examples/hillis_and_wilcox_2005.json',\n          title: 'Hillis and Wilcox, 2005',\n        },\n        {\n          url: 'examples/brochu_2003.json',\n          title: 'Brochu 2003',\n        },\n      ];\n    },\n    ...mapGetters([\n      'phyxTitle',\n    ]),\n    ...mapState({\n      phyx: state => state.phyx,\n      currentPhyx: state => state.phyx.currentPhyx,\n      loadedPhyx: state => state.phyx.loadedPhyx,\n      phylorefs: state => state.phyx.currentPhyx.phylorefs,\n      phylogenies: state => state.phyx.currentPhyx.phylogenies,\n      selectedPhyloref: state => state.ui.display.phyloref,\n      selectedPhylogeny: state => state.ui.display.phylogeny,\n      selectedSpecifier: state => state.ui.display.specifier,\n    }),\n  },\n  methods: {\n    getSpecifierLabel(specifier) {\n      // Get the label for a particular specifier.\n      return PhylorefWrapper.getSpecifierLabel(specifier);\n    },\n\n    promptAndSetDict(message, dict, key) {\n      // Given a dictionary and key, we prompt the user (using window.prompt)\n      // to provide a new value for that dictionary and key. If one is provided,\n      // we replace it.\n      const response = window.prompt(message, dict[key]);\n      if (response !== undefined && response !== null) Vue.set(dict, key, response);\n    },\n\n    loadPhyxFromURL(url) {\n      // Change the current PHYX to that in the provided URL.\n      // Will ask the user to confirm before replacing it.\n\n      $.getJSON(url)\n        .done((data) => {\n          this.$store.commit('setCurrentPhyx', data);\n          this.$store.commit('setLoadedPhyx', data);\n          // Reset the display.\n          this.$store.commit('changeDisplay', {});\n        })\n        .fail((error) => {\n          if (error.status === 200) {\n            alert(`Could not load PHYX file '${url}': file malformed, see console for details.`);\n          } else {\n            alert(`Could not load PHYX file '${url}': server error ${error.status} ${error.statusText}`);\n          }\n          // throw new Error(`Could not load PHYX file ${url}: ${error}`);\n        });\n    },\n\n    loadPhyxFromFileInputById(fileInputId) {\n      //\n      // Load a JSON file from the local file system using FileReader. fileInput\n      // needs to be an HTML element representing an <input type=\"file\"> in which\n      // the user has selected the local file they wish to load.\n      //\n      // This code is based on https://stackoverflow.com/a/21446426/27310\n\n      if (typeof window.FileReader !== 'function') {\n        alert('The FileReader API is not supported on this browser.');\n        return;\n      }\n\n      const $fileInput = $(fileInputId);\n      if (!$fileInput) {\n        alert('Programmer error: No file input element specified.');\n        return;\n      }\n\n      if (!$fileInput.prop('files')) {\n        alert('File input element found, but files property missing: try another browser?');\n        return;\n      }\n\n      if (!$fileInput.prop('files')[0]) {\n        alert('Please select a file before attempting to load it.');\n        return;\n      }\n\n      const [file] = $fileInput.prop('files');\n      const fr = new FileReader();\n      fr.onload = ((e) => {\n        const lines = e.target.result;\n        const phyx = JSON.parse(lines);\n\n        this.$store.commit('setCurrentPhyx', phyx);\n        this.$store.commit('setLoadedPhyx', phyx);\n\n        // Reset the display.\n        this.$store.commit('changeDisplay', {});\n      });\n      fr.readAsText(file);\n    },\n\n    downloadAsJSON() {\n      // Provide the JSON file as a download to the browser.\n      const content = [this.$store.getters.getPhyxAsJSON];\n\n      // Save to local hard drive.\n      const jsonFile = new File(content, 'download.json', { type: 'application/json;charset=utf-8' });\n      saveAs(jsonFile);\n\n      // saveAs(jsonFile) doesn't report on whether the user acceped the download\n      // or not. We assume, possibly incorrectly, that they did and that the\n      // current JSON content has been saved. We therefore reset testcaseAsLoaded\n      // so we can watch for other changes.\n      //\n      // A more sophisticated API like https://github.com/jimmywarting/StreamSaver.js\n      // might be able to let us know if the file was saved correctly.\n      //\n      // Deep-copy the testcase into a 'testcaseAsLoaded' variable in our\n      // model. We deep-compare this.testcase with this.testcaseAsLoaded to\n      // determine if the loaded model has been modified.\n      this.$store.commit('setLoadedPhyx');\n    },\n\n    reasonOverPhyloreferences() {\n      // Reason over all the phyloreferences and store the results on\n      // the Vue model at vm.reasoningResults so we can access them.\n\n      // Are we already reasoning? If so, ignore.\n      if (this.reasoningInProgress) return;\n\n      // Disable \"Reason\" buttons so they can't be reused.\n      this.reasoningInProgress = true;\n      $.post('http://localhost:34214/reason', {\n        // This will convert the JSON-LD file into an application/x-www-form-urlencoded\n        // string (see https://api.jquery.com/jquery.ajax/#jQuery-ajax-settings under\n        // processData for details). The POST data sent to the server will look like:\n        //  jsonld=%7B%5B%7B%22title%22%3A...\n        // which translates to:\n        //  jsonld={[{\"title\":...\n        jsonld: JSON.stringify([new PHYXWrapper(\n          this.$store.state.phyx.currentPhyx,\n          d3.layout.newick_parser,\n        )\n          .asJSONLD()], undefined, 4),\n      }).done((data) => {\n        this.$store.commit('setReasoningResults', data);\n        // console.log('Data retrieved: ', data);\n      }).fail((jqXHR, textStatus, errorThrown) => {\n        // We can try using the third argument, but it appears to be the\n        // HTTP status (e.g. 'Internal Server Error'). So we default to that,\n        // but look for a better one in the JSON response from the server, if\n        // available.\n        let error = errorThrown;\n        if (has(jqXHR, 'responseJSON') && has(jqXHR.responseJSON, 'error')) {\n          error = jqXHR.responseJSON.error;\n        }\n\n        if (error === undefined || error === '') error = 'unknown error';\n        alert(`Error occurred on server while reasoning: ${error}`);\n      }).always(() => {\n        // Reset \"Reasoning\" buttons to their usual state.\n        this.reasoningInProgress = false;\n      });\n    },\n  },\n};\n</script>\n","<template>\n  <div>\n    <!-- Add a warning if this phylogeny has changed -->\n    <ModifiedCard\n      message=\"This phylogeny has been modified since being loaded. Use 'Save as JSON' to save your changes.\"\n      :compare=\"selectedPhylogeny\"\n      :compare-to=\"loadedPhyx.phylogenies[currentPhyx.phylogenies.indexOf(selectedPhylogeny)]\"\n    />\n\n    <div class=\"card\">\n      <h5 class=\"card-header\">\n        Phylogeny information\n      </h5>\n      <div class=\"card-body\">\n        <form>\n          <div class=\"form-group row\">\n            <label\n              for=\"phylogenyLabel\"\n              class=\"col-md-2 col-form-label\"\n            >\n              Label\n            </label>\n            <div class=\"col-md-10\">\n              <input\n                id=\"phylogenyLabel\"\n                v-model.trim=\"phylogenyLabel\"\n                type=\"text\"\n                class=\"form-control\"\n                placeholder=\"Enter phylogeny name\"\n              >\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label\n              for=\"phylogenyDescription\"\n              class=\"col-md-2 col-form-label\"\n            >\n              Description\n            </label>\n            <div class=\"col-md-10\">\n              <textarea\n                id=\"phylogenyDescription\"\n                v-model.trim=\"phylogenyDescription\"\n                type=\"text\"\n                class=\"form-control\"\n                placeholder=\"Enter phylogeny description\"\n              />\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label\n              for=\"newick\"\n              class=\"col-md-2 control-label\"\n            >\n              Newick\n            </label>\n            <div class=\"col-md-10 input-group\">\n              <textarea\n                v-model.lazy=\"phylogenyNewick\"\n                rows=\"5\"\n                class=\"form-control\"\n                placeholder=\"Enter Newick string for phylogeny here\"\n              />\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n\n    <!-- Display the list of errors encountered when parsing this Newick string -->\n    <div\n      v-if=\"phylogenyNewickErrors.length !== 0\"\n      class=\"card border-dark mt-2\"\n    >\n      <h5 class=\"card-header bg-danger\">\n        Errors occurred while parsing Newick string\n      </h5>\n      <div class=\"card-body\">\n        <template v-for=\"(error, errorIndex) of phylogenyNewickErrors\">\n          <p><strong>{{ error.title }}.</strong> {{ error.message }}</p>\n        </template>\n      </div>\n    </div>\n\n    <!-- Display the phylogeny (unless there were Newick parsing errors) -->\n    <div\n      v-if=\"phylogenyNewickErrors.length === 0\"\n      class=\"card mt-2\"\n    >\n      <h5 class=\"card-header\">\n        Phylogeny visualization\n      </h5>\n      <div class=\"card-body\">\n        <Phylotree\n          :phylogeny=\"selectedPhylogeny\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n/*\n * This view displays a phylogeny and changes its title or Newick string.\n */\n\nimport { has } from 'lodash';\nimport { mapState } from 'vuex';\nimport { parse as parseNewick } from 'newick-js';\n\nimport ModifiedCard from '../cards/ModifiedCard.vue';\nimport Phylotree from './Phylotree.vue';\n\nexport default {\n  name: 'PhylogenyView',\n  components: { ModifiedCard, Phylotree },\n  computed: {\n    /*\n     * The following properties allow you to get or set the phylogeny label,\n     * description or newick string.\n     */\n    phylogenyLabel: {\n      get() { return this.selectedPhylogeny.label; },\n      set(label) { this.$store.commit('setPhylogenyProps', { phylogeny: this.selectedPhylogeny, label }); },\n    },\n    phylogenyDescription: {\n      get() { return this.selectedPhylogeny.description; },\n      set(description) { this.$store.commit('setPhylogenyProps', { phylogeny: this.selectedPhylogeny, description }); },\n    },\n    phylogenyNewick: {\n      get() { return this.selectedPhylogeny.newick || '()'; },\n      set(newick) { this.$store.commit('setPhylogenyProps', { phylogeny: this.selectedPhylogeny, newick }); },\n    },\n    phylogenyNewickErrors() {\n      // Given a Newick string, return a list of errors found in parsing this\n      // string. The errors are returned as a list of objects, each of which\n      // has two properties:\n      //  - title: A short title of the error, distinct for each type of error.\n      //  - message: A longer description of the error, which might include\n      //    information specific to a particular error.\n      //\n      // We try to order errors from most helpful ('Unbalanced parentheses in\n      // Newick string') to least helpful ('Error parsing phylogeny').\n      if (!has(this.selectedPhylogeny, 'newick')) return [];\n      const newickTrimmed = this.selectedPhylogeny.newick.trim();\n      const errors = [];\n\n      // Look for an empty Newick string.\n      if (newickTrimmed === '' || newickTrimmed === '()' || newickTrimmed === '();') {\n        // None of the later errors are relevant here, so bail out now.\n        return [{\n          title: 'No phylogeny entered',\n          message: 'Click on \"Edit as Newick\" to enter a phylogeny below.',\n        }];\n      }\n\n      // Look for an unbalanced Newick string.\n      let parenLevels = 0;\n      for (let x = 0; x < newickTrimmed.length; x += 1) {\n        if (newickTrimmed[x] === '(') parenLevels += 1;\n        if (newickTrimmed[x] === ')') parenLevels -= 1;\n      }\n\n      if (parenLevels !== 0) {\n        errors.push({\n          title: 'Unbalanced parentheses in Newick string',\n          message: (parenLevels > 0\n            ? `You have ${parenLevels} too many open parentheses`\n            : `You have ${-parenLevels} too few open parentheses`\n          ),\n        });\n      }\n\n      // Finally, try parsing it with parseNewick and see if we get an error.\n      try {\n        parseNewick(newickTrimmed);\n      } catch (ex) {\n        errors.push({\n          title: 'Error parsing phylogeny',\n          message: `An error occured while parsing this phylogeny: ${ex.message}`,\n        });\n      }\n\n      return errors;\n    },\n    ...mapState({\n      currentPhyx: state => state.phyx.currentPhyx,\n      loadedPhyx: state => state.phyx.loadedPhyx,\n      selectedPhylogeny: state => state.ui.display.phylogeny,\n    }),\n  },\n};\n</script>\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(_vm.newickErrors)?[_c('p',[_c('strong',[_vm._v(\"Error parsing phylogeny.\")]),_vm._v(\"\\n      Please\\n      \"),_c('a',{attrs:{\"href\":\"javascript: void\"},on:{\"click\":function($event){_vm.$store.commit('changeDisplay', {phylogeny: _vm.phylogeny})}}},[_vm._v(\"\\n        edit the phylogeny\\n      \")]),_vm._v(\"\\n      to fix this error.\\n    \")])]:_c('div',{staticClass:\"phylotreeContainer\"},[_c('svg',{staticClass:\"col-md-12 phylogeny\",attrs:{\"id\":'phylogeny' + _vm.phylogenyIndex}}),_c('ResizeObserver',{on:{\"notify\":function($event){_vm.redrawTree()}}})],1)],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export * from \"-!cache-loader?{\\\"cacheDirectory\\\":\\\"node_modules/.cache/vue-loader\\\",\\\"cacheIdentifier\\\":\\\"ca0e2238-vue-loader-template\\\"}!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Phylotree.vue?vue&type=template&id=10daa235&\"","/*\n * Store module for modifying phylogenies.\n */\n\nimport Vue from 'vue';\nimport { parse as parseNewick } from 'newick-js';\nimport { has } from 'lodash';\nimport { TaxonomicUnitMatcher } from '@phyloref/phyx';\n\nexport default {\n  getters: {\n    getNodeLabelsFromNewick: (state, getters) => (newick, nodeType = 'both') => {\n      // Return a list of all the node labels in this phylogeny.\n      //\n      // nodeType can be one of:\n      // - 'internal': Return node labels on internal nodes.\n      // - 'terminal': Return node labels on terminal nodes.\n      // - 'both': Return node labels on both internal and terminal nodes.\n\n      // Parse the phylogeny (will throw an exception if parsing failed).\n      const { graph } = parseNewick(newick || '()');\n      const [vertices, arcs] = graph;\n\n      if (nodeType === 'both') {\n        // Return all node labels.\n        return Array.from(\n          new Set(\n            Array.from(vertices)\n              .map(vertex => vertex.label)\n              .filter(label => label !== undefined),\n          ),\n        );\n      }\n\n      if (nodeType === 'internal') {\n        // Return the internal nodes (those with atleast one child).\n        return Array.from(new Set(\n          Array.from(arcs)\n            .map(arc => arc[0].label) // Retrieve the label of the parent vertex in this arc.\n            .filter(label => label !== undefined),\n        ));\n      }\n\n      if (nodeType === 'terminal') {\n        // Return the terminal nodes. This would require calculating the children\n        // of every vertex in the graph and then identifying vertices without any\n        // children.\n        //\n        // A quicker and dirtier way to do this is by removing internal labels\n        // from the list of all node labels. This will report an incorrect result\n        // if an internal node has the same label as a terminal node, but at that\n        // point a lot of other assumptions are going to fail, too, so this is\n        // probably good enough for now.\n        const allLabels = getters.getNodeLabelsFromNewick(newick, 'both');\n        const internalLabels = new Set(getters.getNodeLabelsFromNewick(newick, 'internal'));\n\n        return allLabels.filter(label => !internalLabels.has(label));\n      }\n\n      throw new Error(`Unknown nodeType: '${nodeType}'`);\n    },\n\n    getTaxonomicUnitsForNodeLabel: (state, getters) => (phylogeny, nodeLabel) => {\n      // Return a list of taxonomic units for a node label.\n\n      // Look up additional node properties.\n      let additionalNodeProperties = {};\n      if (\n        has(phylogeny, 'additionalNodeProperties')\n        && has(phylogeny.additionalNodeProperties, nodeLabel)\n      ) {\n        additionalNodeProperties = phylogeny.additionalNodeProperties[nodeLabel];\n      }\n\n      // If there are explicit taxonomic units in the\n      // representsTaxonomicUnits property, we need to use those.\n      if (has(additionalNodeProperties, 'representsTaxonomicUnits')) {\n        return additionalNodeProperties.representsTaxonomicUnits;\n      }\n\n      // If that doesn't work, we can try to extract scientific names from\n      // the node label. Note that taxonomic units will NOT be extracted from\n      // the label if there is a taxonomic unit present!\n      return getters.getTaxonomicUnitsFromNodeLabel(nodeLabel.trim());\n    },\n\n    getTaxonomicUnitsFromNodeLabel: () => (nodeLabel) => {\n      // Given a node label, attempt to parse it as a scientific name.\n      // Returns a list of taxonomic units.\n      //\n      // TODO memoize this\n      if (nodeLabel === undefined || nodeLabel === null) return [];\n\n      // Check if the label starts with a binomial name.\n      let tunits = [];\n      const results = /^([A-Z][a-z]+)[ _]([a-z-]+)(?:\\b|_)\\s*(.*)/.exec(nodeLabel);\n      if (results !== null) {\n        tunits = [{\n          scientificNames: [{\n            scientificName: `${results[1]} ${results[2]} ${results[3]}`.trim(),\n            binomialName: `${results[1]} ${results[2]}`,\n            genus: results[1],\n            specificEpithet: results[2],\n          }],\n        }];\n      } else {\n        // It may be a scientific name, but we don't know how to parse it as such.\n        tunits = [];\n      }\n\n      return tunits;\n    },\n\n    getNodeLabelsMatchedBySpecifier: (state, getters) => (phylogeny, specifier) => {\n      // Return a list of node labels matched by a given specifier on\n      // a given phylogeny.\n\n      // Does the specifier have any taxonomic units? If not, we can't\n      // match anything!\n      if (!has(specifier, 'referencesTaxonomicUnits')) { return []; }\n      const specifierTUnits = specifier.referencesTaxonomicUnits;\n\n      return getters.getNodeLabelsFromNewick(phylogeny.newick || '()').filter((nodeLabel) => {\n        // Find all the taxonomic units associated with the specifier and\n        // with the node.\n        const nodeTUnits = getters.getTaxonomicUnitsForNodeLabel(phylogeny, nodeLabel);\n\n        // Attempt pairwise matches between taxonomic units in the specifier\n        // and associated with the node.\n        return specifierTUnits.some(\n          tunit1 => nodeTUnits.some(tunit2 => new TaxonomicUnitMatcher(tunit1, tunit2).matched),\n        );\n      });\n    },\n  },\n  mutations: {\n    setPhylogenyProps(state, payload) {\n      if (!has(payload, 'phylogeny')) {\n        throw new Error('setPhylogenyProps needs a phylogeny to modify using the \"phylogeny\" argument');\n      }\n      if (has(payload, 'label')) {\n        Vue.set(payload.phylogeny, 'label', payload.label);\n      }\n      if (has(payload, 'description')) {\n        Vue.set(payload.phylogeny, 'description', payload.description);\n      }\n      if (has(payload, 'newick')) {\n        Vue.set(payload.phylogeny, 'newick', payload.newick);\n      }\n    },\n  },\n};\n","<template>\n  <!-- About-us modal dialog box: acknowledges funding and links to libraries used -->\n  <div\n    id=\"about-curation-tool\"\n    class=\"modal\"\n    tabindex=\"-1\"\n    role=\"dialog\"\n  >\n    <div\n      class=\"modal-dialog\"\n      role=\"document\"\n    >\n      <div class=\"modal-content\">\n        <!-- Header of tunit editor modal dialog box -->\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\">\n            About this tool\n          </h5>\n          <button\n            type=\"button\"\n            class=\"close\"\n            data-dismiss=\"modal\"\n            aria-label=\"Close\"\n          >\n            <span aria-hidden=\"true\">\n              &times;\n            </span>\n          </button>\n        </div>\n\n        <!-- Body of the about-us modal dialog -->\n        <div class=\"modal-body col-md-12\">\n          <p>\n            The Phyloreferencing Curation Tool was built as part of the\n            <a href=\"https://www.phyloref.org\">\n              Phyloreferencing project\n            </a>,\n            funded by the US National Science Foundation through collaborative\n            grants <a href=\"http://www.nsf.gov/awardsearch/showAward?AWD_ID=1458484\">\n              DBI-1458484\n            </a>\n            and <a href=\"http://www.nsf.gov/awardsearch/showAward?AWD_ID=1458604\">\n              DBI-1458604\n            </a>.\n            See <a href=\"http://www.phyloref.org/about/#funding\">\n              Funding\n            </a> for details.\n          </p>\n\n          <p>The Curation Tool uses a number of open-source libraries, including:</p>\n\n          <ul>\n            <li>\n              <a href=\"https://cli.vuejs.org/\">\n                Vue CLI 3\n              </a>\n            </li>\n            <li>\n              <a href=\"https://getbootstrap.com/\">\n                Bootstrap\n              </a>\n            </li>\n            <li>\n              <a href=\"https://jquery.com/\">\n                jQuery\n              </a>\n            </li>\n            <li>\n              <a href=\"https://github.com/veg/phylotree.js\">\n                phylotree.js\n              </a>,\n              published as <a href=\"https://doi.org/10.1186/s12859-018-2283-2\">\n                Shank <em>et al</em>, 2018\n              </a>\n            </li>\n            <li>\n              <a href=\"https://d3js.org/\">\n                D3.js\n              </a>\n            </li>\n            <li>\n              <a href=\"https://momentjs.com/\">\n                Moment.js\n              </a>\n            </li>\n            <li>\n              <a href=\"https://github.com/eligrey/FileSaver.js\">\n                FileSaver.js\n              </a>\n            </li>\n            <li>\n              <a href=\"https://fontawesome.com/\">\n                Font Awesome\n              </a>\n            </li>\n          </ul>\n        </div>\n\n        <!-- Footer of the about-us modal dialog -->\n        <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-secondary\"\n            data-dismiss=\"modal\"\n          >\n            Close\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n/*\n * A modal for displaying information about the Curation Tool\n */\n\nexport default {\n  name: 'AboutCurationToolModal',\n};\n</script>\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('TopNavigationBar',{attrs:{\"version\":_vm.CURATION_TOOL_VERSION}}),_c('div',{attrs:{\"id\":\"wrapper\"}},[_c('Sidebar'),_c('div',{attrs:{\"id\":\"page-content-wrapper\"}},[(_vm.display.phyloref)?[(_vm.display.specifier)?[_c('SpecifierView',{attrs:{\"phyloref\":_vm.display.phyloref,\"specifier\":_vm.display.specifier}})]:[_c('PhylorefView',{attrs:{\"phyloref\":_vm.display.phyloref,\"specifier\":_vm.display.specifier}})]]:(_vm.display.phylogeny)?[_c('PhylogenyView',{attrs:{\"phylogeny\":_vm.display.phylogeny}})]:[_c('PhyxView')]],2)],1),_c('AboutCurationToolModal'),_c('AdvancedOptionsModal')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export * from \"-!cache-loader?{\\\"cacheDirectory\\\":\\\"node_modules/.cache/vue-loader\\\",\\\"cacheIdentifier\\\":\\\"ca0e2238-vue-loader-template\\\"}!../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=template&id=4429c0c6&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('ModifiedCard',{attrs:{\"message\":\"This phyloreference has been modified since being loaded! Use 'Save as JSON' to save your changes.\",\"compare\":_vm.selectedPhyloref,\"compare-to\":_vm.currentPhyx.phylorefs[_vm.currentPhyx.phylorefs.indexOf(_vm.selectedPhyloref)]}}),(!_vm.display.phylogeny)?_c('div',{staticClass:\"card\"},[_c('h5',{staticClass:\"card-header\"},[_vm._v(\"\\n      Phyloreference information\\n    \")]),_c('div',{staticClass:\"card-body\"},[_c('form',[_c('div',{staticClass:\"form-group row\"},[_c('label',{staticClass:\"col-form-label col-md-2\",attrs:{\"for\":\"label\"}},[_vm._v(\"\\n            Label\\n          \")]),_c('div',{staticClass:\"col-md-10\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.selectedPhylorefLabel),expression:\"selectedPhylorefLabel\"}],staticClass:\"form-control\",attrs:{\"id\":\"label\",\"type\":\"text\",\"placeholder\":\"Phyloreference label\"},domProps:{\"value\":(_vm.selectedPhylorefLabel)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.selectedPhylorefLabel=$event.target.value}}})])]),_c('div',{staticClass:\"form-group row\"},[_c('label',{staticClass:\"col-form-label col-md-2\",attrs:{\"for\":\"definition\"}},[_vm._v(\"\\n            Clade definition\\n          \")]),_c('div',{staticClass:\"col-md-10\"},[_c('textarea',{directives:[{name:\"model\",rawName:\"v-model.lazy\",value:(_vm.selectedCladeDefinition),expression:\"selectedCladeDefinition\",modifiers:{\"lazy\":true}}],staticClass:\"form-control\",attrs:{\"id\":\"definition\",\"rows\":\"6\",\"placeholder\":\"Phylogenetic clade definition\"},domProps:{\"value\":(_vm.selectedCladeDefinition)},on:{\"change\":function($event){_vm.selectedCladeDefinition=$event.target.value}}})])]),_c('div',{staticClass:\"form-group row\"},[_c('label',{staticClass:\"col-form-label col-md-2\",attrs:{\"for\":\"curator-comments\"}},[_vm._v(\"\\n            Curator comments\\n          \")]),_c('div',{staticClass:\"col-md-10\"},[_c('textarea',{directives:[{name:\"model\",rawName:\"v-model.lazy\",value:(_vm.selectedCuratorComments),expression:\"selectedCuratorComments\",modifiers:{\"lazy\":true}}],staticClass:\"form-control\",attrs:{\"id\":\"curator-comments\",\"rows\":\"2\",\"placeholder\":\"Curator notes relating to this phyloreference\"},domProps:{\"value\":(_vm.selectedCuratorComments)},on:{\"change\":function($event){_vm.selectedCuratorComments=$event.target.value}}})])])])])]):_vm._e(),_c('div',{staticClass:\"card mt-2\"},[_c('h5',{staticClass:\"card-header\"},[_vm._v(\"\\n      Specifiers\\n    \")]),_c('div',{staticClass:\"card-body\"},[_vm._l((_vm.selectedPhyloref.internalSpecifiers),function(specifier,index){return _c('div',{staticClass:\"form-row input-group\"},[_vm._m(0,true),_c('input',{staticClass:\"form-control\",attrs:{\"readonly\":\"\",\"type\":\"text\"},domProps:{\"value\":_vm.getSpecifierLabel(specifier)}}),_c('div',{staticClass:\"input-group-append\"},[_c('button',{staticClass:\"btn btn-outline-secondary\",on:{\"click\":function($event){_vm.$store.commit('changeDisplay', {phyloref: _vm.selectedPhyloref, specifier: specifier})}}},[_vm._v(\"\\n            Edit\\n          \")])])])}),_vm._l((_vm.selectedPhyloref.externalSpecifiers),function(specifier,index){return _c('div',{staticClass:\"form-row input-group\"},[_vm._m(1,true),_c('input',{staticClass:\"form-control\",attrs:{\"readonly\":\"\",\"type\":\"text\"},domProps:{\"value\":_vm.getSpecifierLabel(specifier)}}),_c('div',{staticClass:\"input-group-append\"},[_c('button',{staticClass:\"btn btn-outline-secondary\",on:{\"click\":function($event){_vm.$store.commit('changeDisplay', {phyloref: _vm.selectedPhyloref, specifier: specifier})}}},[_vm._v(\"\\n            Edit\\n          \")])])])})],2)]),_vm._l((_vm.currentPhyx.phylogenies),function(phylogeny,phylogenyIndex){return [(_vm.selectedPhylogeny === undefined || _vm.selectedPhylogeny === phylogeny)?[_c('div',{staticClass:\"card mt-2\"},[_c('h5',{staticClass:\"card-header\"},[_vm._v(\"\\n          Expected and actual resolution \"),(_vm.display.phylogeny)?_c('span',[_vm._v(\"\\n            of \"+_vm._s(_vm.phyloref.label || 'unlabeled phyloreference')+\"\\n          \")]):_vm._e(),_vm._v(\" on \"+_vm._s(phylogeny.label || (\"Phylogeny \" + (phylogenyIndex + 1)))+\"\\n        \")]),_c('div',{staticClass:\"card-body\"},[_c('div',{staticClass:\"form-row\"},[_c('label',{staticClass:\"col-md-2 col-form-label\",attrs:{\"for\":\"expected-nodes\"}},[_vm._v(\"\\n              Expected nodes\\n            \")]),_c('div',{staticClass:\"input-group col-md-4\"},[_c('div',{staticClass:\"input-group-prepend\"},[_c('a',{staticClass:\"btn btn-outline-secondary\",attrs:{\"href\":'#current_expected_label_phylogeny_' + phylogenyIndex,\"title\":\"Click here to jump to the expected label\",\"type\":\"button\"}},[_vm._v(\"\\n                  Go to node\\n                \")])]),(_vm.getExpectedNodeLabels(phylogeny).length === 0)?[_c('input',{staticClass:\"form-control\",attrs:{\"readonly\":\"\",\"type\":\"text\",\"value\":\"No nodes could be matched\"}})]:_vm._e(),(_vm.getExpectedNodeLabels(phylogeny).length === 1)?[_c('input',{staticClass:\"form-control\",attrs:{\"readonly\":\"\",\"type\":\"text\"},domProps:{\"value\":_vm.getExpectedNodeLabels(phylogeny)[0]}})]:_vm._e(),(_vm.getExpectedNodeLabels(phylogeny).length > 1)?[_c('input',{staticClass:\"form-control\",attrs:{\"readonly\":\"\",\"type\":\"text\"},domProps:{\"value\":_vm.getExpectedNodeLabels(phylogeny).length + ' nodes matched: ' + _vm.getExpectedNodeLabels(phylogeny, _vm.selectedPhyloref).join(', ')}})]:_vm._e(),_c('div',{staticClass:\"input-group-append\"},[_vm._m(2,true),_c('div',{staticClass:\"dropdown-menu dropright\",staticStyle:{\"height\":\"30em\",\"overflow\":\"visible scroll\"},attrs:{\"aria-labelledby\":\"expected-nodes-dropdown\"}},[_c('a',{staticClass:\"dropdown-header\"},[_vm._v(\"\\n                    Labeled internal nodes in this phylogeny\\n                  \")]),_vm._l((_vm.getNodeLabels(phylogeny, 'internal')),function(nodeLabel){return _c('a',{staticClass:\"dropdown-item\",class:{active: _vm.getExpectedNodeLabels(phylogeny).includes(nodeLabel)},attrs:{\"href\":\"#selected-phyloref\"},on:{\"click\":function($event){_vm.togglePhylorefExpectedNodeLabel(phylogeny, _vm.selectedPhyloref, nodeLabel)}}},[_vm._v(\"\\n                    \"+_vm._s(nodeLabel)+\"\\n                  \")])}),_c('div',{staticClass:\"dropdown-divider\"}),_c('a',{staticClass:\"dropdown-header\"},[_vm._v(\"\\n                    Labeled terminal nodes in this phylogeny\\n                  \")]),_vm._l((_vm.getNodeLabels(phylogeny, 'terminal')),function(nodeLabel){return _c('a',{staticClass:\"dropdown-item\",class:{active: _vm.getExpectedNodeLabels(phylogeny).includes(nodeLabel)},attrs:{\"href\":\"#selected-phyloref\"},on:{\"click\":function($event){_vm.togglePhylorefExpectedNodeLabel(phylogeny, _vm.selectedPhyloref, nodeLabel)}}},[_vm._v(\"\\n                    \"+_vm._s(nodeLabel)+\"\\n                  \")])})],2)])],2),_c('label',{staticClass:\"col-form-label col-md-2\",attrs:{\"for\":\"actual-nodes\"}},[_vm._v(\"\\n              Actual resolved nodes\\n            \")]),_c('div',{staticClass:\"input-group col-md-4\"},[_c('div',{staticClass:\"input-group-prepend\"},[_c('a',{staticClass:\"btn btn-outline-secondary\",attrs:{\"href\":'#current_pinning_node_phylogeny_' + phylogenyIndex,\"title\":\"Click here to jump to this node\",\"type\":\"button\"}},[_vm._v(\"\\n                  Go to node\\n                \")])]),(!_vm.nodesResolved)?[_c('input',{staticClass:\"form-control\",attrs:{\"readonly\":\"\",\"type\":\"text\",\"value\":\"Click 'Reason' to reason over all phyloreferences.\"}})]:[(_vm.getResolvedNodes(phylogeny).length === 0)?[_c('input',{staticClass:\"form-control\",attrs:{\"readonly\":\"\",\"type\":\"text\"},domProps:{\"value\":'No nodes could be matched'}})]:_vm._e(),(_vm.getResolvedNodes(phylogeny).length === 1)?[_c('input',{staticClass:\"form-control\",attrs:{\"readonly\":\"\",\"type\":\"text\"},domProps:{\"value\":_vm.getResolvedNodes(phylogeny)[0]}})]:_vm._e(),(_vm.getResolvedNodes(phylogeny).length > 1)?[_c('input',{staticClass:\"form-control\",attrs:{\"readonly\":\"\",\"type\":\"text\"},domProps:{\"value\":_vm.getResolvedNodes(phylogeny).length + ' nodes matched: ' + _vm.getResolvedNodes(phylogeny).join(', ')}})]:_vm._e()]],2)]),_c('div',{staticClass:\"card mt-4 p-2\"},[_c('Phylotree',{attrs:{\"phylogeny-index\":String(phylogenyIndex),\"phylogeny\":phylogeny,\"phyloref\":_vm.selectedPhyloref,\"newick\":phylogeny.newick}})],1)])])]:_vm._e()]})],2)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"input-group-prepend\"},[_c('a',{staticClass:\"btn btn-outline-secondary\"},[_vm._v(\"\\n            Internal\\n          \")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"input-group-prepend\"},[_c('a',{staticClass:\"btn btn-outline-secondary\"},[_vm._v(\"\\n            External\\n          \")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('button',{staticClass:\"btn btn-outline-secondary dropdown-toggle\",attrs:{\"id\":\"expected-nodes-dropdown\",\"type\":\"button\",\"data-toggle\":\"dropdown\",\"aria-haspopup\":\"true\",\"aria-expanded\":\"false\"}},[_vm._v(\"\\n                  Change \"),_c('span',{staticClass:\"caret\"})])}]\n\nexport { render, staticRenderFns }","export * from \"-!cache-loader?{\\\"cacheDirectory\\\":\\\"node_modules/.cache/vue-loader\\\",\\\"cacheIdentifier\\\":\\\"ca0e2238-vue-loader-template\\\"}!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PhylorefView.vue?vue&type=template&id=7d6b7495&\"","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ModifiedCard.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ModifiedCard.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PhylorefView.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PhylorefView.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Phylotree.vue?vue&type=template&id=10daa235&\"\nimport script from \"./Phylotree.vue?vue&type=script&lang=js&\"\nexport * from \"./Phylotree.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Phylotree.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"Phylotree.vue\"\nexport default component.exports","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ModifiedIcon.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ModifiedIcon.vue?vue&type=script&lang=js&\"","<template>\n  <div\n    v-if=\"dataChanged\"\n    class=\"card mb-2 border-dark\"\n  >\n    <div class=\"card-header bg-warning\">\n      Warning!\n    </div>\n    <div class=\"card-body\">\n      {{ message }}\n    </div>\n  </div>\n</template>\n\n<script>\n/*\n * Creates a card with a warning if a variable has changed in value as compared\n * to a comparison object.\n *\n * If/when we need to create more kinds of warning cards, we'll probably spin\n * that off as its own component.\n */\n\nimport { isEqual } from 'lodash';\n\nexport default {\n  name: 'ModifiedCard',\n  props: {\n    message: {\n      type: String,\n      default: 'This element has changed! Please remember to save it.',\n    },\n    compare: Object, /* Object to check for changes. */\n    compareTo: Object, /* Changes will be determined by comparing this to this.compare */\n  },\n  computed: {\n    dataChanged() { return !isEqual(this.compare, this.compareTo); },\n  },\n};\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PhylogenyView.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PhylogenyView.vue?vue&type=script&lang=js&\"","<template>\n  <div\n    id=\"advanced-options\"\n    class=\"modal\"\n    tabindex=\"-1\"\n    role=\"dialog\"\n  >\n    <div\n      class=\"modal-dialog\"\n      role=\"document\"\n    >\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\">\n            Advanced options\n          </h5>\n          <button\n            type=\"button\"\n            class=\"close\"\n            data-dismiss=\"modal\"\n            aria-label=\"Close\"\n          >\n            <span aria-hidden=\"true\">\n              &times;\n            </span>\n          </button>\n        </div>\n\n        <!-- Body of the about-us modal dialog -->\n        <div class=\"modal-body\">\n          <p>\n            The following is a representation of this PHYX in JSON. You\n            can edit the JSON directly if you like.\n          </p>\n\n          <div\n            v-if=\"JSONParsingError\"\n            class=\"card text-white bg-danger mb-2\"\n          >\n            <div class=\"card-body\">\n              <p class=\"card-text\">\n                This JSON could not be parsed: {{ JSONParsingError }}\n              </p>\n            </div>\n          </div>\n\n          <textarea\n            id=\"test-content\"\n            v-model.lazy=\"phyxAsJSON\"\n            style=\"width: 100%; margin: auto;\"\n            rows=\"10\"\n          />\n        </div>\n        <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-info\"\n            @click=\"downloadAsJSONLD()\"\n          >\n            Download as JSON-LD\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-secondary\"\n            data-dismiss=\"modal\"\n          >\n            Close\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n/*\n * A modal for displaying advanced options, including:\n *  - An interactive display of the Phyx file as a JSON, allowing it to be edited\n *    directly.\n *  - A download button that allows the JSON-LD file to be downloaded for debugging.\n */\n\nimport { PHYXWrapper } from '@phyloref/phyx';\nimport { saveAs } from 'filesaver.js-npm';\n\nexport default {\n  name: 'AdvancedOptionsPanel',\n  data() {\n    return {\n      JSONParsingError: undefined,\n    };\n  },\n  computed: {\n    phyxAsJSON: {\n      get() {\n        // Return the value of the Phyx file as a JSON string.\n        return this.$store.getters.getPhyxAsJSON;\n      },\n      set(value) {\n        // Attempt to parse the JSON string and replace the current test file\n        // with that. Note that this won't reset the loaded Phyx, so will appear\n        // as a change to the file.\n        try {\n          const phyx = JSON.parse(value);\n          this.$store.commit('setCurrentPhyx', phyx);\n          this.JSONParsingError = undefined;\n        } catch (ex) {\n          this.JSONParsingError = ex.message;\n        }\n      },\n    },\n  },\n  methods: {\n    downloadAsJSONLD() {\n      // Exports the PHYX file as an OWL/JSON-LD file, which can be opened in\n      // Protege or converted into OWL/XML or other formats.\n      const wrapped = new PHYXWrapper(this.$store.state.phyx.currentPhyx);\n      const content = [JSON.stringify([wrapped.asJSONLD()], undefined, 4)];\n\n      // Save to local hard drive.\n      const jsonldFile = new File(content, 'download.jsonld', { type: 'application/json;charset=utf-8' });\n      saveAs(jsonldFile);\n    },\n  },\n};\n</script>\n","import { render, staticRenderFns } from \"./Sidebar.vue?vue&type=template&id=db2aacd2&\"\nimport script from \"./Sidebar.vue?vue&type=script&lang=js&\"\nexport * from \"./Sidebar.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"Sidebar.vue\"\nexport default component.exports","import { render, staticRenderFns } from \"./PhylogenyView.vue?vue&type=template&id=7bcfea4b&\"\nimport script from \"./PhylogenyView.vue?vue&type=script&lang=js&\"\nexport * from \"./PhylogenyView.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"PhylogenyView.vue\"\nexport default component.exports","/*\n * The UI Store module handles UI elements, such as which view is currently\n * displayed.\n */\nimport Vue from 'vue';\n\nexport default {\n  state: {\n    // What should be displayed?\n    display: {\n      phyloref: undefined,\n      phylogeny: undefined,\n      specifier: undefined,\n    },\n  },\n  mutations: {\n    changeDisplay(state, newDisplay) {\n      // Change the main view of the UI to select a particular element.\n      // The new view object should contain some combination of the following keys:\n      //  'phyloref': A phyloreference to display.\n      //  'phylogeny': A phylogeny to display.\n      //  'specifier': A specifier to display.\n      Vue.set(state, 'display', newDisplay);\n    },\n  },\n};\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Sidebar.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Sidebar.vue?vue&type=script&lang=js&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('ModifiedCard',{attrs:{\"message\":\"This phylogeny has been modified since being loaded. Use 'Save as JSON' to save your changes.\",\"compare\":_vm.selectedPhylogeny,\"compare-to\":_vm.loadedPhyx.phylogenies[_vm.currentPhyx.phylogenies.indexOf(_vm.selectedPhylogeny)]}}),_c('div',{staticClass:\"card\"},[_c('h5',{staticClass:\"card-header\"},[_vm._v(\"\\n      Phylogeny information\\n    \")]),_c('div',{staticClass:\"card-body\"},[_c('form',[_c('div',{staticClass:\"form-group row\"},[_c('label',{staticClass:\"col-md-2 col-form-label\",attrs:{\"for\":\"phylogenyLabel\"}},[_vm._v(\"\\n            Label\\n          \")]),_c('div',{staticClass:\"col-md-10\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model.trim\",value:(_vm.phylogenyLabel),expression:\"phylogenyLabel\",modifiers:{\"trim\":true}}],staticClass:\"form-control\",attrs:{\"id\":\"phylogenyLabel\",\"type\":\"text\",\"placeholder\":\"Enter phylogeny name\"},domProps:{\"value\":(_vm.phylogenyLabel)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.phylogenyLabel=$event.target.value.trim()},\"blur\":function($event){_vm.$forceUpdate()}}})])]),_c('div',{staticClass:\"form-group row\"},[_c('label',{staticClass:\"col-md-2 col-form-label\",attrs:{\"for\":\"phylogenyDescription\"}},[_vm._v(\"\\n            Description\\n          \")]),_c('div',{staticClass:\"col-md-10\"},[_c('textarea',{directives:[{name:\"model\",rawName:\"v-model.trim\",value:(_vm.phylogenyDescription),expression:\"phylogenyDescription\",modifiers:{\"trim\":true}}],staticClass:\"form-control\",attrs:{\"id\":\"phylogenyDescription\",\"type\":\"text\",\"placeholder\":\"Enter phylogeny description\"},domProps:{\"value\":(_vm.phylogenyDescription)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.phylogenyDescription=$event.target.value.trim()},\"blur\":function($event){_vm.$forceUpdate()}}})])]),_c('div',{staticClass:\"form-group row\"},[_c('label',{staticClass:\"col-md-2 control-label\",attrs:{\"for\":\"newick\"}},[_vm._v(\"\\n            Newick\\n          \")]),_c('div',{staticClass:\"col-md-10 input-group\"},[_c('textarea',{directives:[{name:\"model\",rawName:\"v-model.lazy\",value:(_vm.phylogenyNewick),expression:\"phylogenyNewick\",modifiers:{\"lazy\":true}}],staticClass:\"form-control\",attrs:{\"rows\":\"5\",\"placeholder\":\"Enter Newick string for phylogeny here\"},domProps:{\"value\":(_vm.phylogenyNewick)},on:{\"change\":function($event){_vm.phylogenyNewick=$event.target.value}}})])])])])]),(_vm.phylogenyNewickErrors.length !== 0)?_c('div',{staticClass:\"card border-dark mt-2\"},[_c('h5',{staticClass:\"card-header bg-danger\"},[_vm._v(\"\\n      Errors occurred while parsing Newick string\\n    \")]),_c('div',{staticClass:\"card-body\"},[_vm._l((_vm.phylogenyNewickErrors),function(error,errorIndex){return [_c('p',[_c('strong',[_vm._v(_vm._s(error.title)+\".\")]),_vm._v(\" \"+_vm._s(error.message))])]})],2)]):_vm._e(),(_vm.phylogenyNewickErrors.length === 0)?_c('div',{staticClass:\"card mt-2\"},[_c('h5',{staticClass:\"card-header\"},[_vm._v(\"\\n      Phylogeny visualization\\n    \")]),_c('div',{staticClass:\"card-body\"},[_c('Phylotree',{attrs:{\"phylogeny\":_vm.selectedPhylogeny}})],1)]):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export * from \"-!cache-loader?{\\\"cacheDirectory\\\":\\\"node_modules/.cache/vue-loader\\\",\\\"cacheIdentifier\\\":\\\"ca0e2238-vue-loader-template\\\"}!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PhylogenyView.vue?vue&type=template&id=7bcfea4b&\"","import { render, staticRenderFns } from \"./TopNavigationBar.vue?vue&type=template&id=70573c7a&\"\nimport script from \"./TopNavigationBar.vue?vue&type=script&lang=js&\"\nexport * from \"./TopNavigationBar.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"TopNavigationBar.vue\"\nexport default component.exports","/*\n * Primary store module for the currently loaded Phyx file. We also keep a copy\n * of the Phyx file as it was loaded, allowing modifications to be noted. This\n * module also stores and resets the reasoning results provided by the JPhyloRef\n * server.\n */\n\nimport Vue from 'vue';\n\nexport default {\n  state: {\n    // The currently loaded Phyx file. All methods modify and change this variable.\n    currentPhyx: {\n      phylorefs: [],\n      phylogenies: [],\n    },\n\n    // A backup copy of the previously loaded Phyx file. Where this differs from\n    // currentPhyx, we know that the user has modified something.\n    loadedPhyx: {\n      phylorefs: [],\n      phylogenies: [],\n    },\n\n    // The reasoning results returned by JPhyloRef.\n    reasoningResults: undefined,\n  },\n  getters: {\n    // Return the current Phyx file as a JSON string.\n    getPhyxAsJSON: state => JSON.stringify(state.currentPhyx, undefined, 4),\n  },\n  mutations: {\n    setCurrentPhyx(state, phyx) {\n      // Replace the current Phyx file using an object. This method does NOT\n      // update the loaded Phyx file, so these changes are treated as changes\n      // made since the file was last loaded.\n      Vue.set(state, 'currentPhyx', phyx);\n\n      // When the current phyx is changed, reasoning results are invalidated,\n      // so let's clear those.\n      Vue.set(state, 'reasoningResults', undefined);\n    },\n    setLoadedPhyx(state, phyx) {\n      // Replace the current loaded Phyx file using an object. This also updates\n      // the loaded Phyx, so we can check for changes from the loaded file.\n      //\n      // This can be called without an argument to reset the loaded phyx to be\n      // identical to the current Phyx.\n      if (phyx === undefined || phyx === state.currentPhyx) {\n        // A common error is using the same object as the current Phyx and the\n        // loaded Phyx. In that case, we deep-copy loaded Phyx so that modifying\n        // one won't automatically modify the other.\n        Vue.set(state, 'loadedPhyx', JSON.parse(JSON.stringify(state.currentPhyx)));\n      } else {\n        Vue.set(state, 'loadedPhyx', phyx);\n      }\n    },\n    createEmptyPhyloref(state) {\n      // Create a new, empty phyloreference.\n      state.currentPhyx.phylorefs.push({});\n    },\n    createEmptyPhylogeny(state) {\n      // Create a new, empty phylogeny.\n      state.currentPhyx.phylogenies.push({});\n    },\n    setReasoningResults(state, payload) {\n      // Sets the \"reasoning results\" -- the results of reasoning returned by JPhyloRef.\n      Vue.set(state, 'reasoningResults', payload);\n    },\n  },\n};\n","<template>\n  <div>\n    <!-- Add a warning if this specifier has changed -->\n    <ModifiedCard\n      message=\"This specifier has been modified since being loaded! Use 'Save as JSON' to save your changes.\"\n      :compare=\"selectedSpecifier\"\n      :compare-to=\"loadedSpecifier\"\n    />\n\n    <div class=\"card\">\n      <h5 class=\"card-header\">\n        Specifier\n      </h5>\n      <div class=\"card-body\">\n        <div class=\"form-group row\">\n          <label\n            for=\"specifier-type\"\n            class=\"col-form-label col-md-2\"\n          >\n            Specifier type\n          </label>\n          <div class=\"col-md-10\">\n            <select\n              id=\"specifier-type\"\n              v-model=\"specifierType\"\n              class=\"form-control\"\n            >\n              <option>Internal specifier</option>\n              <option>External specifier</option>\n            </select>\n          </div>\n        </div>\n\n        <div class=\"form-group row\">\n          <label\n            for=\"verbatim-specifier\"\n            class=\"col-form-label col-md-2\"\n          >\n            Verbatim specifier\n          </label>\n          <div class=\"col-md-10\">\n            <input\n              id=\"verbatim-specifier\"\n              v-model.trim=\"selectedVerbatimSpecifier\"\n              type=\"text\"\n              class=\"form-control\"\n              placeholder=\"Enter the verbatim description of this specifier\"\n            >\n          </div>\n        </div>\n\n        <div class=\"card mb-2\">\n          <h6 class=\"card-header\">\n            Scientific names\n          </h6>\n          <div class=\"card-body\">\n            <div v-for=\"(sciname, index) of selectedSpecifierFirstTUnit.scientificNames\">\n              <div id=\"sciname\">\n                <div class=\"input-group\">\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    :value=\"sciname.scientificName\"\n                    @change=\"$store.commit('setSpecifierPart', { specifierPart: sciname, scientificName: $event.target.value })\"\n                  >\n                  <div class=\"input-group-append\">\n                    <button\n                      class=\"btn btn-outline-secondary details\"\n                      type=\"button\"\n                      onclick=\"$(this).parents().filter('#sciname').find('.details').toggleClass('d-none')\"\n                    >\n                      Show details\n                    </button>\n                    <button\n                      class=\"btn btn-outline-secondary details d-none\"\n                      type=\"button\"\n                      onclick=\"$(this).parents().filter('#sciname').find('.details').toggleClass('d-none')\"\n                    >\n                      Hide details\n                    </button>\n                    <button\n                      class=\"btn btn-outline-danger\"\n                      type=\"button\"\n                      @click=\"$store.commit('deleteFromSpecifier', {specifier: selectedSpecifierFirstTUnit, scientificName: sciname})\"\n                    >\n                      &cross;\n                    </button>\n                  </div>\n                </div>\n                <ul class=\"details d-none\">\n                  <li>Scientific name: <em>{{ wrappedScientificName(sciname).scientificName }}</em></li>\n                  <li>Genus: <em>{{ wrappedScientificName(sciname).genus }}</em></li>\n                  <li>Specific epithet: <em>{{ wrappedScientificName(sciname).specificEpithet }}</em></li>\n                </ul>\n              </div>\n            </div>\n            <input\n              v-model.lazy=\"addNewScientificName\"\n              type=\"text\"\n              class=\"form-control\"\n              placeholder=\"Enter a new scientific name here.\"\n            >\n          </div>\n        </div>\n\n        <div class=\"card mb-2\">\n          <h6 class=\"card-header\">\n            Specimens\n          </h6>\n          <div class=\"card-body\">\n            <div v-for=\"(specimen, index) of selectedSpecifierFirstTUnit.includesSpecimens\">\n              <div id=\"specimen\">\n                <div class=\"input-group\">\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    :value=\"specimen.occurrenceID\"\n                    @change=\"$store.commit('setSpecifierPart', { specifierPart: specimen, occurenceID: $event.target.value })\"\n                  >\n                  <div class=\"input-group-append\">\n                    <button\n                      class=\"btn btn-outline-secondary details\"\n                      type=\"button\"\n                      onclick=\"$(this).parents().filter('#specimen').find('.details').toggleClass('d-none')\"\n                    >\n                      Show details\n                    </button>\n                    <button\n                      class=\"btn btn-outline-secondary details d-none\"\n                      type=\"button\"\n                      onclick=\"$(this).parents().filter('#specimen').find('.details').toggleClass('d-none')\"\n                    >\n                      Hide details\n                    </button>\n                    <button\n                      class=\"btn btn-outline-danger\"\n                      type=\"button\"\n                      @click=\"$store.commit('deleteFromSpecifier', {specifier: selectedSpecifierFirstTUnit, specimen})\"\n                    >\n                      &cross;\n                    </button>\n                  </div>\n                </div>\n                <ul class=\"details d-none\">\n                  <li>Occurrence ID: {{ wrappedSpecimen(specimen).occurrenceID }}</li>\n                  <li>Institution code: {{ wrappedSpecimen(specimen).institutionCode || '(none)' }}</li>\n                  <li>Collection code: {{ wrappedSpecimen(specimen).collectionCode || '(none)' }}</li>\n                  <li>Catalog number: {{ wrappedSpecimen(specimen).catalogNumber || '(none)' }}</li>\n                </ul>\n              </div>\n            </div>\n            <input\n              v-model.lazy=\"addNewSpecimen\"\n              type=\"text\"\n              class=\"form-control\"\n              placeholder=\"Enter a new specimen identifier here.\"\n            >\n          </div>\n        </div>\n\n        <div class=\"card mb-2\">\n          <h6 class=\"card-header\">\n            External references\n          </h6>\n          <div class=\"card-body\">\n            <div\n              v-for=\"(extref) of externalReferences\"\n              class=\"input-group\"\n            >\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                :value=\"extref\"\n                @change=\"$store.commit('updateSpecifierExternalReference', { specifier: selectedSpecifierFirstTUnit, fromExternalReference: extref, toExternalReference: $event.target.value })\"\n              >\n              <div class=\"input-group-append\">\n                <a\n                  class=\"btn btn-outline-secondary\"\n                  target=\"_new\"\n                  :href=\"extref\"\n                >\n                  Go to website\n                </a>\n                <button\n                  class=\"btn btn-outline-danger\"\n                  type=\"button\"\n                  @click=\"$store.commit('deleteFromSpecifier', {specifier: selectedSpecifierFirstTUnit, externalReference: extref})\"\n                >\n                  &cross;\n                </button>\n              </div>\n            </div>\n            <input\n              v-model.lazy=\"addNewExternalReference\"\n              type=\"text\"\n              class=\"form-control\"\n              placeholder=\"Enter a new external reference URI here.\"\n            >\n          </div>\n        </div>\n\n        <a\n          href=\"javascript: void(0)\"\n          class=\"btn btn-secondary mr-2 float-right\"\n          @click=\"$store.commit('changeDisplay', { phyloref: selectedPhyloref })\"\n        >\n          Close specifier view\n        </a>\n        <a\n          href=\"javascript: void(0)\"\n          class=\"btn btn-danger\"\n          @click=\"$store.commit('deleteSpecifier', { phyloref: selectedPhyloref, specifier: selectedSpecifier })\"\n        >\n          Delete specifier\n        </a>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { has } from 'lodash';\nimport { mapState } from 'vuex';\nimport {\n  ScientificNameWrapper,\n  SpecimenWrapper,\n} from '@phyloref/phyx';\nimport ModifiedCard from '../cards/ModifiedCard.vue';\n\nexport default {\n  name: 'SpecifierView',\n  components: {\n    ModifiedCard,\n  },\n  computed: {\n    loadedSpecifier() {\n      // Return the loaded version of this specifier (i.e. the version in loadedPhyx\n      // rather than currentPhyx).\n      const loadedPhyx = this.loadedPhyx;\n      const currentPhyx = this.currentPhyx;\n      const loadedPhyloref = loadedPhyx\n        .phylorefs[currentPhyx.phylorefs.indexOf(this.selectedPhyloref)];\n\n      if (loadedPhyloref === undefined) return undefined;\n      if (\n        has(this.selectedPhyloref, 'internalSpecifiers')\n        && has(loadedPhyloref, 'internalSpecifiers')\n        && this.selectedPhyloref.internalSpecifiers.includes(this.selectedSpecifier)\n      ) {\n        return loadedPhyloref\n          .internalSpecifiers[this.selectedPhyloref\n            .internalSpecifiers.indexOf(this.selectedSpecifier)];\n      }\n\n      if (\n        has(this.selectedPhyloref, 'externalSpecifiers')\n        && has(loadedPhyloref, 'externalSpecifiers')\n        && this.selectedPhyloref\n          .externalSpecifiers.includes(this.selectedSpecifier)\n      ) {\n        return loadedPhyloref\n          .externalSpecifiers[this.selectedPhyloref\n            .externalSpecifiers.indexOf(this.selectedSpecifier)];\n      }\n\n      return undefined;\n    },\n    specifierType: {\n      // Allow the type of this specifier (internal or external) to be returned or changed.\n      get() {\n        if (has(this.selectedPhyloref, 'internalSpecifiers') && this.selectedPhyloref.internalSpecifiers.includes(this.selectedSpecifier)) return 'Internal specifier';\n        if (has(this.selectedPhyloref, 'externalSpecifiers') && this.selectedPhyloref.externalSpecifiers.includes(this.selectedSpecifier)) return 'External specifier';\n        return undefined;\n      },\n      set(type) {\n        if (type === 'Internal specifier') {\n          this.$store.commit('setSpecifierType', { phyloref: this.selectedPhyloref, specifier: this.selectedSpecifier, specifierType: 'internal' });\n        } else if (type === 'External specifier') {\n          this.$store.commit('setSpecifierType', { phyloref: this.selectedPhyloref, specifier: this.selectedSpecifier, specifierType: 'external' });\n        } else {\n          throw new Error(`Unknown specifier type: ${type}`);\n        }\n      },\n    },\n    selectedVerbatimSpecifier: {\n      // Allow the verbatim specifier to be retrieved or changed.\n      get() { return this.selectedSpecifier.verbatimSpecifier; },\n      set(verbatimSpecifier) { this.$store.commit('setSpecifierProps', { specifier: this.selectedSpecifier, verbatimSpecifier }); },\n    },\n    selectedSpecifierFirstTUnit: {\n      // This is a temporary hack to reconcile the new single-tunit-to-specifier model\n      // and the existing multiple-tunits-for-each-specifier model. This computed value\n      // will return the first tunit and will later be replaced with selectedSpecifier.\n      get() {\n        // TODO remove hack.\n        if (!has(this.selectedSpecifier, 'referencesTaxonomicUnits')) this.selectedSpecifier.referencesTaxonomicUnits = [{}];\n        return this.selectedSpecifier.referencesTaxonomicUnits[0];\n      },\n    },\n    addNewScientificName: {\n      // Add a new scientific name to this specifier.\n      get() {\n        return '';\n      },\n      set(scientificName) {\n        if (scientificName.trim() === '') return;\n        this.$store.commit('addToSpecifier', { specifier: this.selectedSpecifierFirstTUnit, scientificName: { scientificName } });\n      },\n    },\n    addNewSpecimen: {\n      // Add a new specimen occurrence ID to this specifier.\n      get() {\n        return '';\n      },\n      set(occurrenceID) {\n        if (occurrenceID.trim() === '') return;\n        this.$store.commit('addToSpecifier', { specifier: this.selectedSpecifierFirstTUnit, specimen: { occurrenceID } });\n      },\n    },\n    addNewExternalReference: {\n      // Add a new external reference to this specifier.\n      get() {\n        return '';\n      },\n      set(extref) {\n        if (extref.trim() === '') return;\n        this.$store.commit('addToSpecifier', { specifier: this.selectedSpecifierFirstTUnit, externalReference: extref });\n      },\n    },\n    externalReferences() {\n      // Return a list of external references.\n      if (!this.selectedSpecifierFirstTUnit) return [];\n      if (!this.selectedSpecifierFirstTUnit.externalReferences) return [];\n      return this.selectedSpecifierFirstTUnit.externalReferences;\n    },\n    ...mapState({\n      currentPhyx: state => state.phyx.currentPhyx,\n      loadedPhyx: state => state.phyx.loadedPhyx,\n      phylogenies: state => state.phyx.currentPhyx.phylogenies,\n      selectedPhylogeny: state => state.ui.display.phylogeny,\n      selectedPhyloref: state => state.ui.display.phyloref,\n      selectedSpecifier: state => state.ui.display.specifier,\n      selectedTUnit: state => state.ui.display.tunit,\n    }),\n  },\n  methods: {\n    /* The following methods wrap scientific name and specimens for further processing. */\n    wrappedScientificName(sciname) { return new ScientificNameWrapper(sciname); },\n    wrappedSpecimen(specimen) { return new SpecimenWrapper(specimen); },\n  },\n};\n</script>\n"],"sourceRoot":""}